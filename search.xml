<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Three.Js开发WebGL地月环绕</title>
      <link href="/2022/04/20/ThreeJsWebGL_2022_4.20.01/"/>
      <url>/2022/04/20/ThreeJsWebGL_2022_4.20.01/</url>
      
        <content type="html"><![CDATA[<h1 id="Three-Js开发WebGL地月环绕"><a href="#Three-Js开发WebGL地月环绕" class="headerlink" title="Three.Js开发WebGL地月环绕"></a>Three.Js开发WebGL地月环绕</h1><blockquote><p>Three.Js GitHub地址：<a href="https://github.com/mrdoob/three.js">点击跳转</a></p></blockquote><blockquote><p>Three.Js API说明文档：<a href="https://threejs.org/docs/index.html#manual/zh/introduction/Creating-a-scene">点击跳转</a></p></blockquote><blockquote><p>或复制网页端Three.js源码使用：<a href="https://threejs.org/build/three.js">点击跳转</a></p></blockquote><blockquote><p>演示网站：<a href="https://arvinroad.github.io/3DEAMS.github.io/">点击跳转</a></p></blockquote><h2 id="完整实例代码："><a href="#完整实例代码：" class="headerlink" title="完整实例代码："></a>完整实例代码：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=Edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>3D地月环绕<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        *&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 背景 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">canvas</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">./resource/Demo04/imgs/starts.jpg</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">background-size</span>: cover;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.label</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">import</span> *<span class="keyword">as</span> THREE <span class="keyword">from</span> <span class="string">&#x27;./libs/build/three.module.js&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">import</span> &#123; OrbitControls &#125; <span class="keyword">from</span> <span class="string">&#x27;./libs/jsm/controls/OrbitControls.js&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">import</span> &#123; CSS2DRenderer,CSS2DObject &#125; <span class="keyword">from</span> <span class="string">&#x27;./libs/jsm/renderers/CSS2DRenderer.js&#x27;</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 声明全局变量</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> camera,scene,renderer,labelRenderer;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> moon,earth;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> clock = <span class="keyword">new</span> THREE.Clock();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> textureLoader = <span class="keyword">new</span> THREE.TextureLoader();    <span class="comment">// 实例化纹理加载器</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 地球月球半径大小</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> EARTH_RADIUS = <span class="number">2.5</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> MOON_RADIUS = <span class="number">0.27</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 透视相机</span></span></span><br><span class="line"><span class="javascript">            camera = <span class="keyword">new</span> THREE.PerspectiveCamera(<span class="number">45</span>,<span class="built_in">window</span>.innerWidth/<span class="built_in">window</span>.innerHeight,<span class="number">0.1</span>,<span class="number">200</span>);</span></span><br><span class="line"><span class="javascript">            camera.position.set(<span class="number">10</span>,<span class="number">5</span>,<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 实例化场景</span></span></span><br><span class="line"><span class="javascript">            scene = <span class="keyword">new</span> THREE.Scene();</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 聚光灯</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> dirLight = <span class="keyword">new</span> THREE.SpotLight(<span class="number">0xFFFFFF</span>);</span></span><br><span class="line"><span class="javascript">            dirLight.position.set(<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>);</span></span><br><span class="line"><span class="javascript">            dirLight.intensity = <span class="number">2</span>; <span class="comment">// 光源强度</span></span></span><br><span class="line"><span class="javascript">            dirLight.castShadow = <span class="literal">true</span>; <span class="comment">// 光照阴影</span></span></span><br><span class="line"><span class="javascript">            scene.add(dirLight);</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 添加环境光</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> aLight = <span class="keyword">new</span> THREE.AmbientLight(<span class="number">0xFFFFFF</span>);</span></span><br><span class="line"><span class="javascript">            aLight.intensity = <span class="number">0.3</span>; <span class="comment">// 调整环境光亮度</span></span></span><br><span class="line"><span class="javascript">            scene.add(aLight);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 月球</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> moonGeometry = <span class="keyword">new</span> THREE.SphereGeometry(MOON_RADIUS,<span class="number">16</span>,<span class="number">16</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> moonMaterial = <span class="keyword">new</span> THREE.MeshPhongMaterial(&#123; <span class="attr">map</span>:textureLoader.load(<span class="string">&#x27;./resource/Demo04/textures/planets/moon_1024.jpg&#x27;</span>) &#125;); <span class="comment">// 可高光材质</span></span></span><br><span class="line"><span class="javascript">            moon = <span class="keyword">new</span> THREE.Mesh(moonGeometry,moonMaterial);</span></span><br><span class="line"><span class="javascript">            moon.receiveShadow = <span class="literal">true</span>; <span class="comment">// 接收阴影</span></span></span><br><span class="line"><span class="javascript">            moon.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">            scene.add(moon);</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 地球</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> earthGeometry = <span class="keyword">new</span> THREE.SphereGeometry(EARTH_RADIUS,<span class="number">16</span>,<span class="number">16</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> earthMaterial = <span class="keyword">new</span> THREE.MeshPhongMaterial(&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">shininess</span>:<span class="number">5</span>,    <span class="comment">// 调低镜面反射</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">map</span>:textureLoader.load(<span class="string">&#x27;./resource/Demo04/textures/planets/earth_atmos_2048.jpg&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                <span class="attr">specularMap</span>:textureLoader.load(<span class="string">&#x27;./resource/Demo04/textures/planets/earth_specular_2048.jpg&#x27;</span>),</span></span><br><span class="line"><span class="javascript">                <span class="attr">normalMap</span>:textureLoader.load(<span class="string">&#x27;./resource/Demo04/textures/planets/earth_normal_2048.jpg&#x27;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;)</span></span><br><span class="line"><span class="javascript">            earth = <span class="keyword">new</span> THREE.Mesh(earthGeometry,earthMaterial);</span></span><br><span class="line"><span class="javascript">            earth.receiveShadow = <span class="literal">true</span>; <span class="comment">// 接收阴影</span></span></span><br><span class="line"><span class="javascript">            earth.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">            scene.add(earth);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 地球标签</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> earthDiv = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            earthDiv.className = <span class="string">&#x27;label&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            earthDiv.textContent = <span class="string">&#x27;地球&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> eartchLabel = <span class="keyword">new</span> CSS2DObject(earthDiv);</span></span><br><span class="line"><span class="javascript">            eartchLabel.position.set(<span class="number">0</span>,EARTH_RADIUS+<span class="number">0.5</span>,<span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">            earth.add(eartchLabel);</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 月球标签</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> MoonDiv = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            MoonDiv.className = <span class="string">&#x27;label&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            MoonDiv.textContent = <span class="string">&#x27;月球&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> MoonLabel = <span class="keyword">new</span> CSS2DObject(MoonDiv);</span></span><br><span class="line"><span class="javascript">            MoonLabel.position.set(<span class="number">0</span>,MOON_RADIUS+<span class="number">0.5</span>,<span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">            moon.add(MoonLabel);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 渲染器</span></span></span><br><span class="line"><span class="javascript">            renderer = <span class="keyword">new</span> THREE.WebGLRenderer(&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">alpha</span>:<span class="literal">true</span>  <span class="comment">// 透明度</span></span></span><br><span class="line"><span class="javascript">            &#125;);</span></span><br><span class="line"><span class="javascript">            renderer.setPixelRatio(<span class="built_in">window</span>.devicePixelRatio);   <span class="comment">// 像素比</span></span></span><br><span class="line"><span class="javascript">            renderer.setSize(<span class="built_in">window</span>.innerWidth,<span class="built_in">window</span>.innerHeight);</span></span><br><span class="line"><span class="javascript">            renderer.shadowMap.enabled = <span class="literal">true</span>;   <span class="comment">// 渲染阴影</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.body.appendChild(renderer.domElement); <span class="comment">// 渲染到页面</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 标签渲染器</span></span></span><br><span class="line"><span class="javascript">            labelRenderer = <span class="keyword">new</span> CSS2DRenderer();</span></span><br><span class="line"><span class="javascript">            labelRenderer.setSize(<span class="built_in">window</span>.innerWidth,<span class="built_in">window</span>.innerHeight);</span></span><br><span class="line"><span class="javascript">            labelRenderer.domElement.style.position = <span class="string">&#x27;absolute&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            labelRenderer.domElement.style.top = <span class="string">&#x27;0px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.body.appendChild(labelRenderer.domElement);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 绑定三维场景控制器</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> controls = <span class="keyword">new</span> OrbitControls(camera,renderer.domElement);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oldTime = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染动画函数</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> elapsed = clock.getElapsedTime(); <span class="comment">// 获取时间</span></span></span><br><span class="line"><span class="javascript">            moon.position.set(<span class="built_in">Math</span>.sin(elapsed)*<span class="number">5</span>,<span class="number">0</span>,<span class="built_in">Math</span>.cos(elapsed)*<span class="number">5</span>);    <span class="comment">// (时间*半径)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 地球自转</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> axis = <span class="keyword">new</span> THREE.Vector3(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>); <span class="comment">// 环绕 Y 轴</span></span></span><br><span class="line"><span class="javascript">            earth.rotateOnAxis(axis,(elapsed - oldTime) * <span class="built_in">Math</span>.PI / <span class="number">10</span>);  <span class="comment">// 1s 转一下</span></span></span><br><span class="line"><span class="javascript">            renderer.render(scene,camera);</span></span><br><span class="line"><span class="javascript">            labelRenderer.render(scene,camera);</span></span><br><span class="line"><span class="javascript">            oldTime = elapsed;</span></span><br><span class="line"><span class="javascript">            requestAnimationFrame(animate);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        init()</span></span><br><span class="line"><span class="javascript">        animate()</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 自动调整摄像机</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onreset = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            camera.aspect = <span class="built_in">window</span>.innerWidth/<span class="built_in">window</span>.innerHeight;</span></span><br><span class="line"><span class="javascript">            camera.updateProjectionMatrix();</span></span><br><span class="line"><span class="javascript">            renderer.setSize(<span class="built_in">window</span>.innerWidth,<span class="built_in">window</span>.innerHeight);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> 博客网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Three.Js开发WebGL鼠标操作三维场景</title>
      <link href="/2022/04/20/ThreeJsWebGL_2022_4.19.04/"/>
      <url>/2022/04/20/ThreeJsWebGL_2022_4.19.04/</url>
      
        <content type="html"><![CDATA[<h1 id="Three-Js开发WebGL鼠标操作三维场景"><a href="#Three-Js开发WebGL鼠标操作三维场景" class="headerlink" title="Three.Js开发WebGL鼠标操作三维场景"></a>Three.Js开发WebGL鼠标操作三维场景</h1><blockquote><p>Three.Js GitHub地址：<a href="https://github.com/mrdoob/three.js">点击跳转</a></p></blockquote><blockquote><p>Three.Js API说明文档：<a href="https://threejs.org/docs/index.html#manual/zh/introduction/Creating-a-scene">点击跳转</a></p></blockquote><blockquote><p>或复制网页端Three.js源码使用：<a href="https://threejs.org/build/three.js">点击跳转</a></p></blockquote><h2 id="WEBGL-三维控制器-放置在Script标签下-："><a href="#WEBGL-三维控制器-放置在Script标签下-：" class="headerlink" title="WEBGL 三维控制器(放置在Script标签下)："></a>WEBGL 三维控制器(放置在Script标签下)：</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 三维场景控制器渲染</span></span><br><span class="line"><span class="keyword">var</span> controls = <span class="keyword">new</span> THREE.OrbitControls(camera,renderer.domElement);   <span class="comment">// 参数：(绑定的摄像机,要事件监听的HTML元素)</span></span><br><span class="line"><span class="comment">// 监听控制器鼠标事件</span></span><br><span class="line">controls.addEventListener(<span class="string">&#x27;change&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    renderer.render(scene,camera);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>OrbitControls 必须将要被控制的相机。该相机不允许是其他任何对象的子级，除非该对象是场景自身。</p><p>注意：这里为优化阴影反射效果对聚光灯属性进行了设置调整</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">spotLight.angle = <span class="built_in">Math</span>.PI / <span class="number">10</span>;  <span class="comment">// 聚光灯扩散范围</span></span><br><span class="line">spotLight.shadow.penumbra = <span class="number">0.05</span>    <span class="comment">// 阴影衰减情况</span></span><br><span class="line">spotLight.shadow.mapSize.window = <span class="number">1024</span>; <span class="comment">// 设置阴影精度</span></span><br><span class="line">spotLight.shadow.mapSize.innerHeight = <span class="number">1024</span>;</span><br></pre></td></tr></table></figure><h2 id="完整实例代码："><a href="#完整实例代码：" class="headerlink" title="完整实例代码："></a>完整实例代码：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=Edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Demo-01<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;libs/build/three.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;libs/js/controls/OrbitControls.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;webGl-output&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Script --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建场景</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> scene = <span class="keyword">new</span> THREE.Scene();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置摄像机 (45度,长宽比&lt;当前屏幕宽/屏幕高&gt;,最近可视距离,最远可视距离)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.PerspectiveCamera(<span class="number">45</span>,<span class="built_in">window</span>.innerWidth/<span class="built_in">window</span>.innerHeight,<span class="number">0.1</span>,<span class="number">2000</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建渲染器</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染器初始化颜色</span></span></span><br><span class="line"><span class="javascript">        renderer.setClearColor(<span class="keyword">new</span> THREE.Color(<span class="number">0xEEEEEE</span>));</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染输出 Canvas 画面大小</span></span></span><br><span class="line"><span class="javascript">        renderer.setSize(<span class="built_in">window</span>.innerWidth,<span class="built_in">window</span>.innerHeight);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置渲染物体阴影</span></span></span><br><span class="line"><span class="javascript">        renderer.shadowMapEnabled = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建显示卡迪坐标轴</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> axes = <span class="keyword">new</span> THREE.AxesHelper(<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 添加坐标系到场景</span></span></span><br><span class="line"><span class="javascript">        scene.add(axes);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 场景创建平面(地面几何体)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> planeGeometry = <span class="keyword">new</span> THREE.PlaneGeometry(<span class="number">60</span>,<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置平面(地面)材质</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> PlaneMaterial = <span class="keyword">new</span> THREE.MeshStandardMaterial(&#123;<span class="attr">color</span>:<span class="number">0xCCCCCC</span>&#125;);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建地面 通过 THREE.Mesh 进行结合操作</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> plane = <span class="keyword">new</span> THREE.Mesh(planeGeometry,PlaneMaterial);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 物体位移坐标</span></span></span><br><span class="line"><span class="javascript">        plane.rotation.x = -<span class="number">0.5</span>*<span class="built_in">Math</span>.PI;</span></span><br><span class="line"><span class="javascript">        plane.position.x = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        plane.position.y = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        plane.position.z = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置地面接收阴影</span></span></span><br><span class="line"><span class="javascript">        plane.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        plane.receiveShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 将地面添加到场景</span></span></span><br><span class="line"><span class="javascript">        scene.add(plane);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 添加立方体</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cubeGeometry = <span class="keyword">new</span> THREE.BoxGeometry(<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cubeMaterial = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">color</span>: <span class="number">0xFFB6C1</span>&#125;); <span class="comment">// 添加网格材质</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cube = <span class="keyword">new</span> THREE.Mesh(cubeGeometry,cubeMaterial);</span></span><br><span class="line"><span class="javascript">        cube.position.x = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        cube.position.y = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">        cube.position.z = <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 球体</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> sphereGeometry = <span class="keyword">new</span> THREE.SphereGeometry(<span class="number">4</span>,<span class="number">20</span>,<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> sphereMaterial = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">color</span>: <span class="number">0xFFB6C1</span>&#125;);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> Sphere = <span class="keyword">new</span> THREE.Mesh(sphereGeometry,sphereMaterial);</span></span><br><span class="line"><span class="javascript">        Sphere.position.x = <span class="number">10</span>;</span></span><br><span class="line"><span class="javascript">        Sphere.position.y = <span class="number">4</span>;</span></span><br><span class="line"><span class="javascript">        Sphere.position.z = <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 对象是否渲染到阴影贴图</span></span></span><br><span class="line"><span class="javascript">        cube.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        Sphere.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        scene.add(cube)</span></span><br><span class="line"><span class="javascript">        scene.add(Sphere);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建添加聚光灯</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> spotLight = <span class="keyword">new</span> THREE.SpotLight(<span class="number">0xFFFFFF</span>);</span></span><br><span class="line"><span class="javascript">        spotLight.position.set(<span class="number">130</span>,<span class="number">130</span>,-<span class="number">130</span>);</span></span><br><span class="line"><span class="javascript">        spotLight.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        spotLight.angle = <span class="built_in">Math</span>.PI / <span class="number">10</span>;  <span class="comment">// 聚光灯扩散范围</span></span></span><br><span class="line"><span class="javascript">        spotLight.shadow.penumbra = <span class="number">0.05</span>    <span class="comment">// 阴影衰减情况</span></span></span><br><span class="line"><span class="javascript">        spotLight.shadow.mapSize.window = <span class="number">1024</span>; <span class="comment">// 设置阴影精度</span></span></span><br><span class="line"><span class="javascript">        spotLight.shadow.mapSize.innerHeight = <span class="number">1024</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        scene.add(spotLight);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定位摄影机视角指向场景中心点</span></span></span><br><span class="line"><span class="javascript">        camera.position.x = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.position.y = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.position.z = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.lookAt(scene.position)</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染器输出添加至 HTML</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;webGl-output&#x27;</span>).appendChild(renderer.domElement);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 最终渲染</span></span></span><br><span class="line"><span class="javascript">        renderer.render(scene,camera);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 三维场景控制器渲染</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> controls = <span class="keyword">new</span> THREE.OrbitControls(camera,renderer.domElement);   <span class="comment">// 参数：(绑定的摄像机,要事件监听的HTML元素)</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 监听控制器鼠标事件</span></span></span><br><span class="line"><span class="javascript">        controls.addEventListener(<span class="string">&#x27;change&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">            renderer.render(scene,camera);</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 计算渲染时间</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> T0 = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染函数</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> T1 = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> T = T1 - T0;    <span class="comment">//  T 为时间差</span></span></span><br><span class="line"><span class="javascript">            T0 = T1;</span></span><br><span class="line"><span class="javascript">            renderer.render(scene,camera);</span></span><br><span class="line"><span class="javascript">            cube.rotateY(<span class="number">0.001</span> * T); <span class="comment">// 每1毫旋转0.001 * 时间差</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.requestAnimationFrame(render);   <span class="comment">// 递归</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 请求动画帧</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.requestAnimationFrame(render);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = init    <span class="comment">// 全部加载完成后运行</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> 博客网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Three.Js开发WebGL动画实现与请求动画帧</title>
      <link href="/2022/04/19/ThreeJsWebGL_2022_4.19.03/"/>
      <url>/2022/04/19/ThreeJsWebGL_2022_4.19.03/</url>
      
        <content type="html"><![CDATA[<h1 id="Three-Js开发WebGL动画实现与请求动画帧"><a href="#Three-Js开发WebGL动画实现与请求动画帧" class="headerlink" title="Three.Js开发WebGL动画实现与请求动画帧"></a>Three.Js开发WebGL动画实现与请求动画帧</h1><blockquote><p>Three.Js GitHub地址：<a href="https://github.com/mrdoob/three.js">点击跳转</a></p></blockquote><blockquote><p>Three.Js API说明文档：<a href="https://threejs.org/docs/index.html#manual/zh/introduction/Creating-a-scene">点击跳转</a></p></blockquote><blockquote><p>或复制网页端Three.js源码使用：<a href="https://threejs.org/build/three.js">点击跳转</a></p></blockquote><h2 id="WEBGL-动画实现与请求动画帧-放置在Script标签下-："><a href="#WEBGL-动画实现与请求动画帧-放置在Script标签下-：" class="headerlink" title="WEBGL 动画实现与请求动画帧(放置在Script标签下)："></a>WEBGL 动画实现与请求动画帧(放置在Script标签下)：</h2><p>动画渲染函数(不推荐使用：如果性能不足情况下间隔函数有可能形成卡帧现象)</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    renderer.render(scene,camera);</span><br><span class="line">    cube.rotateY(<span class="number">0.01</span>); <span class="comment">// 每帧绕 Y 轴旋转 0.01 弧度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">setInterval</span>(render,<span class="number">16</span>); <span class="comment">// 间隔函数 16毫秒旋转一次 60帧1s</span></span><br></pre></td></tr></table></figure><p>采用请求动画帧的方式可以确保我们的动画不会出现卡帧现象</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 渲染函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    renderer.render(scene,camera);</span><br><span class="line">    cube.rotateY(<span class="number">0.01</span>);</span><br><span class="line">    <span class="built_in">window</span>.requestAnimationFrame(render);   <span class="comment">// 递归</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 请求动画帧</span></span><br><span class="line"><span class="built_in">window</span>.requestAnimationFrame(render);</span><br></pre></td></tr></table></figure><p>requestAnimationFrame 很好的一个特点，它会按照浏览器的性能合理的安排计算和渲染。</p><p>requestAnimationFrame 请求间隔时间是不定的，所以我们要配套的进行时间的计算。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 计算渲染时间</span></span><br><span class="line"><span class="keyword">let</span> T0 = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> T1 = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">let</span> T = T1 - T0;    <span class="comment">//  T 为时间差</span></span><br><span class="line">    T0 = T1;</span><br><span class="line">    renderer.render(scene,camera);</span><br><span class="line">    cube.rotateY(<span class="number">0.001</span> * T); <span class="comment">// 每1毫旋转0.001 * 时间差</span></span><br><span class="line">    <span class="built_in">window</span>.requestAnimationFrame(render);   <span class="comment">// 递归</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 请求动画帧</span></span><br><span class="line"><span class="built_in">window</span>.requestAnimationFrame(render);</span><br></pre></td></tr></table></figure><h2 id="完整实例代码："><a href="#完整实例代码：" class="headerlink" title="完整实例代码："></a>完整实例代码：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=Edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Demo-01<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;libs/Three.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;webGl-output&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Script --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建场景</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> scene = <span class="keyword">new</span> THREE.Scene();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置摄像机 (45度,长宽比&lt;当前屏幕宽/屏幕高&gt;,最近可视距离,最远可视距离)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.PerspectiveCamera(<span class="number">45</span>,<span class="built_in">window</span>.innerWidth/<span class="built_in">window</span>.innerHeight,<span class="number">0.1</span>,<span class="number">2000</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建渲染器</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染器初始化颜色</span></span></span><br><span class="line"><span class="javascript">        renderer.setClearColor(<span class="keyword">new</span> THREE.Color(<span class="number">0xEEEEEE</span>));</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染输出 Canvas 画面大小</span></span></span><br><span class="line"><span class="javascript">        renderer.setSize(<span class="built_in">window</span>.innerWidth,<span class="built_in">window</span>.innerHeight);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置渲染物体阴影</span></span></span><br><span class="line"><span class="javascript">        renderer.shadowMapEnabled = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建显示卡迪坐标轴</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> axes = <span class="keyword">new</span> THREE.AxesHelper(<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 添加坐标系到场景</span></span></span><br><span class="line"><span class="javascript">        scene.add(axes);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 场景创建平面(地面几何体)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> planeGeometry = <span class="keyword">new</span> THREE.PlaneGeometry(<span class="number">60</span>,<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置平面(地面)材质</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> PlaneMaterial = <span class="keyword">new</span> THREE.MeshBasicMaterial(&#123;<span class="attr">color</span>:<span class="number">0xCCCCCC</span>&#125;);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建地面 通过 THREE.Mesh 进行结合操作</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> plane = <span class="keyword">new</span> THREE.Mesh(planeGeometry,PlaneMaterial);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 物体位移坐标</span></span></span><br><span class="line"><span class="javascript">        plane.rotation.x = -<span class="number">0.5</span>*<span class="built_in">Math</span>.PI;</span></span><br><span class="line"><span class="javascript">        plane.position.x = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        plane.position.y = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        plane.position.z = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//- 设置地面接收阴影</span></span></span><br><span class="line"><span class="javascript">        plane.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        plane.receiveShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 将地面添加到场景</span></span></span><br><span class="line"><span class="javascript">        scene.add(plane);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 添加立方体</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cubeGeometry = <span class="keyword">new</span> THREE.BoxGeometry(<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cubeMaterial = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">color</span>: <span class="number">0xFFB6C1</span>&#125;); <span class="comment">// 添加网格材质</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cube = <span class="keyword">new</span> THREE.Mesh(cubeGeometry,cubeMaterial);</span></span><br><span class="line"><span class="javascript">        cube.position.x = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        cube.position.y = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">        cube.position.z = <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 球体</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> sphereGeometry = <span class="keyword">new</span> THREE.SphereGeometry(<span class="number">4</span>,<span class="number">20</span>,<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> sphereMaterial = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">color</span>: <span class="number">0xFFB6C1</span>&#125;);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> Sphere = <span class="keyword">new</span> THREE.Mesh(sphereGeometry,sphereMaterial);</span></span><br><span class="line"><span class="javascript">        Sphere.position.x = <span class="number">10</span>;</span></span><br><span class="line"><span class="javascript">        Sphere.position.y = <span class="number">4</span>;</span></span><br><span class="line"><span class="javascript">        Sphere.position.z = <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 对象是否渲染到阴影贴图</span></span></span><br><span class="line"><span class="javascript">        cube.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        Sphere.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        scene.add(cube)</span></span><br><span class="line"><span class="javascript">        scene.add(Sphere);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建添加聚光灯</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> spotLight = <span class="keyword">new</span> THREE.SpotLight(<span class="number">0xFFFFFF</span>);</span></span><br><span class="line"><span class="javascript">        spotLight.position.set(<span class="number">130</span>,<span class="number">130</span>,-<span class="number">130</span>);</span></span><br><span class="line"><span class="javascript">        spotLight.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        scene.add(spotLight);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定位摄影机视角指向场景中心点</span></span></span><br><span class="line"><span class="javascript">        camera.position.x = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.position.y = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.position.z = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.lookAt(scene.position)</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染器输出添加至 HTML</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;webGl-output&#x27;</span>).appendChild(renderer.domElement);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 最终渲染</span></span></span><br><span class="line"><span class="javascript">        renderer.render(scene,camera);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 计算渲染时间</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> T0 = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染函数</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> T1 = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> T = T1 - T0;    <span class="comment">//  T 为时间差</span></span></span><br><span class="line"><span class="javascript">            T0 = T1;</span></span><br><span class="line"><span class="javascript">            renderer.render(scene,camera);</span></span><br><span class="line"><span class="javascript">            cube.rotateY(<span class="number">0.001</span> * T); <span class="comment">// 每1毫旋转0.001 * 时间差</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.requestAnimationFrame(render);   <span class="comment">// 递归</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 请求动画帧</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.requestAnimationFrame(render);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = init    <span class="comment">// 全部加载完成后运行</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> 博客网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Three.Js开发WebGL创建几何体及灯光</title>
      <link href="/2022/04/19/ThreeJsWebGL_2022_4.19.02/"/>
      <url>/2022/04/19/ThreeJsWebGL_2022_4.19.02/</url>
      
        <content type="html"><![CDATA[<h1 id="Three-Js开发WebGL创建几何体及灯光"><a href="#Three-Js开发WebGL创建几何体及灯光" class="headerlink" title="Three.Js开发WebGL创建几何体及灯光"></a>Three.Js开发WebGL创建几何体及灯光</h1><blockquote><p>Three.Js GitHub地址：<a href="https://github.com/mrdoob/three.js">点击跳转</a></p></blockquote><blockquote><p>Three.Js API说明文档：<a href="https://threejs.org/docs/index.html#manual/zh/introduction/Creating-a-scene">点击跳转</a></p></blockquote><blockquote><p>或复制网页端Three.js源码使用：<a href="https://threejs.org/build/three.js">点击跳转</a></p></blockquote><h2 id="WEBGL-三维几何体及灯光的创建-放置在Script标签下-："><a href="#WEBGL-三维几何体及灯光的创建-放置在Script标签下-：" class="headerlink" title="WEBGL 三维几何体及灯光的创建(放置在Script标签下)："></a>WEBGL 三维几何体及灯光的创建(放置在Script标签下)：</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 添加立方体</span></span><br><span class="line"><span class="keyword">var</span> cubeGeometry = <span class="keyword">new</span> THREE.BoxGeometry(<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">var</span> cubeMaterial = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">color</span>: <span class="number">0xFFB6C1</span>&#125;); <span class="comment">// 添加网格材质</span></span><br><span class="line"><span class="keyword">var</span> cube = <span class="keyword">new</span> THREE.Mesh(cubeGeometry,cubeMaterial);</span><br><span class="line">cube.position.x = <span class="number">0</span>;</span><br><span class="line">cube.position.y = <span class="number">5</span>;</span><br><span class="line">cube.position.z = <span class="number">2</span>;</span><br><span class="line"><span class="comment">// 球体</span></span><br><span class="line"><span class="keyword">var</span> sphereGeometry = <span class="keyword">new</span> THREE.SphereGeometry(<span class="number">4</span>,<span class="number">20</span>,<span class="number">20</span>);</span><br><span class="line"><span class="keyword">var</span> sphereMaterial = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">color</span>: <span class="number">0xFFB6C1</span>&#125;);</span><br><span class="line"><span class="keyword">var</span> Sphere = <span class="keyword">new</span> THREE.Mesh(sphereGeometry,sphereMaterial);</span><br><span class="line">Sphere.position.x = <span class="number">10</span>;</span><br><span class="line">Sphere.position.y = <span class="number">4</span>;</span><br><span class="line">Sphere.position.z = <span class="number">2</span>;</span><br><span class="line"><span class="comment">// 对象是否渲染到阴影贴图</span></span><br><span class="line">cube.castShadow = <span class="literal">true</span>;</span><br><span class="line">Sphere.castShadow = <span class="literal">true</span>;</span><br><span class="line">scene.add(cube)</span><br><span class="line">scene.add(Sphere);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建添加聚光灯</span></span><br><span class="line"><span class="keyword">var</span> spotLight = <span class="keyword">new</span> THREE.SpotLight(<span class="number">0xFFFFFF</span>);</span><br><span class="line">spotLight.position.set(<span class="number">130</span>,<span class="number">130</span>,-<span class="number">130</span>);</span><br><span class="line">spotLight.castShadow = <span class="literal">true</span>;</span><br><span class="line">scene.add(spotLight);</span><br></pre></td></tr></table></figure><p>阴影属性设置</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置渲染物体阴影</span></span><br><span class="line">renderer.shadowMapEnabled = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// 设置地面接收阴影</span></span><br><span class="line">plane.castShadow = <span class="literal">true</span>;</span><br><span class="line">plane.receiveShadow = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h2 id="完整实例代码："><a href="#完整实例代码：" class="headerlink" title="完整实例代码："></a>完整实例代码：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=Edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Demo-01<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;libs/Three.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;webGl-output&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Script --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建场景</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> scene = <span class="keyword">new</span> THREE.Scene();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置摄像机 (45度,长宽比&lt;当前屏幕宽/屏幕高&gt;,最近可视距离,最远可视距离)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.PerspectiveCamera(<span class="number">45</span>,<span class="built_in">window</span>.innerWidth/<span class="built_in">window</span>.innerHeight,<span class="number">0.1</span>,<span class="number">2000</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建渲染器</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染器初始化颜色</span></span></span><br><span class="line"><span class="javascript">        renderer.setClearColor(<span class="keyword">new</span> THREE.Color(<span class="number">0xEEEEEE</span>));</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染输出 Canvas 画面大小</span></span></span><br><span class="line"><span class="javascript">        renderer.setSize(<span class="built_in">window</span>.innerWidth,<span class="built_in">window</span>.innerHeight);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置渲染物体阴影</span></span></span><br><span class="line"><span class="javascript">        renderer.shadowMapEnabled = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建显示卡迪坐标轴</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> axes = <span class="keyword">new</span> THREE.AxesHelper(<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 添加坐标系到场景</span></span></span><br><span class="line"><span class="javascript">        scene.add(axes);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 场景创建平面(地面几何体)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> planeGeometry = <span class="keyword">new</span> THREE.PlaneGeometry(<span class="number">60</span>,<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置平面(地面)材质</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> PlaneMaterial = <span class="keyword">new</span> THREE.MeshBasicMaterial(&#123;<span class="attr">color</span>:<span class="number">0xCCCCCC</span>&#125;);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建地面 通过 THREE.Mesh 进行结合操作</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> plane = <span class="keyword">new</span> THREE.Mesh(planeGeometry,PlaneMaterial);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 物体位移坐标</span></span></span><br><span class="line"><span class="javascript">        plane.rotation.x = -<span class="number">0.5</span>*<span class="built_in">Math</span>.PI;</span></span><br><span class="line"><span class="javascript">        plane.position.x = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        plane.position.y = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        plane.position.z = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//- 设置地面接收阴影</span></span></span><br><span class="line"><span class="javascript">        plane.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        plane.receiveShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 将地面添加到场景</span></span></span><br><span class="line"><span class="javascript">        scene.add(plane);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 添加立方体</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cubeGeometry = <span class="keyword">new</span> THREE.BoxGeometry(<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cubeMaterial = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">color</span>: <span class="number">0xFFB6C1</span>&#125;); <span class="comment">// 添加网格材质</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cube = <span class="keyword">new</span> THREE.Mesh(cubeGeometry,cubeMaterial);</span></span><br><span class="line"><span class="javascript">        cube.position.x = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        cube.position.y = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">        cube.position.z = <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 球体</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> sphereGeometry = <span class="keyword">new</span> THREE.SphereGeometry(<span class="number">4</span>,<span class="number">20</span>,<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> sphereMaterial = <span class="keyword">new</span> THREE.MeshLambertMaterial(&#123;<span class="attr">color</span>: <span class="number">0xFFB6C1</span>&#125;);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> Sphere = <span class="keyword">new</span> THREE.Mesh(sphereGeometry,sphereMaterial);</span></span><br><span class="line"><span class="javascript">        Sphere.position.x = <span class="number">10</span>;</span></span><br><span class="line"><span class="javascript">        Sphere.position.y = <span class="number">4</span>;</span></span><br><span class="line"><span class="javascript">        Sphere.position.z = <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 对象是否渲染到阴影贴图</span></span></span><br><span class="line"><span class="javascript">        cube.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        Sphere.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        scene.add(cube)</span></span><br><span class="line"><span class="javascript">        scene.add(Sphere);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建添加聚光灯</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> spotLight = <span class="keyword">new</span> THREE.SpotLight(<span class="number">0xFFFFFF</span>);</span></span><br><span class="line"><span class="javascript">        spotLight.position.set(<span class="number">130</span>,<span class="number">130</span>,-<span class="number">130</span>);</span></span><br><span class="line"><span class="javascript">        spotLight.castShadow = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        scene.add(spotLight);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定位摄影机视角指向场景中心点</span></span></span><br><span class="line"><span class="javascript">        camera.position.x = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.position.y = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.position.z = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.lookAt(scene.position)</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染器输出添加至 HTML</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;webGl-output&#x27;</span>).appendChild(renderer.domElement);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 最终渲染</span></span></span><br><span class="line"><span class="javascript">        renderer.render(scene,camera);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = init    <span class="comment">// 全部加载完成后运行</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> 博客网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Three.Js开发WebGL创建三维空间</title>
      <link href="/2022/04/19/ThreeJsWebGL_2022_4.19.01/"/>
      <url>/2022/04/19/ThreeJsWebGL_2022_4.19.01/</url>
      
        <content type="html"><![CDATA[<h1 id="Three-Js开发WebGL创建三维空间"><a href="#Three-Js开发WebGL创建三维空间" class="headerlink" title="Three.Js开发WebGL创建三维空间"></a>Three.Js开发WebGL创建三维空间</h1><p>首先我们需要创建一个 HTML 文件 如：index.html</p><p>导入Three.Js 与 设置网页初始化 (边距为0 溢出隐藏)</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=Edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Demo-01<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;libs/Three.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Three.Js GitHub地址：<a href="https://github.com/mrdoob/three.js">点击跳转</a></p></blockquote><blockquote><p>Three.Js API说明文档：<a href="https://threejs.org/docs/index.html#manual/zh/introduction/Creating-a-scene">点击跳转</a></p></blockquote><blockquote><p>或复制网页端Three.js源码使用：<a href="https://threejs.org/build/three.js">点击跳转</a></p></blockquote><p>在 HTML文件中我们要创建容器</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=Edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Demo-01<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;libs/Three.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;webGl-output&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Script --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="WEBGL-三维画面效果的创建-放置在Script标签下-："><a href="#WEBGL-三维画面效果的创建-放置在Script标签下-：" class="headerlink" title="WEBGL 三维画面效果的创建(放置在Script标签下)："></a>WEBGL 三维画面效果的创建(放置在Script标签下)：</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 创建场景</span></span><br><span class="line">    <span class="keyword">var</span> scene = <span class="keyword">new</span> THREE.Scene();</span><br><span class="line">    <span class="comment">// 设置摄像机 (45度,长宽比&lt;当前屏幕宽/屏幕高&gt;,最近可视距离,最远可视距离)</span></span><br><span class="line">    <span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.PerspectiveCamera(<span class="number">45</span>,<span class="built_in">window</span>.innerWidth/<span class="built_in">window</span>.innerHeight,<span class="number">0.1</span>,<span class="number">2000</span>);</span><br><span class="line">    <span class="comment">// 创建渲染器</span></span><br><span class="line">    <span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer();</span><br><span class="line">    <span class="comment">// 渲染器初始化颜色</span></span><br><span class="line">    renderer.setClearColor(<span class="keyword">new</span> THREE.Color(<span class="number">0xEEEEEE</span>));</span><br><span class="line">    <span class="comment">// 渲染输出 Canvas 画面大小</span></span><br><span class="line">    renderer.setSize(<span class="built_in">window</span>.innerWidth,<span class="built_in">window</span>.innerHeight);</span><br><span class="line">    <span class="comment">// 创建显示卡迪坐标轴</span></span><br><span class="line">    <span class="keyword">var</span> axes = <span class="keyword">new</span> THREE.AxisHelper(<span class="number">20</span>);</span><br><span class="line">    <span class="comment">// 添加坐标系到场景</span></span><br><span class="line">    scene.add(axes);</span><br><span class="line">    <span class="comment">// 场景创建平面(地面几何体)</span></span><br><span class="line">    <span class="keyword">var</span> planeGeometry = <span class="keyword">new</span> THREE.PlaneGeometry(<span class="number">60</span>,<span class="number">20</span>);</span><br><span class="line">    <span class="comment">// 设置平面(地面)材质</span></span><br><span class="line">    <span class="keyword">var</span> PlaneMaterial = <span class="keyword">new</span> THREE.MeshBasicMaterial(&#123;<span class="attr">color</span>:<span class="number">0xCCCCCC</span>&#125;);</span><br><span class="line">    <span class="comment">// 创建地面 通过 THREE.Mesh 进行结合操作</span></span><br><span class="line">    <span class="keyword">var</span> plane = <span class="keyword">new</span> THREE.Mesh(planeGeometry,PlaneMaterial);</span><br><span class="line">    <span class="comment">// 物体位移坐标</span></span><br><span class="line">    plane.rotation.x = -<span class="number">0.5</span>*<span class="built_in">Math</span>.PI;</span><br><span class="line">    plane.position.x = <span class="number">15</span>;</span><br><span class="line">    plane.position.y = <span class="number">0</span>;</span><br><span class="line">    plane.position.z = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 将地面添加到场景</span></span><br><span class="line">    scene.add(plane);</span><br><span class="line">    <span class="comment">// 定位摄影机视角指向场景中心点</span></span><br><span class="line">    camera.position.x = -<span class="number">30</span>;</span><br><span class="line">    camera.position.y = <span class="number">40</span>;</span><br><span class="line">    camera.position.z = <span class="number">30</span>;</span><br><span class="line">    camera.lookAt(scene.position)</span><br><span class="line">    <span class="comment">// 渲染器输出添加至 HTML</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;webGl-output&#x27;</span>).appendChild(renderer.domElement);</span><br><span class="line">    <span class="comment">// 最终渲染</span></span><br><span class="line">    renderer.render(scene,camera);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.onload = init    <span class="comment">// 全部加载完成后运行</span></span><br></pre></td></tr></table></figure><h2 id="完整实例代码："><a href="#完整实例代码：" class="headerlink" title="完整实例代码："></a>完整实例代码：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=Edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Demo-01<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;libs/Three.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;webGl-output&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Script --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建场景</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> scene = <span class="keyword">new</span> THREE.Scene();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置摄像机 (45度,长宽比&lt;当前屏幕宽/屏幕高&gt;,最近可视距离,最远可视距离)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> camera = <span class="keyword">new</span> THREE.PerspectiveCamera(<span class="number">45</span>,<span class="built_in">window</span>.innerWidth/<span class="built_in">window</span>.innerHeight,<span class="number">0.1</span>,<span class="number">2000</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建渲染器</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> renderer = <span class="keyword">new</span> THREE.WebGLRenderer();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染器初始化颜色</span></span></span><br><span class="line"><span class="javascript">        renderer.setClearColor(<span class="keyword">new</span> THREE.Color(<span class="number">0xEEEEEE</span>));</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染输出 Canvas 画面大小</span></span></span><br><span class="line"><span class="javascript">        renderer.setSize(<span class="built_in">window</span>.innerWidth,<span class="built_in">window</span>.innerHeight);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建显示卡迪坐标轴</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> axes = <span class="keyword">new</span> THREE.AxisHelper(<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 添加坐标系到场景</span></span></span><br><span class="line"><span class="javascript">        scene.add(axes);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 场景创建平面(地面几何体)</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> planeGeometry = <span class="keyword">new</span> THREE.PlaneGeometry(<span class="number">60</span>,<span class="number">20</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 设置平面(地面)材质</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> PlaneMaterial = <span class="keyword">new</span> THREE.MeshBasicMaterial(&#123;<span class="attr">color</span>:<span class="number">0xCCCCCC</span>&#125;);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 创建地面 通过 THREE.Mesh 进行结合操作</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> plane = <span class="keyword">new</span> THREE.Mesh(planeGeometry,PlaneMaterial);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 物体位移坐标</span></span></span><br><span class="line"><span class="javascript">        plane.rotation.x = -<span class="number">0.5</span>*<span class="built_in">Math</span>.PI;</span></span><br><span class="line"><span class="javascript">        plane.position.x = <span class="number">15</span>;</span></span><br><span class="line"><span class="javascript">        plane.position.y = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        plane.position.z = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 将地面添加到场景</span></span></span><br><span class="line"><span class="javascript">        scene.add(plane);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定位摄影机视角指向场景中心点</span></span></span><br><span class="line"><span class="javascript">        camera.position.x = -<span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.position.y = <span class="number">40</span>;</span></span><br><span class="line"><span class="javascript">        camera.position.z = <span class="number">30</span>;</span></span><br><span class="line"><span class="javascript">        camera.lookAt(scene.position)</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 渲染器输出添加至 HTML</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;webGl-output&#x27;</span>).appendChild(renderer.domElement);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 最终渲染</span></span></span><br><span class="line"><span class="javascript">        renderer.render(scene,camera);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = init    <span class="comment">// 全部加载完成后运行</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> 博客网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言文件操作</title>
      <link href="/2022/03/21/C_2022_3.21.01/"/>
      <url>/2022/03/21/C_2022_3.21.01/</url>
      
        <content type="html"><![CDATA[<p>未完</p><h2 id="6-0-文件基本操作"><a href="#6-0-文件基本操作" class="headerlink" title="6.0 文件基本操作"></a>6.0 文件基本操作</h2><p>对文件的操作我们所要采用指针，C语言创建之初是为了写unix系统，也就是后来的Linux系挺，它对文件是流的操控。<br>需要注意，如果使用完需要：fclose();<br>fclose 不光是关闭文件，还会把缓冲区的内容写入到文件。<br>缓冲区的作用：<br>缓冲区的作用实际上是用来包含我们的硬件的。<br>所有的磁盘都是有寿命限制的，每次读写对磁盘是有伤害的。<br>缓冲区是先集合要写的内容，然后统一写入进去</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">FILE* fp = <span class="literal">NULL</span>;        <span class="comment">// 可以将指针变量看成一个钥匙</span></span><br><span class="line">fp = fopen(<span class="string">&quot;FILE\\Hello.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>);        <span class="comment">// 第一个参数是&quot;文件路径和文件名称&quot; 第二个参数是模式 开门</span></span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fclose(fp);        <span class="comment">// 关门</span></span><br><span class="line">fp = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="fopen-的模式字符串"><a href="#fopen-的模式字符串" class="headerlink" title="fopen() 的模式字符串"></a>fopen() 的模式字符串</h3><p>fopen()参数说明：第一个参数是文件名称或文件路径，第二个则是文件模式字符串。</p><table><thead><tr><th>模式字符串</th><th>含义</th></tr></thead><tbody><tr><td>“r”</td><td>以读的模式打开文件</td></tr><tr><td>“w”</td><td>以写的模式打开文件，把现有文件的长度截为0（清除内容），如果文件不存在，则创建一个新文件</td></tr><tr><td>“a”</td><td>以写的模式打开文件，在现有文件末尾添加内容，如果文件不存在，则创建一个新文件</td></tr><tr><td>“r+”</td><td>以更新模式打开文件（即可以读写文件）</td></tr><tr><td>“w+”</td><td>以更新模式打开文件（即，读和写），如果文件存在，则将其长度截为0（清楚内容），如果文件不存在，则创建一个新文件</td></tr><tr><td>“a+”</td><td>以更新模式打开文件（即，读和写），在现有文件的末尾添加内容，如果文件不存在，则创建一个新文件；可以读整个文件，但只能从尾部添加内容。</td></tr><tr><td>“rb”、”wb”、”ab”、”ab+”、”a+b”、”wb+”、”w+b”、”ab+”、”a+b”</td><td>以上个模式类似，但是以二进制模式，而不是文本模式打开文件</td></tr><tr><td>“wx”、”wbx”、”w+x”、”wb+x”或”w+bx”</td><td>（C11）类似非x模式，但是如果文件已经存在或以独占模式打开文件，则打开文件失败。</td></tr></tbody></table><h2 id="6-0-1-文件写入内容和文件缓冲区"><a href="#6-0-1-文件写入内容和文件缓冲区" class="headerlink" title="6.0.1 文件写入内容和文件缓冲区"></a>6.0.1 文件写入内容和文件缓冲区</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">FILE* pf = <span class="literal">NULL</span>;</span><br><span class="line">pf = fopen(<span class="string">&quot;FILE\\World.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pf == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">fputs</span>(<span class="string">&quot;Hello World&quot;</span>, pf);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 断点 去文件里看看有没有数据，这样就可以看缓冲区</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        fputs不是把内容写入文件当中，而是写入到缓冲区。</span></span><br><span class="line"><span class="comment">*        fclose 不光是关闭文件，还会把缓冲区的内容写入到文件。</span></span><br><span class="line"><span class="comment">*        缓冲区的作用：</span></span><br><span class="line"><span class="comment">*        缓冲区的作用实际上是用来包含我们的硬件的。</span></span><br><span class="line"><span class="comment">*        所有的磁盘都是有寿命限制的，每次读写对磁盘是有伤害的。</span></span><br><span class="line"><span class="comment">*        缓冲区是先集合要写的内容，然后统一写入进去</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">fclose(pf);</span><br><span class="line">pf = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-0-2-文件重定向"><a href="#6-0-2-文件重定向" class="headerlink" title="6.0.2 文件重定向"></a>6.0.2 文件重定向</h2><p>标准输入和标准输出<br>C的出现就是为了写系挺就是unix诞生的后来unix发展出众多系统(linux)<br>而系统操作最多的就是文件，以前用C语言的开发者都说一切皆是文件，这句话是对的。<br>因为C特殊就特殊在它把输入输出都当作文件，输入输出就是键盘和屏幕。C语言把所有的东西都看作是一个文件。<br>把键盘看作一个文件，把屏幕也看作是一个文件。打印机也看作一个文件，C语言的世界里只有文件。<br>重定向就是无论你是什么(软件|硬件),都可以相互转换。<br>重定向就是本来该显示在这里的东西可以显示在另一个地方。<br>重点：C语言一切皆文件。</p><h3 id="文件重定向"><a href="#文件重定向" class="headerlink" title="文件重定向"></a>文件重定向</h3><p>Unix、Linux和当前的 DOS 版本都能够重定向输入和输出。输入重定向可以使程序能够使用文件代替键盘作为输入，输出重定向则使程序能够使用文件代替屏幕输出。<br>输出重定向就是用文本文件代替屏幕当作程序的输出，”&gt;” 运算符是另一个重定向运算符。假设我们要将键盘输入的数据发送至一个名为Test,.txt的文件。通过下面这条语句就可以完成：<br>Reput.exe&gt; Test.text。<br>该运算符会导致建立一个名为Test.txt的新文件供我们使用，然后将Reput.exe的输出（也就是说，我们嵌入的字符的副本）重定向到该文件。该重定向将stdout从显示设备（屏幕）重定向到Test.txt文件。<br>如果你已经有一个名为Test.txt的文件，则通常会删除该文件，然后再用新的文件代替。</p><h3 id="重定向要点"><a href="#重定向要点" class="headerlink" title="重定向要点"></a>重定向要点</h3><p>重定向运算符是将一个可执行程序与一个数据文件链接起来，该运算符不能用于一个数据文件与另一个数据文件的链接，也不能用于一个程序和另一个程序的链接。<br>使用这些运算符时，输入不能来自一个以上的文件，输出也不能定向至一个以上的文件。<br>“&gt;&gt;” 运算符用累加的方法将数据输出到指定的文件上，不会覆盖已经有的数据，是在原基础上追加数据。</p><h3 id="gets-函数的作用"><a href="#gets-函数的作用" class="headerlink" title="gets 函数的作用"></a>gets 函数的作用</h3><p>gets用来从标准设备读取字符并存放到参数s所指向的内存空间，直到出现换行字符或读到文件尾为止。<br>注意该函数目前C语言不推介使用了。C99 标准时候，委员会认为这个函数过于危险，很容易造成内存泄露（char ch[10] = {0}; 在控制台输入大于定义的值它不会报错，运行完成后程序会自动崩溃），但以前的C语言代码都是用了这个函数，如果不用了，以前的代码就无法维护了，所以委员会支持该函数，但不建议使用。C11 标准认为可以废弃以前的代码将这个函数废弃。C11 建议放弃。但目前gets这个函数并没有废弃，还是可以使用，但建议放弃，C11 委员会推出了fgets供用户使用。（哈哈哈，C语言标准每年都很逗）</p><h2 id="6-0-3-文件重定向二"><a href="#6-0-3-文件重定向二" class="headerlink" title="6.0.3 文件重定向二"></a>6.0.3 文件重定向二</h2><p>C语言把所有的设备当做文件来处理<br>C语言在进行文件操作时遵循如下步骤：打开-&gt; 读写操作-&gt; 关闭<br>C语言在程序中建立一个文件，本身就是结构体，然后返回的是一个结构体指针，文件指针是由操作系统来管理的。</p><h3 id="文件指针的详细信息"><a href="#文件指针的详细信息" class="headerlink" title="文件指针的详细信息"></a>文件指针的详细信息</h3><p>FILE 类型详细底层实现</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        C语言通过该结构体描述文件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">iobuf</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span>* _ptr;                <span class="comment">// 当前缓冲区内容指针</span></span><br><span class="line"><span class="keyword">int</span> _cnt;                <span class="comment">// 缓冲区还有多少字符</span></span><br><span class="line"><span class="keyword">char</span>* _base;        <span class="comment">// 缓冲区的起始地址</span></span><br><span class="line"><span class="keyword">int</span> _flag;                <span class="comment">// 文件流的状态，是否错误或结束</span></span><br><span class="line"><span class="keyword">int</span> _file;                <span class="comment">// 文件描述符</span></span><br><span class="line"><span class="keyword">int</span> _charbuf;        <span class="comment">// 双字节缓存，缓存两个字节</span></span><br><span class="line"><span class="keyword">int</span> _bufsiz;        <span class="comment">// 缓冲区大小</span></span><br><span class="line"><span class="keyword">char</span>* _tmpfname;<span class="comment">// 临时文件名</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">iobuf</span> <span class="title">FILE</span>;</span></span><br></pre></td></tr></table></figure><h3 id="标准输入与标准输出"><a href="#标准输入与标准输出" class="headerlink" title="标准输入与标准输出"></a>标准输入与标准输出</h3><p>通俗来说，打开是获取文件结构、系统为文件分配缓存中的过程，不打开文件就不能对其进行读写，关闭是释放缓冲区和其他资源的过程，不关闭文件就会慢慢耗光系统资源。<br>我们在进行文件操作时，系统自动与3个标准设备文件联系，这3个文件无需打开和关闭，它们的文件指针分别是：<br>stdin：标准输入文件指针，系统分配为键盘。<br>stdout：标准输出文件指针，系统分配为显示器。<br>stderr：标准错误输出文件指针，系统分配为显示器。</p><h3 id="gets-函数废弃的原因"><a href="#gets-函数废弃的原因" class="headerlink" title="gets 函数废弃的原因"></a>gets 函数废弃的原因</h3><p>gets() 函数简单易用，它读取整行输入，直至遇到换行符，然后丢弃换行符，储存其余字符，并在这些字符的末尾添加一个空字符”\0”，使其成为一个c字符串。它经常和puts函数配对使用。该函数用于显示字符串，并在末尾添加换行符。</p><p>问题在于gets()唯一一个参数是words，它无法检查数组是否装得下输入行，之前示例说过，数组名会被转换成数组的首元素的地址，因此gets()函数只知道数组的开始处，并不知道数组中可以放多少个元素。</p><p>如果输入的字符串过长，会导致缓冲区溢出（buffer overflow），即多余的字符超出了指定的目标控件。</p><h3 id="fgets函数和gets函数的区别"><a href="#fgets函数和gets函数的区别" class="headerlink" title="fgets函数和gets函数的区别"></a>fgets函数和gets函数的区别</h3><p>fgets函数通过第二个参数限制读取字符的最大数量，如果该参数的值为n，那么fgets()将读入n-1个字符，或者读取遇到的第一个换行符为止。<br>fgets()函数读取到一个换行符，会把它存储在字符串中。这点与gets不同，gets()会丢弃换行符。<br>fgets()函数的第三个参数指明要读取的文件。如果读入从键盘输入的数据，则以stdin（标准输入）作为参数，该标识符定义在stdio.h文件中。</p><h3 id="fgets-函数的语法："><a href="#fgets-函数的语法：" class="headerlink" title="fgets()函数的语法："></a>fgets()函数的语法：</h3><p>fgets 是gets的替换版，三个参数：内存地址、可存储最大字节数、文件流<br>fgets(ch, 10, stdin);<br>这里第一个ch是我们用指针绑定的数组获取的数组指针，10则是绑定数组的数组大小，stdin是标准输入即表示键盘。<br>对应的还有一个输出叫：fputs()函数。</p><h2 id="6-0-4-文件读取"><a href="#6-0-4-文件读取" class="headerlink" title="6.0.4 文件读取"></a>6.0.4 文件读取</h2><h3 id="fgetc-读取字符"><a href="#fgetc-读取字符" class="headerlink" title="fgetc 读取字符"></a>fgetc 读取字符</h3><p>从文件中读取一个字符，fgetc 只能读取窄字符。</p><h3 id="feof的作用"><a href="#feof的作用" class="headerlink" title="feof的作用"></a>feof的作用</h3><p>检查文件流是否读到了文件尾。<br>函数说明：<br>feof用来检测是否读取到了文件尾，尾数stream 为 fopen() 所返回的文件指针。如果已经到文件尾，则返回非零值，其他情况返回0。<br>返回值：返回非零值代表已经到达文件末尾使用前面加上非。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">FILE* fp = fopen(<span class="string">&quot;FILE\\World.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (!feof(fp)) &#123;</span><br><span class="line">ch = fgetc(fp);        <span class="comment">// 获取，它一次只能读取一个字符</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fclose(fp);</span><br><span class="line">fp = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-0-5-C语言获取文件大小"><a href="#6-0-5-C语言获取文件大小" class="headerlink" title="6.0.5 C语言获取文件大小"></a>6.0.5 C语言获取文件大小</h2><p>获取文件大小方法一：简单不建议使用（容易出错）<br>#define _CRT_SECURE_NO_WARNINGS<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;</p><p>void main68(void) {<br>char ch = 0;<br>FILE* fp = fopen(“FILE\World.txt”, “r”);<br>if (fp == NULL) {<br>return -1;<br>}<br>int i = 0;</p><p>while (!feof(fp)) {<br>ch = fgetc(fp);        // 获取，它一次只能读取一个字符<br>printf(“%c”, ch);<br>i++;<br>}</p><p>fclose(fp);<br>fp = NULL;<br>pringtf(“%d\s”,i);</p><p>printf(“\n”);<br>system(“pause”);<br>}<br>获取文件大小方法二</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">FILE* pf = fopen(<span class="string">&quot;FILE\\World.txt&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pf == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">/* 0代表偏移量 */</span></span><br><span class="line">fseek(pf, <span class="number">0</span>, SEEK_END);        <span class="comment">// 文件指针移动到末尾</span></span><br><span class="line"><span class="keyword">int</span> length = ftell(pf); <span class="comment">// 获取当前文件指针距离开头的长度</span></span><br><span class="line">fclose(pf);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, length);</span><br><span class="line">pf = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="fseek-的作用"><a href="#fseek-的作用" class="headerlink" title="fseek 的作用"></a>fseek 的作用</h3><p>fseek() 用来移动文件流的读写位置。参数stream为已打开的文件指针，参数offset为根据参数whence来移动读写位置的位移数。<br>参数whence为下列其中一种：<br>SEEK_SET：从距文件开头，offset位移量为新的读写位置。<br>SEEK_CUR：以目前的读写位置往后增加offset个位移量。<br>SEEK_END：将读写位置指向文件尾后再增加offset个位移量。</p><p>当whence值为SEEK_CUR或SEEK_END时，参数offset允许负值出现，下列是比较特别的使用方式：<br>欲将读写位置移动到文件开头时：<br>fseek(FILE* stream,0,SEEK_SET)<br>欲将读写位置移动到文件尾时：<br>fseek(FILE* stream,0,SEEK_END);</p><p>函数返回值<br>当调用成功则返回0，若有错误则返回-1，error会存放错误代码</p><p>附加说明：<br>fseek()不像lseek()会返回读写位置，因此必须使用ftell()来取得目前读写的位置。</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言指针(下)</title>
      <link href="/2022/03/13/C_2022_3.13.01/"/>
      <url>/2022/03/13/C_2022_3.13.01/</url>
      
        <content type="html"><![CDATA[<h2 id="5-1-0-内存四区模型"><a href="#5-1-0-内存四区模型" class="headerlink" title="5.1.0 内存四区模型"></a>5.1.0 内存四区模型</h2><p><a href="https://imgtu.com/i/bbLsWF"><img src="https://s1.ax1x.com/2022/03/13/bbLsWF.png" alt="内存四区图"></a><br>操作系统把物理硬盘代码 load 到内存。<br>操作系统把C代码分成四个区。<br>操作系统找到Main函数入口执行。</p><h3 id="内存四区"><a href="#内存四区" class="headerlink" title="内存四区"></a>内存四区</h3><p>一个由C/C++编译的程序占用的内存分成以下几个部分：<br>栈区（stack）：由编译器自动分配释放，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。只有汇编语言可以操控栈区。</p><p>堆区（heap）：一般由程序员分配释放，若程序员不释放，程序结束时可能操作系统回收。<br>注意它与数据结构中的堆是两回事，分配方式倒是类似于链表。</p><p>数据区：主要包括静态全局区和常量区，如果要站在汇编的角度细分的话，还可以分为很多小区。</p><p>全局区（静态区）（static）：全局变量和静态变量的存储放在一块的，初始化的全局变量和静态变量在一块区域，未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。程序结束后由系统释放。常量区也存在于全局区（他们统称）。</p><p>常量区：常量字符串就是放在这里的，程序结束后由系统释放。</p><p>代码区：存放函数体的二进制代码。由操作系统管理，函数指针最强大的地方就是可以操作代码区的数据。</p><h3 id="全局区详解"><a href="#全局区详解" class="headerlink" title="全局区详解"></a>全局区详解</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">pMem1</span><span class="params">()</span></span>;        <span class="comment">// 函数指针</span></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">pMem2</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">pMem3</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span>* p1 = <span class="literal">NULL</span>;        <span class="comment">//声明两个指针变量</span></span><br><span class="line"><span class="keyword">char</span>* p2 = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span>* p3 = <span class="literal">NULL</span>;</span><br><span class="line">p1 = pMem1();        <span class="comment">// 接收函数指针传出的指针变量值</span></span><br><span class="line">p2 = pMem2();</span><br><span class="line">p3 = pMem3();</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p1 = %s p1 = %p\n&quot;</span>, p1, p1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p2 = %s p2 = %p\n&quot;</span>, p2, p2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p3 = %s p3 = %p\n&quot;</span>, p3, p3);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">pMem1</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        两个不同的函数定义了一个相同的字符串，地址一样吗？</span></span><br><span class="line"><span class="comment">*        是一样的，实际上它存储的是字符串的地址，栈区运行完毕就自动销毁了，实际上这两个函数是一样的只是函数名不一样</span></span><br><span class="line"><span class="comment">*        同样的东西，为什么要创建两次呢？设计者也不是傻子。</span></span><br><span class="line"><span class="comment">*        例如有一个货物放在哪里不动了，这个时候他们两个人分别去记录这个货物的位置。</span></span><br><span class="line"><span class="comment">*        栈区上的变量执行完毕变量就销毁了</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">char</span>* p1 = <span class="string">&quot;Hello World&quot;</span>;        <span class="comment">// 存储在全局区</span></span><br><span class="line"><span class="keyword">return</span> p1;        <span class="comment">// 返回一个指针变量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数调用完毕，内存销毁</span></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">pMem2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        Hello Arvin 这个字符串怎么传入到这个指针的呢？指针变量在32Bit下是4字节，64Bit下是8字节。</span></span><br><span class="line"><span class="comment">*        指针变量存储的只存储的是它的地址，变量实际在全局区。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">char</span>* p2 = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> p2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">pMem3</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 如果货物不一样，那么他们的地址就不一样。</span></span><br><span class="line"><span class="keyword">char</span>* p3 = <span class="string">&quot;Hello Arvin&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> p3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>全局区相同字符串常量合并。<br>注意三点：<br>栈区调用完毕就销毁了。<br>指针指向谁就把谁的地址赋值给指针。<br>%s 的意思就是打印地址所指向的内容。</p><h3 id="栈区详解"><a href="#栈区详解" class="headerlink" title="栈区详解"></a>栈区详解</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">p_str</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>* p = <span class="literal">NULL</span>;</span><br><span class="line">p = p_str();</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;P = %s\n&quot;</span>, p);        <span class="comment">// 数组的首地址 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*  那么p打印这个地址所队友的内存空间内容是不是 Hello 答案是否因为已经被栈销毁了</span></span><br><span class="line"><span class="comment">*  说明：p_str在栈区创建一块100字节的空间，&quot;Hello&quot; 还是存放在全局区。</span></span><br><span class="line"><span class="comment">*  p_str是一个数组，复制了全局变量的内容，拷贝了一份在栈上和地址无关。</span></span><br><span class="line"><span class="comment">*  当p_str函数执行完毕后，将p_str的地址返回给Main的p，然后p_str会自动销毁。所以无法输出获取 Hello。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">p_str</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>] = <span class="string">&quot;Hello&quot;</span>;        <span class="comment">// 4字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;str = %s\n&quot;</span>,str);</span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内存栈区调试</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        两个函数声明同一个变量，这两个变量有关系吗？ ：没有</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">p_str2</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>* p = <span class="literal">NULL</span>;</span><br><span class="line">p = p_str2();</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p = %s\n&quot;</span>, p);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p = %p\n&quot;</span>, p);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在这里再打一个断点运行查看内存</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">p_str2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>] = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;str = %s\n&quot;</span>, str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;str = %p\n&quot;</span>, str);</span><br><span class="line"><span class="comment">// 查看栈销毁，在这里打一个断点</span></span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以在栈上开辟一个数组是很危险的，所以我们一般在堆上开辟数组。堆是由我们控制的所以在使用完成后要手动释放。</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="堆区详解"><a href="#堆区详解" class="headerlink" title="堆区详解"></a>堆区详解</h3><h4 id="strcpy-函数的作用"><a href="#strcpy-函数的作用" class="headerlink" title="strcpy 函数的作用"></a><em>strcpy 函数的作用</em></h4><p>原型声明：char<em>strcpy(char</em> dest,const char* src);<br>功能：把从src地址开始且含有NULL结束符的字符串复制到以dest开始的地址空间。<br>说明：stc和dest所指内存区域不可以重叠，且dest必须有足够的空间来容纳src的字符串。<br>返回指向dest的指针。</p><p>堆区不会自动释放需要手动释放。<br>Free 的意思不是清空内存，而是解除这个指针的绑定关系（解除和这块内存的绑定关系），原先只有指针自己能调用，（取消绑定后）现在谁都可以用。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        运行流程说明：</span></span><br><span class="line"><span class="comment">*        首先在栈区创建了指针p，现在指针p为NULL；</span></span><br><span class="line"><span class="comment">*        然后执行phead函数，它入栈，创建了一个指针tmp(存储堆区的地址)。在堆区创建了一个100字节大小的空间。</span></span><br><span class="line"><span class="comment">*        strcpy拷贝Hello到堆区。然后将tmp(堆区地址)返回给main函数中创建的p，栈区销毁phead指针函数。</span></span><br><span class="line"><span class="comment">*        p接收到堆区的地址，进行判断，如果不为NULL，就打印出它指针指向的地址的内容。</span></span><br><span class="line"><span class="comment">*        然后解除指针变量p和堆内存的绑定关系。将指针变量p置空。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">phead</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span>* p = <span class="literal">NULL</span>;</span><br><span class="line">p = phead();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p = %p\n&quot;</span>, p);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p = %s\n&quot;</span>, p);</span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span>) &#123;        <span class="comment">// 如果p接收到的不为NULL，就打印出它指针指向地址的内容</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, p);</span><br><span class="line"><span class="comment">// 断点</span></span><br><span class="line"><span class="built_in">free</span>(p);        <span class="comment">// 解除指针变量p和堆内存的绑定关系。</span></span><br><span class="line">p = <span class="literal">NULL</span>;        <span class="comment">// 将指针变量p置空</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 断点</span></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">phead</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span>* tmp = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="number">100</span>);        <span class="comment">// 在堆上开辟了100字节的空间</span></span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="literal">NULL</span>) &#123;        <span class="comment">// 如果tmp为空那么就返回一个空的值。</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">strcpy</span>(tmp, <span class="string">&quot;Hello&quot;</span>);        <span class="comment">// strcpy拷贝函数，我们将Hello拷贝到tmp指向的空间(我们在堆里开辟的空间)</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;tmp = %p\n&quot;</span>, tmp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;tmp = %s\n&quot;</span>, tmp);</span><br><span class="line"><span class="comment">// 断点</span></span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-1-2-指针运算（重点）"><a href="#5-1-2-指针运算（重点）" class="headerlink" title="5.1.2 指针运算（重点）"></a>5.1.2 指针运算（重点）</h2><p>指针的加减法,它是处理多级指针包括数组的时候非常重要。它决定了你在指针这里能走多远。严格来说，指针很少有人走到头。至少要掌握二级指针到三级指针（否则你将很难明白C++语言中的引用）。<br>void *p是一个万能指针。</p><p>指针的数据类型决定了指针的解析方式，同时也决定了指针的步长。<br>指针+1等于指针加上所指向类型的大小。<br>编译器对指针+1的操作：p+sizeof（<em>p）</em>1；</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//51</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span>* p = &amp;num;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p %p\n&quot;</span>, p, p + <span class="number">1</span>);        <span class="comment">// 指针是4|8字节，指针+1 = +4字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, p, p + <span class="number">1</span>);        <span class="comment">// 证实指针+1 = +4 注意：指针+1 等于指针所指向类型的大小</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">char</span>* p_str = &amp;str;</span><br><span class="line"><span class="comment">// 指针+1在编译器实际是：p+sizeof(*p)*1</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p %p\n&quot;</span>, p_str, p_str + <span class="number">1</span>);        <span class="comment">// 这里指针+1 = +1字节 因为char是一个字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, p_str, p_str + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        既然指针都是4|8字节，那么为什么要有类型呢？注意：void *p 是万能指针。</span></span><br><span class="line"><span class="comment">*        其实指针变量的类型决定了解析的方式，声明什么类型的变量就要用什么类型的指针变量。</span></span><br><span class="line"><span class="comment">*        如果用错了会出现错误，类型不单单决定了步长，还决定了解析方式。</span></span><br><span class="line"><span class="comment">*        步长：+1加多少就是步长。指针的类型决定了指针的步长(往前走几个字节)</span></span><br><span class="line"><span class="comment">*        类型相当于模具，变量相当于做出的模型，如果模具不一样做做出来的模具肯定会出现问题。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针与数组练习"><a href="#指针与数组练习" class="headerlink" title="指针与数组练习"></a>指针与数组练习</h3><p>指针也是一种数据类型，指针的数据类型是指它所指向的内存空间的数据类型。<br>指针的空间和指针所指向的内存空间是不同概念。<br>下面实例比较复杂建议多看内存和多思考。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[] = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串是以\0结尾的所以是6个字节 或者智能去判断</span></span><br><span class="line"><span class="comment">/*for (int i = 0; i &lt; sizeof(str); i++) &#123;</span></span><br><span class="line"><span class="comment">printf(&quot;%c&quot;, str[i]);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">printf(&quot;\n\n&quot;);*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 我们采用指针的方式打印 */</span> <span class="comment">// 这里断点调试，注释上面for内容</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">char</span>* p_str = str; p_str &lt; str + <span class="number">3</span>; p_str++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, *p_str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        for(指针绑定地址，指针小于数组字符串，p_str++(步长))</span></span><br><span class="line"><span class="comment">*        数组+1是加了本身一个元素的大小</span></span><br><span class="line"><span class="comment">*        p_str+1是加了指向类型的大小</span></span><br><span class="line"><span class="comment">*        指针变量和数组的起始点是一样的，步长也是一样的</span></span><br><span class="line"><span class="comment">*        所以值也一样</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针的间接赋值"><a href="#指针的间接赋值" class="headerlink" title="指针的间接赋值"></a>指针的间接赋值</h3><p>如果想通过形参改变实参的内存内容（值）必须地址传递。<br>指针间接赋值的三个条件<br>两个变量、建立关系、通过*操作内存</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        问题：怎么通过形参改变一个函数内实参的值？从外部更改函数内部的值</span></span><br><span class="line"><span class="comment">*        函数的参数有副本机制(重新开辟一个内存)，除了数组。</span></span><br><span class="line"><span class="comment">*        采用指针的方式从外部修改内部的值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> a)</span></span>;</span><br><span class="line"><span class="comment">/* 我们采用指针的方式从外部修改内部的值 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pnum</span><span class="params">(<span class="keyword">int</span> *a)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;main a = %p\n&quot;</span>, &amp;a);</span><br><span class="line"><span class="keyword">int</span> b = num(a);        <span class="comment">// 我们传入num的a的值为20 那么输出是10 还是 20：答案是：10 (创建副本)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;b = %d\n&quot;</span>, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c = <span class="number">100</span>;</span><br><span class="line">pnum(&amp;c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;c = %d\n&quot;</span>, c);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num  a = %p\n&quot;</span>, &amp;a);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pnum</span><span class="params">(<span class="keyword">int</span>* a)</span> </span>&#123;</span><br><span class="line">*a = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针数组"><a href="#指针数组" class="headerlink" title="指针数组"></a>指针数组</h3><p>指针数组实际上就是指针类型的数组。<br>当然还有一种叫数组指针，实际上就是指向数组的指针。<br>注意：指针数组是指针类型的数组，数组指针是指向数组的指针</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> c = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> d[<span class="number">4</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, d[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *pa[] = &#123; <span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span> &#125;;        <span class="comment">// 指针数组 &quot;a&quot;在指针常量区，&quot;a&quot;存储的实际上是地址</span></span><br><span class="line"><span class="comment">// 当然还有一种叫数组指针，实际上就是指向数组的指针</span></span><br><span class="line"><span class="comment">// 注意：指针数组是指针类型的数组，数组指针是指向数组的指针</span></span><br><span class="line"><span class="comment">// 断点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;        <span class="comment">// 这里+1是加了一个地址的长度</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, pa[i]);        <span class="comment">// 这里i也是一个地址的长度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-1-3-结构体基本操作"><a href="#5-1-3-结构体基本操作" class="headerlink" title="5.1.3 结构体基本操作"></a>5.1.3 结构体基本操作</h2><p>结构体类型定义<br>结构体变量定义<br>结构体变量初始化<br>Typedef 改变类型名<br>注意：结构体也是一种数据类型，是我们自定义的类型。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        结构体就是自定义的数据类型语法：struct 类型名好比我们的int float。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 结构体类型定义第一种方式 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Test</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> face[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> EyesSize;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 结构体变量定义第一种方式 (声明赋值二合一) */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Test</span> <span class="title">test</span> =</span> &#123; <span class="string">&quot;Hello&quot;</span>,<span class="number">20</span> &#125;;        <span class="comment">// 和定义 int a;一样，但是结构体是struct Test == int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 结构体类型定义第二种方式 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Test02</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> face[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> EyesSize;</span><br><span class="line">&#125;test02 = &#123;<span class="string">&quot;World&quot;</span>,<span class="number">15</span>&#125;;        <span class="comment">// 直接在下面定义变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 结构体类型定义第三种 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> face[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> EyesSize;</span><br><span class="line">&#125;test03,test04;        <span class="comment">// 匿名结构体，这个结构体只能使用在下面定义好的变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 结构体类型定义第四种 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Test05</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> face[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> EyesSize;</span><br><span class="line">&#125;Test05;        <span class="comment">// tyoedef 是别名，它将 struct Test05 替换成 Test05 这样我们就可以少写一个</span></span><br><span class="line"></span><br><span class="line">Test05 test05 = &#123; <span class="string">&quot;Love&quot;</span>,<span class="number">520</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体初始化"><a href="#结构体初始化" class="headerlink" title="结构体初始化"></a>结构体初始化</h3><p>注意：<br>Test结构体它声明的时候是不开辟内存的，你必须初始化对象才开辟内存。<br>箭头运算符 ：用于指针来调用变量的一种方式。<br>test.face = { “Hello” }; 这样的化会出错，它不是指针(不能往指针的地址里拷贝字符串)。所以我们要用到Strcpy函数。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Test</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> face[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> EyesSize;</span><br><span class="line"><span class="keyword">char</span>* str;</span><br><span class="line">&#125;Test;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">Test test;</span><br><span class="line"><span class="comment">// test.face = &#123; &quot;Hello&quot; &#125;; 这样的化会出错，它不是指针(不能往指针的地址里拷贝字符串)。所以我们要用到Strcpy函数</span></span><br><span class="line"><span class="built_in">strcpy</span>(test.face,<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">test.str = <span class="string">&quot;World&quot;</span>;</span><br><span class="line">test.EyesSize = <span class="number">15</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">char</span>* p = test.str; p &lt; test.str + <span class="number">6</span>; p++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, *p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Test test02 = &#123; <span class="string">&quot;Hello&quot;</span>,<span class="number">15</span>,<span class="string">&quot;Arvin&quot;</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>, test.face, test.EyesSize);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %d %s\n&quot;</span>, test02.face, test02.EyesSize, test02.str);</span><br><span class="line"></span><br><span class="line">Test test01;</span><br><span class="line"><span class="comment">/* 箭头运算符 ：用于指针来调用变量的一种方式 */</span></span><br><span class="line">Test* p_test = <span class="literal">NULL</span>;        <span class="comment">// 这个指针指向我们的结构体</span></span><br><span class="line">p_test = &amp;test01;        <span class="comment">// 初始化一个结构体的对象</span></span><br><span class="line"><span class="built_in">strcpy</span>(p_test-&gt;face, <span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">p_test-&gt;EyesSize = <span class="number">100</span>;        <span class="comment">// 指针通过箭头运算符调用结构体里的内容</span></span><br><span class="line">p_test-&gt;str = <span class="string">&quot;World&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %d %s\n&quot;</span>, p_test-&gt;face, p_test-&gt;EyesSize, p_test-&gt;str);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        报错：Test结构体它声明的时候是不开辟内存的，你必须初始化对象才开辟内存。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你在p_test-&gt;EyesSize = 100;非要用*的方式也不是不可以：<br>(*p_test).EyesSize = 100;</p><h3 id="结构体变量之间赋值"><a href="#结构体变量之间赋值" class="headerlink" title="结构体变量之间赋值"></a>结构体变量之间赋值</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        我们定义结构体的时候不开辟内存。</span></span><br><span class="line"><span class="comment">*        在声明变量的时候才会开辟内存 ModelFace modelFace = &#123; &quot;Hello&quot;,50 &#125;;</span></span><br><span class="line"><span class="comment">*        注意：赋值完成后它们就没有关系了</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ModelFace</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> face[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> EyesSize;</span><br><span class="line">&#125;ModelFace;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main56</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">ModelFace modelFace = &#123; <span class="string">&quot;Hello&quot;</span>,<span class="number">50</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 结构体变量之间可以相互赋值 */</span></span><br><span class="line">ModelFace modeF = modelFace;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>, modeF.face, modeF.EyesSize);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体静态数组-栈区"><a href="#结构体静态数组-栈区" class="headerlink" title="结构体静态数组-栈区"></a>结构体静态数组-栈区</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        结构体定义数组-在栈区开辟</span></span><br><span class="line"><span class="comment">*        注意类比</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ModelFace</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> face[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> EyesSize;</span><br><span class="line">&#125;ModelFace;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 结构体数组有两种定义方式 */</span></span><br><span class="line">ModelFace modelFace[<span class="number">3</span>] = &#123; <span class="string">&quot;Gun&quot;</span>,<span class="number">100</span>,<span class="string">&quot;Liyun&quot;</span>,<span class="number">50</span>,<span class="string">&quot;Note&quot;</span>,<span class="number">10</span> &#125;;</span><br><span class="line">ModelFace modelF[<span class="number">3</span>] = &#123; &#123;<span class="string">&quot;Fun&quot;</span>,<span class="number">100</span>&#125;,&#123;<span class="string">&quot;Miun&quot;</span>,<span class="number">50</span>&#125;,&#123;<span class="string">&quot;Mote&quot;</span>,<span class="number">10</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ModeFace：%d %s %d\n&quot;</span>, i, modelFace[i].face, modelFace[i].EyesSize);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ModeF   ：%d %s %d\n&quot;</span>, i, modelF[i].face, modelF[i].EyesSize);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体动态数组-堆区"><a href="#结构体动态数组-堆区" class="headerlink" title="结构体动态数组-堆区"></a>结构体动态数组-堆区</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        结构体动态数组-堆区</span></span><br><span class="line"><span class="comment">*        注意类比</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ModelFace</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> face[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> EyesSize;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span>* pa = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="number">3</span> * <span class="keyword">sizeof</span>(<span class="keyword">int</span>)); <span class="comment">// 开辟堆区内存</span></span><br><span class="line"><span class="built_in">free</span>(pa);</span><br><span class="line">pa = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 结构体动态数组 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ModelFace</span> <span class="title">modelFace</span>[3] =</span> &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ModelFace</span>* <span class="title">p_str</span> =</span> (struct ModelFace*)<span class="built_in">malloc</span>(<span class="number">3</span> * <span class="keyword">sizeof</span>(struct ModelFace));</span><br><span class="line"><span class="keyword">if</span> (p_str == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line"><span class="built_in">strcpy</span>(p_str[i].face, <span class="string">&quot;Arvin&quot;</span>);</span><br><span class="line">p_str[i].EyesSize = <span class="number">10</span> + i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;modelFace %d ：%s %d\n&quot;</span>, i, p_str[i].face, p_str[i].EyesSize);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p_str != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">free</span>(p_str);</span><br><span class="line">p_str = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体嵌套数组"><a href="#结构体嵌套数组" class="headerlink" title="结构体嵌套数组"></a>结构体嵌套数组</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        结构体嵌套指针</span></span><br><span class="line"><span class="comment">*        如果结构体内部有个指针能否直接给指针拷贝内容：答案是可以的</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ModelFace</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span>* face;</span><br><span class="line"><span class="keyword">int</span> EyesSize;</span><br><span class="line">&#125;ModelFace;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main59</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您的姓名：&quot;</span>);</span><br><span class="line"><span class="keyword">char</span> Mname[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span>* age = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,Mname);</span><br><span class="line"><span class="keyword">char</span>* name = <span class="literal">NULL</span>;</span><br><span class="line">name = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="number">10</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(name, Mname);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;name：%s\n&quot;</span>, name);</span><br><span class="line"><span class="keyword">if</span> (name != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">free</span>(name);</span><br><span class="line">name = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 结构体 */</span></span><br><span class="line">ModelFace modelFace;</span><br><span class="line">modelFace.face = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="number">10</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(modelFace.face, Mname);</span><br><span class="line">modelFace.EyesSize = <span class="number">18</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ModeFace：name:%s age:%d&quot;</span>, modelFace.face, modelFace.EyesSize);</span><br><span class="line"><span class="keyword">if</span> (modelFace.face != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">free</span>(modelFace.face);</span><br><span class="line">modelFace.face = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体赋值细节"><a href="#结构体赋值细节" class="headerlink" title="结构体赋值细节"></a>结构体赋值细节</h3><p>在程序流程时如果你不知道大小可以采用strlen函数</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(Name); i++) &#123;        <span class="comment">// 如果你不知道大小可以采用strlen函数</span></span><br><span class="line">pMyStruct-&gt;hello[i] = Name[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构体赋值第一部分</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">MyStruct</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> hello[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> a;        <span class="comment">//第二次加个一个int类型测试</span></span><br><span class="line">&#125;MyStruct;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a：%d\n&quot;</span>, <span class="keyword">sizeof</span>(a));        <span class="comment">// 4字节，int是系统做好的类型</span></span><br><span class="line"></span><br><span class="line">MyStruct myStruct;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;myStruct：%d\n&quot;</span>, <span class="keyword">sizeof</span>(myStruct));        <span class="comment">// 10字节，我们自定义变量 加上int为16字节（因为结构体内存对齐）</span></span><br><span class="line"><span class="built_in">strcpy</span>(myStruct.hello, <span class="string">&quot;A&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;myStruct.hello：%d\n&quot;</span>, <span class="keyword">sizeof</span>(myStruct.hello));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;myStruct.a：%d\n&quot;</span>, <span class="keyword">sizeof</span>(myStruct.a));        <span class="comment">// 4字节，为什么会消失2字节？</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 结构体在开辟内存的时候，可能因为变量不同。系统会不确定分配多少内存。</span></span><br><span class="line"><span class="comment">* 所以会尽可能的分配大一点的内存，按照结构体里最大类型的2的倍数进行分配。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">MyStruct* pMyStruct = &amp;myStruct;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*pMyStruct：%d\n&quot;</span>, <span class="keyword">sizeof</span>(*pMyStruct));        <span class="comment">// 16字节 指向我们的内存：myStruct。</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;pMystruct：%d\n&quot;</span>, <span class="keyword">sizeof</span>(pMyStruct));                <span class="comment">// 4|8字节，指针的内存是固定的</span></span><br><span class="line"><span class="built_in">strcpy</span>(pMyStruct-&gt;hello, <span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">pMyStruct-&gt;a = <span class="number">50</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;pMystruct：%s %d\n&quot;</span>, pMyStruct-&gt;hello, pMyStruct-&gt;a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入你要的pMyStruct的值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, name);</span><br><span class="line"><span class="comment">// 需要注意的是我们不能通过 char name&#123;1，2，3&#125;;来修改，它存在于栈区，我们只能修改&quot;字符串&quot;</span></span><br><span class="line"><span class="built_in">strcpy</span>(pMyStruct-&gt;hello, name);</span><br><span class="line"><span class="comment">// 当然你可以char* name = Hello，然后传入进去</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;pMyStruct：%s %d\n&quot;</span>, pMyStruct-&gt;hello, pMyStruct-&gt;a);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果非要传入&#123;&#125;可以有以下方法</span></span><br><span class="line"><span class="keyword">char</span> Name[<span class="number">10</span>] = &#123; <span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span> &#125;;</span><br><span class="line"><span class="comment">// 栈区数组赋值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(Name); i++) &#123;        <span class="comment">// 如果你不知道大小可以采用strlen函数</span></span><br><span class="line">pMyStruct-&gt;hello[i] = Name[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;pMyStruct：%s %d\n&quot;</span>, pMyStruct-&gt;hello, pMyStruct-&gt;a);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果我们把采用strcpy还可以采用</span></span><br><span class="line"><span class="keyword">char</span>* pName = <span class="string">&quot;ZhangSan&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (pMyStruct == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">pMyStruct-&gt;hello[i] = pName[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;pMyStruct：%s %d\n&quot;</span>, pMyStruct-&gt;hello, pMyStruct-&gt;a);</span><br><span class="line">pName = <span class="string">&quot;LiSi&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (pMyStruct = pName; pMyStruct &lt; pName + <span class="number">5</span>; pMyStruct++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;pMyStruct： %s\n&quot;</span>, pMyStruct-&gt;hello);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C语言赋值细节二"><a href="#C语言赋值细节二" class="headerlink" title="C语言赋值细节二"></a>C语言赋值细节二</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">MyStruct* Test();</span><br><span class="line"></span><br><span class="line">typedef struct MyStruct &#123;</span><br><span class="line">char* Hello;</span><br><span class="line">&#125;MyStruct;</span><br><span class="line"></span><br><span class="line">void main(void) &#123;</span><br><span class="line"></span><br><span class="line">MyStruct myStruct;</span><br><span class="line">MyStruct* pMyStruct = &amp;myStruct;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*        字符串是不动的常量，在内存中是以下的表现：</span><br><span class="line">*        const char* H = &quot;Arvin&quot;</span><br><span class="line">*        它在全局区是不可更改的，我们通过指针地址将它赋值给pMySruct，说白了就是地址的转移。</span><br><span class="line">*/</span><br><span class="line">char* H = &quot;Arvin&quot;;</span><br><span class="line">pMyStruct-&gt;Hello = H;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*        I是在栈区的数组。</span><br><span class="line">*        pMyStruct是在Main函数中的所以下面不会出问题。</span><br><span class="line">*        如果在外部函数中这样，需要讲值传递置堆区。</span><br><span class="line">*        栈区是先进后出的模型运行的，Main函数先进，所以当Test进入，出去时候将值传给了Main还是可以正常运行的。</span><br><span class="line">*        此处涉及主调函数、被调函数、函数调用模型有关系。</span><br><span class="line">*/</span><br><span class="line">char I[10] = &#123; &#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;,&#x27;4&#x27;,&#x27;5&#x27;&#125;;</span><br><span class="line">pMyStruct-&gt;Hello = I;</span><br><span class="line"></span><br><span class="line">printf(&quot;%s\n&quot;, pMyStruct-&gt;Hello);</span><br><span class="line"></span><br><span class="line">printf(&quot;\n&quot;);</span><br><span class="line">system(&quot;pause&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C语言实现界面"><a href="#C语言实现界面" class="headerlink" title="C语言实现界面"></a>C语言实现界面</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t ---------------------------&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t|   Leve1:1                 |&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t|   Leve1:2                 |&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t|   Leve1:3                 |&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t|   Leve1:4                 |&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t|   Leve1:5                 |&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t ---------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dos窗口的大小为：宽80字符高25字符<br>一个\t的是8个字符。</p><h3 id="puts和printf的区别和putchar的区别"><a href="#puts和printf的区别和putchar的区别" class="headerlink" title="puts和printf的区别和putchar的区别"></a>puts和printf的区别和putchar的区别</h3><p>printf、pytchar和puts函数均为输出函数。printf函数可以输出各种不同类型的数据，putchar函数只能输出字符数据，而puts函数可输出字符串数据。<br>puts(s)的作用与语句printf(“%s”,s)的作用基本相同，puts函数只能输出字符串，不能输出1数值或进行格式变换，puts函数在输出字符它自带换行。</p><h3 id="结构体保存数据"><a href="#结构体保存数据" class="headerlink" title="结构体保存数据"></a>结构体保存数据</h3><p>C语言没有类的概念，我们做一些属性的时候，只能是往结构体里保存。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Info</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> Name[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> Gender[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">double</span> Height;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">short</span> Age;</span><br><span class="line">&#125;Info;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">Info info = &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span> &#125;;        <span class="comment">// 初始化，如果字符类型没有初始化可能就直接报错</span></span><br><span class="line"><span class="comment">// 断点调试</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 值指向 info 的数组指针 */</span></span><br><span class="line">Info* pInfo = &amp;info;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 写入数据 */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您的姓名：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, pInfo-&gt;Name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的姓名是：%s\n&quot;</span>, pInfo-&gt;Name);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入你的性别：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, pInfo-&gt;Gender);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的性别为：%s\n&quot;</span>, pInfo-&gt;Gender);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((!<span class="built_in">strcmp</span>(pInfo-&gt;Gender,<span class="string">&quot;男&quot;</span>)) || (!<span class="built_in">strcmp</span>(pInfo-&gt;Gender,<span class="string">&quot;男生&quot;</span>))) &#123; <span class="comment">// 这个函数比较特殊，需要反转一下</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您的身高：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,  &amp;pInfo-&gt;Height);                <span class="comment">// 注意是 LF</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的身高为：%g\n&quot;</span>, pInfo-&gt;Height);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您的年龄：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%u&quot;</span>, &amp;pInfo-&gt;Age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;你的年龄为：%u\n&quot;</span>, pInfo-&gt;Age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="strcmp-的作用"><a href="#strcmp-的作用" class="headerlink" title="strcmp 的作用"></a><em>strcmp 的作用</em></h4><p>比较字符串，0代表两个相同，非0代表两个字符串不相同。</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言指针(上)</title>
      <link href="/2022/03/09/C_2022_3.09.01/"/>
      <url>/2022/03/09/C_2022_3.09.01/</url>
      
        <content type="html"><![CDATA[<h2 id="5-0-1-外挂原理与指针"><a href="#5-0-1-外挂原理与指针" class="headerlink" title="5.0.1 外挂原理与指针"></a>5.0.1 外挂原理与指针</h2><h3 id="什么是内存？"><a href="#什么是内存？" class="headerlink" title="什么是内存？"></a>什么是内存？</h3><p>从硬件形态上来说，内存就是一条形物理设备，从功能上来讲，内存是一个数据仓库，程序在执行前都要被装载到内存中，才能被中央处理器执行。<br>内存是由按顺序编号的一系列存储单元组成的，在内存中，每个存储单元都有唯一的地址，通过地址可以方便地在内存单元中存储信息。<br>在计算机中，一切信息都是以二进制数据的形式体现的，每个内存单元的容量是 1B，即 8Bit（8个0、1二进制位）。<br>内存与CPU读写速度快，断电就没有了，容量比较小，成本比较搞，高级服务器，读写很频繁的文件全部存放内存，顶级黑客的电脑是没有硬盘的。</p><h3 id="变量名是什么？"><a href="#变量名是什么？" class="headerlink" title="变量名是什么？"></a>变量名是什么？</h3><p>概念：既能读又能写的内存对象，称为变量；若一旦初始化后不能修改的对象则称之为常量。<br>变量定义形式：类型，标识符，标识符，……，标识符；<br>变量名就是对内存一段空间里面的数据的抽象。<br>int a = 10; double b = 20;<br>例1：查看内存中定义的变量的地址</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// a其实的地址的别名</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, &amp;a);</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量的本质"><a href="#变量的本质" class="headerlink" title="变量的本质"></a>变量的本质</h3><p>程序通过变量来申请和命名内存空间 int a =0;<br>通过变量名访问内存空间。<br>结论：<br>变量：一段连续内存空间的别名。<br>数据类型和变量的关系，通过通过数据类型定义变量。<br>一个程序载入内存，代码数据都有地址，外挂就是调用函数，修改数据。而函数就是代码，变量就是数据。<br>总结：<br>对内存，可读可写。<br>通过变量往内存读写数据。<br>不是向变量读写数据，而是向变量所代表的内存空间中写数据。<br>名字就是变量，地址是身份证，外号是引用。姓名可以看作是身份证号的别名。</p><h2 id="5-0-2-指针的基本语法"><a href="#5-0-2-指针的基本语法" class="headerlink" title="5.0.2 指针的基本语法"></a>5.0.2 指针的基本语法</h2><p>指针的作用：<br>操作内存<br>注意：地址就是你的身份证号，变量就是你的名字<br>举例：唯一真名</p><h3 id="号和-amp-号的意思："><a href="#号和-amp-号的意思：" class="headerlink" title="*号和&amp;号的意思："></a>*号和&amp;号的意思：</h3><p>取地址运算符&amp;，间接运算符*<br>&amp;运算符：取地址运算符，&amp;m 即是变量m在内存中的实际地址。<br><em>运算符：指针运算符（通常称为间接引用运算符）它返回其操作数（即一个指针）所指向的对象的值。<br>指针的大小是固定的，指针的大小和类型无关，指针的类型与步长（+1后所得到的值，指针的步长和指针数组有很大联系）有关。无论什么类型下指针变量的类型永远是： 64bit环境下是8字节 32bit环境下是4字节<br>需要注意的是：char</em>p = &amp;H；它的类型要保持和 char H = ‘A’；的一致否则会出现对溢出内存的赋值。<br>例：打印一个值的地址：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> loser = <span class="number">38</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, &amp;loser);        <span class="comment">// &amp;取地址，返回其变量真实地址</span></span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针变量语法"><a href="#指针变量语法" class="headerlink" title="指针变量语法"></a>指针变量语法</h3><p>其基本形式为：<br>类型* 指针变量名；</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> *a = &amp;b;</span><br><span class="line"><span class="keyword">int</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">p = &amp;b;</span><br></pre></td></tr></table></figure><p>需要注意的是指针和指针变量是两种概念。指针指的是地址，指针变量指的是存放指针的变量。还需要注意指针变量需要初始化。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> loser = <span class="number">38</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, &amp;loser);        <span class="comment">// &amp;取地址，返回其变量真实地址</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>* p = &amp;loser;        <span class="comment">// 声明一个*p，它现在就是一个指针变量，它存储的是loser的内存地址，这样是声明与赋值二合一</span></span><br><span class="line"></span><br><span class="line">*p = <span class="number">3800</span>;        <span class="comment">// 修改地址的值为：3800。我们通过*间接的修改了loser的值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, loser);        <span class="comment">// 现在loser的值为：3800</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 通常声明可以采用这样的形式，但必须要初始化 */</span></span><br><span class="line"><span class="keyword">int</span>* pa = <span class="literal">NULL</span>;        <span class="comment">//如果不初始化会出现问题</span></span><br><span class="line">pa = &amp;loser;        <span class="comment">// pa获取loser的内存地址</span></span><br><span class="line">*pa = <span class="number">521</span>;        <span class="comment">// 然后我们可以通过*p(通过地址)去修改loser的值。通过*来间接操作内存来修改变量的值</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, loser);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 总结：指针变量是一种变量，它可以存储任意类型的地址。*是用来操作地址的，&amp;是变量的的地址</span></span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>指针变量是一种变量，它可以存储任意类型的地址。*是用来操作地址的，&amp;是变量的的地址。<br>*就是间接引用运算符，它就是通过地址间接去操作变量的值。就是通过地址找内存。<br>例如：<br>网名：小帅哥  ID账号：123456<br>&amp;就是直接去拿ID账号，网名就是变量名。<br>我们添加好友用ID账号。<br><em>就相当于通过ID账号查找内存进而操控。<br>注意：</em>变量就是指针变量，指针是一种概念。<br><em>如果还是不懂 * 和 &amp; 就另请大佬</em></p><p>指针的详解</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">250</span>;</span><br><span class="line">*(&amp;a) = <span class="number">38</span>;        <span class="comment">// 这个实际上和 a = 38 一样，但是这个是通过指针的方式来实现的。*操作(&amp;a)变量地址的值 = 38</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>* p = <span class="literal">NULL</span>;        <span class="comment">// 此处没有任何操作，只是声明和初始化一个指针变量</span></span><br><span class="line">p = &amp;a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, p);        <span class="comment">// p 在这里存储的是a的内存地址</span></span><br><span class="line">*p = <span class="number">200</span>;        <span class="comment">// p加上一个*号我们就可以修改a的值(通过内存地址修改)</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>指针练习一<br>需要注意的是：char<em>p = &amp;H；它的类型要保持和 char H = ‘A’；的一致否则会出现对溢出内存的赋值。<br>如果将char <em>p = &H; 改成 int</em> p = &amp;H’;<br>int</em>  它指向的是整型空间，占4个字节，而指向的 H 只是一个字符型，占1个字节，那么*p = ‘B’; 是错误的根据，它会导致对溢出空间的赋值。会报错如：<em>run-time check failure #2 - stack around the variable ‘hello’ was corrupted.</em></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        假设我知道了你的账号(内存地址)，我要修改你的网名(内存中的内容)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> H = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">char</span>* p = &amp;H;        <span class="comment">// 指针变量就是存地址的变量</span></span><br><span class="line">*p = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;H的值为：%c\n&quot;</span>, H);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p存储的地址为：%p\n&quot;</span>, p);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p的地址为：%p\n&quot;</span>, &amp;p);        <span class="comment">// 指针变量的地址，好比黑客的号被盗了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 黑客盗了 H的账号，有人盗了黑客的账号，能不能通过黑客的号找到 H 的号 ：答案是成立的</span></span><br><span class="line"><span class="comment">// 能不能通过黑客的账号去修改 H 的网名 ：可以的，采用二级指针</span></span><br><span class="line"><span class="comment">// 注意：存储指针变量的地址只能是二级指针</span></span><br><span class="line"></span><br><span class="line">H = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;H=&#x27;C&#x27;;的值为：%c\n&quot;</span>, H);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;通过地址获取的为：%c\n&quot;</span>, *p);        <span class="comment">// 通过地址去找内容</span></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>指针练习二</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span>* p = <span class="literal">NULL</span>;</span><br><span class="line">p = &amp;a;</span><br><span class="line">*p = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>* H = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">double</span>* D = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;指针p的大小为：%d\n&quot;</span>, <span class="keyword">sizeof</span>(p));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;指针H的大小为：%d\n&quot;</span>, <span class="keyword">sizeof</span>(H));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;指针D的大小为：%d\n&quot;</span>, <span class="keyword">sizeof</span>(D));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 总结：无论什么类型下指针变量的类型永远是： 64bit环境下是8字节 32bit环境下是4字节</span></span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针的变量和指针的概念（重点）"><a href="#指针的变量和指针的概念（重点）" class="headerlink" title="指针的变量和指针的概念（重点）"></a>指针的变量和指针的概念（重点）</h3><p>“指针”是概念，“指针变量”是具体的实现，指针也是一个变量，所以需要进行定义，而对指针的定义，与一般变量一样。</p><h4 id="指针和指针变量的关系"><a href="#指针和指针变量的关系" class="headerlink" title="指针和指针变量的关系"></a><em>指针和指针变量的关系</em></h4><p>指针就是地址，地址就是指针。<br>地址就是内存单元的编号。<br>指针变量就是存放指针地址的变量。</p><p>指针和指针变量是两个不同的概念，但要注意的是，通常我们叙述时会把指针变量简称为指针，实际他们的含义是不同的。<br>指针变量也是一种变量，不同的是，指针变量只存储地址。<br>指针变量既然是变量那么它的存储地址是可以改变的。不是固定的。<br>注意区分指针变量的值和指针变量的地址。</p><h2 id="5-0-3-声明指针需要注意的点"><a href="#5-0-3-声明指针需要注意的点" class="headerlink" title="5.0.3 声明指针需要注意的点"></a>5.0.3 声明指针需要注意的点</h2><p>指针变量在使用之前必须进行初始化。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> num = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> *p;</span><br><span class="line">p=&amp;num;</span><br></pre></td></tr></table></figure><p>上面演示的代码是非法的，可以编译，运行报错，会把100当作一个地址。<br>指针只是一个地址，大小是固定的，在32bit环境下是4字节，在64bit下是8字节。</p><p>指针和地址的区别两个要点：<br>指针是个量，对应着一块内存区域<br>指针存储的信息是某个内存单元的地址<br>比如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;a;</span><br></pre></td></tr></table></figure><p>&amp;a 是一个地址，是一个常量。而p是一个指针变量，可以存储一个地址。比如：300500是一个地址，int <em>p=（int</em>）300500是一个指针变量。p存储的是地址，指针有类型，从哪里开始，长度是多少，从哪里结束，得知了类型以后，就知道这片内存数据是如何解析。</p><p>指针变量的声明与初始化：在声明一个指针后，编译器并不会自动完成其初始化，此时指针的值是不确定的，也就是说，该指针指向那块内存单元是完全随机的。<br>如果在指针变量声明之初确实不知道该将此指针指向何处，最简单的方式是将其置为”0”,C语言中提供了关键字 NULL。</p><p>取指针的过程是CPU寄存器产生的，不占用内存</p><h2 id="5-0-4-数组和指针（简单）"><a href="#5-0-4-数组和指针（简单）" class="headerlink" title="5.0.4 数组和指针（简单）"></a>5.0.4 数组和指针（简单）</h2><p>数组名是数组的首元素的地址，同时也是数组地址。<br>例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> &#125;;        <span class="comment">// 1值的地址和取数组的地址是一致的a[3]。&#123;1，2，3&#125;他们都要一个自己独立的内存地址</span></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">*        例如：白素贞 - 赵雅芝</span></span><br><span class="line"><span class="comment">*        赵雅芝是白素贞的代表，但不能说赵雅芝就是白素贞。</span></span><br><span class="line"><span class="comment">*        可以扮演白素贞的演员很多，说起白素贞就想起赵雅芝。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">char</span> bai[] = &#123; <span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;j&#x27;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;白素贞：    %p\n&quot;</span>, &amp;bai);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;赵雅芝：    %p\n&quot;</span>, bai);        <span class="comment">// 打印数组名，默认是打印数组首元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数组首元素：%p\n&quot;</span>, &amp;bai[<span class="number">0</span>]);        <span class="comment">// 此句与printf(&quot;赵雅芝：%p\n&quot;, bai);功能一样</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        白素贞是个角色，谁都可以演：赵雅芝、周涛、菊花</span></span><br><span class="line"><span class="comment">*        赵雅芝就是白素贞这个数组的第一个元素(首元素)</span></span><br><span class="line"><span class="comment">*        它的地址就是数组的地址(一维数组下)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>数组名就是表示数组首地址常量<br>数组地址和数组首元素地址不同之处在于类型不一样。<br>类型不一样导致步长不一样。<br>例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">10</span>;        <span class="comment">// 分配4字节的内存</span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;        <span class="comment">// 告诉编译器分配4*10 = 40个字节的内存</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;array：%p\narray+1：%p\narray：%p\n&amp;array+1：%p\n&quot;</span>, <span class="built_in">array</span>, <span class="built_in">array</span> + <span class="number">1</span>, &amp;<span class="built_in">array</span>, &amp;<span class="built_in">array</span> + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;array：%d,array+1：%d,array：%d,&amp;array+1：%d\n&quot;</span>, <span class="built_in">array</span>, <span class="built_in">array</span> + <span class="number">1</span>, &amp;<span class="built_in">array</span>, &amp;<span class="built_in">array</span> + <span class="number">1</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        array+1 和 &amp;array+1 的结果是不同的</span></span><br><span class="line"><span class="comment">*        是因为 array 和 &amp;array 所代表的数据类型不一样</span></span><br><span class="line"><span class="comment">*        array 代表数组首元素的地址 如：代表赵雅芝这个演员</span></span><br><span class="line"><span class="comment">*        &amp;array 代表整体数组的地址 如：代表白素贞这个角色</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">*        这里array也可以写成 array[0] 是一个int类型 +1 = 加了4字节 它+1等于加了一个int型变量</span></span><br><span class="line"><span class="comment">*        &amp;array 是数组类型+1后 = 加了40字节 它+1等于加了一个数组</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">*        虽然地址相同，但+1后的值不同。因为他们的类型不一样</span></span><br><span class="line"><span class="comment">*        array 和 array[0]是等同的</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-0-5-判断数据类型的大小"><a href="#5-0-5-判断数据类型的大小" class="headerlink" title="5.0.5 判断数据类型的大小"></a>5.0.5 判断数据类型的大小</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sizeof(a)：%d\n&quot;</span>, <span class="keyword">sizeof</span>(a));                        <span class="comment">// 4字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sizeof(int *)：%d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>*));        <span class="comment">// 32Bit下4四字节，64Bit下8字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sizeof(b)：%d\n&quot;</span>, <span class="keyword">sizeof</span>(b));                        <span class="comment">// 4*10 = 40字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sizeof(b[0])：%d\n&quot;</span>, <span class="keyword">sizeof</span>(b[<span class="number">0</span>]));                <span class="comment">// 4字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sizeof(*b)：%d\n&quot;</span>, <span class="keyword">sizeof</span>(*b));                        <span class="comment">// 4个字节(取地址)</span></span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-0-6-修改变量的两种方式"><a href="#5-0-6-修改变量的两种方式" class="headerlink" title="5.0.6 修改变量的两种方式"></a>5.0.6 修改变量的两种方式</h2><p>变量的本质：<br>程序通过变量来申请和命名内存空间。<br>通过变量名访问内存空间。<br>变量：一段连续内存空间的别名。<br>修改变量的两种方式：<br>直接：通过变量名直接修改变量。<br>间接：通过指针地址来间接修改变量。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        采用两种方式来修改变量：直接与间接(提供指针)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;        <span class="comment">// 变量名可以看作内存地址的别名</span></span><br><span class="line">a = <span class="number">1</span>;                <span class="comment">// 直接修改</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>* p = &amp;a;        <span class="comment">// 变量地址相当于身份证号，拿取 a 的内存地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p = %p &amp;a = %p\n&quot;</span>, p, &amp;a);</span><br><span class="line"></span><br><span class="line">*p = <span class="number">100</span>;        <span class="comment">// 间接 提供内存地址间接修改变量</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-0-7-数据类型的本质"><a href="#5-0-7-数据类型的本质" class="headerlink" title="5.0.7 数据类型的本质"></a>5.0.7 数据类型的本质</h2><p>数据类型可理解为创建变量的模具：是固定内存大小的别名。<br>数据类型的作用：编译器预算对象（变量）分配的内存空间的大小。<br>注意：数据类型只是模具，编译器并没有分配空间，只有根据类型（模具）创建变量（实物），编译器才会分配空间。<br>数据类型和变量的关系：通过数据类型定义变量。</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebServer构建</title>
      <link href="/2022/03/08/WebServer_2022_3.08.01/"/>
      <url>/2022/03/08/WebServer_2022_3.08.01/</url>
      
        <content type="html"><![CDATA[<p>注意：该项目是采用C语言调用 WindowsAPI 进行实现的，如果不掌握简单的网络通信协议和C语言与Windows API 编程请先掌握后再来看。</p><h1 id="什么是协议，理解IP地址和端口的概念"><a href="#什么是协议，理解IP地址和端口的概念" class="headerlink" title="什么是协议，理解IP地址和端口的概念"></a>什么是协议，理解IP地址和端口的概念</h1><p>作为新时代标杆的我们，已经离不开手机，离不开网络。对于互联网大家可能耳熟能详，但计算机网络的出现比互联网要早很多。</p><h2 id="什么是协议"><a href="#什么是协议" class="headerlink" title="什么是协议"></a>什么是协议</h2><p>有的人说英语，有的人说中文，有的人说德语，说同一种语言的人可以交流，不同的语言之间就不行了。<br>如果语言不同则需要翻译，否则两人之间无法沟通，或者约定一下，我们都说英语，这个约定就相当于协议。<br>网络协议是通信计算机双方必须共同遵从的一组约定。它的三要素是：语法、语义、时序</p><h2 id="计算机网络沟通用什么"><a href="#计算机网络沟通用什么" class="headerlink" title="计算机网络沟通用什么"></a>计算机网络沟通用什么</h2><p>TCP / IP 传输控制协议：是指能够在多个不同网络间实现信息传输的协议簇。<br>TCP /  IP 协议不仅仅指的是TCP 和 IP 两个协议，而是指一个由 FTP、SMTP、TCP、UDP、IP 等协议构成的协议簇，只是因为 TCP / IP 协议中 TCP 协议和 IP 协议最具有代表性，所以被称为 TCP / IP 协议。</p><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><h3 id="什么是端口"><a href="#什么是端口" class="headerlink" title="什么是端口"></a>什么是端口</h3><p>设备与外界通讯交流的出口。<br>端口就好比一个房子的门，是出入这间房子的必经之路。</p><table><thead><tr><th>物理端口</th><th>电脑网口、USB</th></tr></thead><tbody><tr><td>虚拟端口</td><td>程序和网络进行通信的端口</td></tr></tbody></table><h3 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h3><p>端口是通过端口号来标记的，端口号只有整数，范围是从 0 到 65535 2字节存储 2^16 - 1</p><h3 id="端口是怎样分配的"><a href="#端口是怎样分配的" class="headerlink" title="端口是怎样分配的"></a>端口是怎样分配的</h3><p>端口号不是随便使用的，而是按照一定的规定进行分配。</p><h3 id="知名端口"><a href="#知名端口" class="headerlink" title="知名端口"></a>知名端口</h3><p>知名端口就是众所周知的端口号，范围从 0 到 1023<br>80 端口分配给 HTTP 服务<br>21 端口分配给 FTP 服务<br>22 端口分配给 SSH 服务（远程控制服务）</p><h3 id="动态端口"><a href="#动态端口" class="headerlink" title="动态端口"></a>动态端口</h3><p>动态端口的范围是从 1024 到 65535<br>之所以称为动态端口，是因为它一般不固定分配某种服务，而是动态分配/<br>动态分配是指当一个系统进程或应用程序进行需要网络通信时，它向主机申请一个端口，主机从可用端口号中分配一个供它使用。<br>当这个进程关闭时，同时也就释放了所占用的端口号。</p><h1 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h1><p>TCP 通讯过程中，必须得先建立相关的链接，才能进行相互通讯，这个类似于我们日常生活中的打电话。TCP 的三次握手。<br>​如果想让别人能够打通我们的电话获取相应的服务就需要做以下几件事情：</p><table><thead><tr><th>买手机</th><th>socket 创建一个套接字</th></tr></thead><tbody><tr><td>插上手机卡</td><td>bind  绑定ip 和 port（端口号）</td></tr><tr><td>设计手机为正常接听状态（即能够响铃）</td><td>listen 使套接字变为可以被动链接</td></tr><tr><td>静静的等着别人拨打</td><td>accept 等待客户端的链接</td></tr><tr><td>接收电话</td><td>recv / send 接收发送数据</td></tr></tbody></table><p>如同上面的电话机过程一样，在程序中，如果想要完成一个 TCP 服务功能，需要的程序流程如上第二列内容。</p><h1 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h1><p>HTTP 协议即超文本传输协议，是Web联网的基础，也是手机联网常用的协议之一，HTTP 协议是建立在 TCP 协议之上的一种应用。<br>​</p><h3 id="典型的-HTTP-事务处理有如下的过程"><a href="#典型的-HTTP-事务处理有如下的过程" class="headerlink" title="典型的 HTTP 事务处理有如下的过程"></a>典型的 HTTP 事务处理有如下的过程</h3><h3 id="客户与服务器建立链接。"><a href="#客户与服务器建立链接。" class="headerlink" title="客户与服务器建立链接。"></a>客户与服务器建立链接。</h3><p>客户向服务器提出请求。<br>服务器接受请求，并根据请求返回相应的文件作为应答。<br>客户与服务关闭链接。<br>​</p><p>HTTP 请求数据方法：GET HEAD POST PUT 等<br>每种请求方法规定了客户和服务器之间不同的信息交换方式，常用的请求方法是 GET 和 POST<br>​</p><p>七层模型：物理层，数据层链路层、网络层、传输层、会话层、表示层、应用层。</p><h1 id="实例代码："><a href="#实例代码：" class="headerlink" title="实例代码："></a>实例代码：</h1><p>注意：在运行HTML文件前，请在项目属性中 - C/C++ - 常规 - SDL检查改成否</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WinSock2.h&gt;</span></span></span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PORT 80</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DATASIZE 1024</span></span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sendHtml</span><span class="params">(SOCKET client, <span class="keyword">char</span>* filenName)</span></span>;</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;图灵服务器开启成功\n&quot;</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        确定使用的 Socket 版本信息</span></span><br><span class="line"><span class="comment">*        第一个参数：期望使用的版本</span></span><br><span class="line"><span class="comment">*        第二个参数：获取版本信息</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">WSADATA wsadata;</span><br><span class="line"><span class="keyword">int</span> ISOK = WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsadata);</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ISOK == WSAEINVAL) &#123;</span><br><span class="line">perror(<span class="string">&quot;SOCKET 请求失败……\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        创建一个 Socket</span></span><br><span class="line"><span class="comment">*        第一个参数：协议族。指定使用什么协议 AF_INET 使用 IPv4</span></span><br><span class="line"><span class="comment">*        第二个参数：传输类型 Sock_STREAM 流传输</span></span><br><span class="line"><span class="comment">*        第三个参数：遵从 TCP 协议</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">SOCKET server = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (server == INVALID_SOCKET) &#123;</span><br><span class="line">perror(<span class="string">&quot;SOCKET 创建失败……\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 绑定端口号和 IP 地址 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">seraddr</span>;</span></span><br><span class="line">seraddr.sin_family = AF_INET;</span><br><span class="line">seraddr.sin_port = htons(PORT);        <span class="comment">// 注意：网络是大端存储，电脑是小端存储</span></span><br><span class="line">seraddr.sin_addr.s_addr = INADDR_ANY;</span><br><span class="line">ISOK = bind(server, (struct sockaddr*) &amp; seraddr, <span class="keyword">sizeof</span>(seraddr));</span><br><span class="line"><span class="keyword">if</span> (ISOK == SOCKET_ERROR) &#123;</span><br><span class="line">perror(<span class="string">&quot;BIND 绑定失败……\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 监听 listen 第二个参数：同时监听多少 */</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;等待链接中……\n&quot;</span>);</span><br><span class="line">listen(server, <span class="number">5</span>);</span><br><span class="line">SOCKET client = accept(server, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (client == INVALID_SOCKET) &#123;</span><br><span class="line">perror(<span class="string">&quot;ACCEPT 监听失败……\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 接收信息 */</span></span><br><span class="line"><span class="keyword">char</span> buffer[DATASIZE];</span><br><span class="line">recv(client, buffer, <span class="keyword">sizeof</span>(buffer), <span class="number">0</span>);</span><br><span class="line"><span class="comment">//printf(&quot;%s 共接收到%d条数据\n&quot;, buffer, strlen(buffer));</span></span><br><span class="line"><span class="comment">//char sneddata[DATASIZE] = &quot;&lt;h1 style = \&quot;color:red;\&quot;&gt;Hello Turing&lt;/h1&gt;&quot;;</span></span><br><span class="line"><span class="comment">//send(client, sneddata, strlen(sneddata), 0);</span></span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 网页文件传输 */</span></span><br><span class="line">sendHtml(client, <span class="string">&quot;./index.html&quot;</span>);</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 通信完毕，断开链接 */</span></span><br><span class="line">closesocket(client);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 关闭服务器 */</span></span><br><span class="line">closesocket(server);</span><br><span class="line"><span class="comment">/* 关闭 Socket 套接字请求 */</span></span><br><span class="line">WSACleanup();</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num = getchar();</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sendHtml</span><span class="params">(SOCKET client, <span class="keyword">char</span>* filenName)</span> </span>&#123;</span><br><span class="line">FILE* pfile = fopen(filenName, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pfile == <span class="literal">NULL</span>) &#123;</span><br><span class="line">perror(<span class="string">&quot;HTML 文件打开失败……\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line"><span class="keyword">char</span> senddata[DATASIZE];</span><br><span class="line">fgets(senddata, DATASIZE, pfile);</span><br><span class="line">send(client, senddata, <span class="built_in">strlen</span>(senddata), <span class="number">0</span>);</span><br><span class="line">&#125; <span class="keyword">while</span> (!feof(pfile));</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 关闭 */</span></span><br><span class="line">fclose(pfile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言逻辑流程</title>
      <link href="/2022/03/07/C_2022_3.07.01/"/>
      <url>/2022/03/07/C_2022_3.07.01/</url>
      
        <content type="html"><![CDATA[<h2 id="4-0-函数"><a href="#4-0-函数" class="headerlink" title="4.0. 函数"></a>4.0. 函数</h2><p>程序的最小独立单元 - 语句<br>程序：为解决某一问题而设计的一系列有序指令的集合。<br>数据说明：数据的描述（数据的名称、类型、和初值等）<br>语句：如何处理数据的描述</p><h3 id="函数的定义："><a href="#函数的定义：" class="headerlink" title="函数的定义："></a>函数的定义：</h3><h3 id="函数就是对某一特定功能的抽象"><a href="#函数就是对某一特定功能的抽象" class="headerlink" title="函数就是对某一特定功能的抽象"></a>函数就是对某一特定功能的抽象</h3><h3 id="函数的作用："><a href="#函数的作用：" class="headerlink" title="函数的作用："></a>函数的作用：</h3><h3 id="代码重用，模块化（便于定位错误）"><a href="#代码重用，模块化（便于定位错误）" class="headerlink" title="代码重用，模块化（便于定位错误）"></a>代码重用，模块化（便于定位错误）</h3><p>例：编写一个加法函数，参数为两个值，无返回值。</p><h3 id="函数的分类"><a href="#函数的分类" class="headerlink" title="函数的分类"></a>函数的分类</h3><ul><li>无参函数</li></ul><p>通过用来执行一些功能比较单一的语句<br>例如：getchar()</p><ul><li>有参函数</li><li>通过处理传递过来的参数将函数值返回给主调函数</li></ul><p>Sin(),cos()</p><ul><li>库函数</li></ul><p>库函数分为标准库函数和第三方库函数。<br>库函数的特点：右C语言提供；用户无需定义，也不必再程序中做类型说明，只想要在程序前包含有该函数的头文件。<br>典型的如：system（）</p><ul><li>函数定义的语法格式：<br>函数定义有4个要素：参数列表，返回类型，函数名和函数体，参数列表和返回值类型，函数名用于和程序中其他实体区分，而函数体是一段可执行的代码块，实现特定的算法或功能。<h3 id="函数调用的两种方式"><a href="#函数调用的两种方式" class="headerlink" title="函数调用的两种方式"></a>函数调用的两种方式</h3></li></ul><ol><li>函数调用有两种类型，一是”先定义，后调用”，这要求函数定义和调用语句在同一个文件内，编译器能从函数定义中提取函数的参数列表、输出类型等接口信息。</li></ol><p>如果没有函数的定义，就想要将函数实例写在主调用函数之前。<br>举例：函数声明和调用在一个文件内：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num1,num2;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入数值a：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n请输入数值b：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num2);</span><br><span class="line"><span class="built_in">add</span>(num1,num2);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> c = a + b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a+b = %d\n&quot;</span>, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>二是”函数声明+函数调用” 大多数情况下，函数的定义与函数的调用，并吧在一个文件内，即使在一个文件中也有可能调用在前而定义在后，这时想要，在调用之前先对函数声明，告诉编译器有这么一个函数的存在。</li></ol><p>举例：函数的跨文件调用</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 头文件 函数.h */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once        <span class="comment">// 防止头文件重复包含</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 源文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;4.0 函数.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 函数的定义 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num1,num2;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入数值a：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n请输入数值b：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num2);</span><br><span class="line"><span class="built_in">add</span>(num1,num2);</span><br><span class="line"><span class="built_in">Hello</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> c = a + b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a+b = %d\n&quot;</span>, c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数注意事项："><a href="#函数注意事项：" class="headerlink" title="函数注意事项："></a>函数注意事项：</h3><ul><li>函数的定义在程序中都是平行的，即不允许在一个函数的内部调用（再写）另一个函数。</li><li>函数名是用户自定义标识符，当函数值为整型时类型名可省略。当函数不需要向调用出返回值时，使用void类型名。</li><li>形参列表中的形参是用户自定义标识符，没有参数时，圆括号不能省略，此时函数为无参函数。</li><li>函数在没有声明的时候必须写在主调函数Main之前否则会出错。因为程序是自上而下执行的<h2 id="4-1-数组"><a href="#4-1-数组" class="headerlink" title="4.1. 数组"></a>4.1. 数组</h2><h3 id="数组的概念"><a href="#数组的概念" class="headerlink" title="数组的概念"></a>数组的概念</h3></li></ul><ol><li>数组的概念：</li></ol><p>数组是可以在内存中连续存储多个元素的结构<br>数组中的所有元素必须属于相同的数据类型<br>举例：int a[5] = {0,1,2,3,4}; printf(“&amp;a”);<br>在内存中查看连续的5个元素</p><ol><li>数组语法</li></ol><p>类型数组名[数组元素个数] = {数组元素}；</p><p>例如：int a[10] = {0};</p><p>int a[] = {1,2,3};  // 当数组元素确定的时候数组个数可以省略</p><p>int a[5] = {1,2,3};  // 不足填充0</p><p>printf(“%d\n”, sizeof(a) / sizeof(int));// 查看数组元素的个数</p><p>一组数组就好比对货物的编号。<br>注意：数组的下标是从0开始的。数组在内存中是连续排列的<br>告诉编译器4条信息：数组名是a，存放的元素是int型，数组存放的元素个数为10，元素值为0，这样便可以对数组及数组元素进行读写访问。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5        <span class="comment">// 只需要修改常量就可以修改数组和循环函数的值</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[N] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, &amp;a);        <span class="comment">// %p用来输出指针类型自身的值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(a)); <span class="comment">// 查看a数组大小 1int = 4 4*5 = 20字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(a) / <span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">int</span>));        <span class="comment">// 查看数组元素的个数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 循环打印数组地址 */</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a[%d] = %d &amp;a[%d] = %x\n&quot;</span>, i, a[i], i, &amp;a[i]);        <span class="comment">//X 打印地址 P也打印地址</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*  数组 = 值 数组 = 地址</span></span><br><span class="line"><span class="comment">a[0] = 1 &amp;a[0] = bc36f638</span></span><br><span class="line"><span class="comment">a[1] = 2 &amp;a[1] = bc36f63c</span></span><br><span class="line"><span class="comment">a[2] = 3 &amp;a[2] = bc36f640</span></span><br><span class="line"><span class="comment">a[3] = 4 &amp;a[3] = bc36f644</span></span><br><span class="line"><span class="comment">a[4] = 5 &amp;a[4] = bc36f648</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-1-1-二维数组"><a href="#4-1-1-二维数组" class="headerlink" title="4.1.1 二维数组"></a>4.1.1 二维数组</h2><ol><li>概念</li></ol><p>一维数组常称为向量，二维数组，最简单的理解是”有两个下标”，如果把一维数组理解为一行数据，那么，二维数组可形象地表示为行列结构。X Y就是二维，X Y Z 就是三维<br>例子：int a[2][3] = {1,2,3,4,5,6}<br>其中第一个方括号中的元素代表行，第二个方括号中的元素代表列</p><table><thead><tr><th>身高&#124;体态</th><th>丰满的</th><th>苗条的</th></tr></thead><tbody><tr><td>修长的</td><td></td><td></td></tr><tr><td>小巧玲珑的</td><td></td><td></td></tr></tbody></table><p>查看数组在内存当中的分布。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储了3*5 = 15个元素        3行5列 一行5个元素</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">5</span>] = &#123; &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;,&#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;,&#123;<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, &amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(a));        <span class="comment">// 大小是 60 4字节*15元素 = 60字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(a) / <span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">int</span>));        <span class="comment">// 60字节 / 4字节 = 15元素</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>初始化二维数组</li></ol><p>注意：二维数组中的元素同样是给分配在一段连续的内存<br>初始化表达式中内层花括号代表一行，这样和一维数组中只能对前几个元素初始化不同，二维数组的初始化可以跳过某些中间元素，给后面的元素赋值。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>][<span class="number">3</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;;</span><br></pre></td></tr></table></figure><p>也可以这样初始化：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[][<span class="number">4</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;&#125;;</span><br></pre></td></tr></table></figure><p>大括号初始化了以后，行号可以省略</p><h3 id="两种赋值方法："><a href="#两种赋值方法：" class="headerlink" title="两种赋值方法："></a>两种赋值方法：</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储了3*5 = 15个元素        3行5列 一行5个元素</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">5</span>] = &#123; &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;,&#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;,&#123;<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, &amp;a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(a));        <span class="comment">// 大小是 60 4字节*15元素 = 60字节</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(a) / <span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">int</span>));        <span class="comment">// 60字节 / 4字节 = 15元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 二维数组赋值方法 */</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>, a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;------------------------------------------------\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b[<span class="number">3</span>][<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">3</span>][<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++) &#123;</span><br><span class="line">b[i / <span class="number">5</span>][i % <span class="number">5</span>] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">c[i][j] = i * <span class="number">5</span> + j + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;b = %d\n&quot;</span>, b[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;------------------------------------------------\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;c = %d\n&quot;</span>, c[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二维数组地址的引用"><a href="#二维数组地址的引用" class="headerlink" title="二维数组地址的引用"></a>二维数组地址的引用</h3><p>元素a[i][j]的地址是&amp;a[i][j];二维数组的数组名代表该数组的首地址；<br>比如：a实际上就是&amp;a[0][0]。二维数组元素在内存中按行存放，第一行的首地址为a[0]第二行的首地址为a[1]，……，第n行的首地址为a[n-1]；<br>&amp;a[i][j]等价于 a[i]+j。</p><h2 id="4-2-基础算法"><a href="#4-2-基础算法" class="headerlink" title="4.2 基础算法"></a>4.2 基础算法</h2><h3 id="选择排序法"><a href="#选择排序法" class="headerlink" title="选择排序法"></a>选择排序法</h3><ol><li>如何看懂带算法的程序<ol><li>看流程判断和循环条件</li><li>搞清楚每个语句的功能</li><li>试数</li><li>调试</li><li>模仿改</li></ol></li><li>选择排序法求极值</li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Max = a[<span class="number">0</span>];        <span class="comment">// 初始化 Max = 1 然后去比较如果a[i]大于Max 那将a[i]的值赋予Max</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="comment">// 这行打断点，打开局部变量调试查看</span></span><br><span class="line"><span class="keyword">if</span> (Max &lt; a[i]) &#123;</span><br><span class="line">Max = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Max(最大值)的值为：%d\n&quot;</span>, Max);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="comment">// 这行打断点，打开局部变量调试查看</span></span><br><span class="line"><span class="keyword">if</span> (Max &gt; a[i]) &#123;</span><br><span class="line">Max = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最小值为：%d\n&quot;</span>, Max);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="number">10</span>) &#123;</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (Max &lt; a[i]) &#123;</span><br><span class="line">Max = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;while循环下Max的值为：%d\n&quot;</span>, Max);</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择排序方法一：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        假设初始化 Max 的值是最大的</span></span><br><span class="line"><span class="comment">*        Max = i 在每次循环中加1 然后用 Max 去循环和 j 比较</span></span><br><span class="line"><span class="comment">*        如果 j 大于 Max 就交换位置</span></span><br><span class="line"><span class="comment">*        </span></span><br><span class="line"><span class="comment">*        Max = a[0] = 1 | j = i+1 = 2 | = 2 1</span></span><br><span class="line"><span class="comment">*        内循环第一次最终结果：2,1,3,4,5,6,7,8,9,0</span></span><br><span class="line"><span class="comment">*        内循环第二次最终结果：3,1,2,4,5,6,7,8,9,0</span></span><br><span class="line"><span class="comment">*        外循环第一次最终结果：9,1,2,3,4,5,6,7,8,0</span></span><br><span class="line"><span class="comment">*        外循环第二次最终结果：9,8,1,2,3,4,5,6,7,0</span></span><br><span class="line"><span class="comment">*        外循环第三次最终结果：9,8,7,1,2,3,4,5,6,0</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">*        总结：</span></span><br><span class="line"><span class="comment">*        选择排序法 按住一个位置不动 循环出一个最大值</span></span><br><span class="line"><span class="comment">*        就好比打擂台 1挑全部 挑完一个再进行下一个</span></span><br><span class="line"><span class="comment">*        </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Max = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span> - <span class="number">1</span>; i++) &#123;        <span class="comment">// 最后剩余一个数肯定最小就不用比较了 所以减一</span></span><br><span class="line">Max = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[Max] &lt; a[j]) &#123;</span><br><span class="line"><span class="keyword">int</span> team = a[j];</span><br><span class="line">a[j] = a[Max];</span><br><span class="line">a[Max] = team;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 逐步分析结果 */</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %4d&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;------------- 最终结果 ---------------\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a 的值为：%d\n&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择排序法方法二（优化）：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        10 个人当老大</span></span><br><span class="line"><span class="comment">*   我只和其中最厉害的打</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> Max = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">Max = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[Max] &lt; a[j]) &#123;</span><br><span class="line">Max = j;        <span class="comment">// 存储 j 的下标 不直接交换 只比较不交换</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Max != i) &#123;</span><br><span class="line"><span class="keyword">int</span> team = a[i];</span><br><span class="line">a[i] = a[Max];</span><br><span class="line">a[Max] = team;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;------------- 最终结果 ---------------\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d\n&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="冒泡排序法"><a href="#冒泡排序法" class="headerlink" title="冒泡排序法"></a>冒泡排序法</h3><p>冒泡排序法求极值</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*  冒泡算法是两两的进行比较 9和8比较 8和7比较 如果大就相互交换</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a[i] &gt; a[i + <span class="number">1</span>]) &#123;</span><br><span class="line"><span class="keyword">int</span> team = a[i + <span class="number">1</span>];</span><br><span class="line">a[i + <span class="number">1</span>] = a[i];</span><br><span class="line">a[i] = team;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a 的最大值为：%d\n&quot;</span>,a[<span class="number">9</span>]);</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>冒泡排序法</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*        冒泡排序法</span></span><br><span class="line"><span class="comment">*        和选择排序法不同，选择排序法是固定一个值去比较大小</span></span><br><span class="line"><span class="comment">*        冒泡排序法是两两进行比较</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main37</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123; <span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="comment">// i每循环一次都会筛选出最大值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span> - <span class="number">1</span> - i; j++) &#123;                <span class="comment">//-i 是因为一个数已经在底了，所以就不用循环它了</span></span><br><span class="line"><span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>]) &#123;</span><br><span class="line"><span class="keyword">int</span> team = a[j + <span class="number">1</span>];</span><br><span class="line">a[j + <span class="number">1</span>] = a[j];</span><br><span class="line">a[j] = team;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n------------- 最终结果 ---------------\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二分查找法"><a href="#二分查找法" class="headerlink" title="二分查找法"></a>二分查找法</h3><p>二分查找法用于快速查找信息或数据，当然还有更快的方法插值算法<br>二分查找法，是去一段数据的中间值，我们用中间值和我们的数据进行比较，如果我们的数大于中间值，那么小于中间值的我们就不需要进行比较。<br>然后我们找到需要进行比较的头和尾，再去中间值进行判断去排除。反复的循环就可以找到我们需要的数<br>例如：<br>我们有一个数组从1-12，我们需要的数值是9。<br>那么我们可以算出1-12的中间值为6。<br>6和9进行比较，9大于6那么1-6都排除，<br>我们重新定义7为数据的头12为数据的尾。<br>假设我们定义11为中间值，9是小于11的那么11-12就可以排除<br>我们定义7-10为头和尾进行比较。以此类推我们就可以获取到我们的值。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindNum</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> data)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当然还有更快的算法：插值算法</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">a[i] = i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>,i);        <span class="comment">// 打印出数值赋值的数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您要查询的值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line"></span><br><span class="line">FindNum(a,data);</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindNum</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> head = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> foot = <span class="number">1000</span> - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">-2</span>;        <span class="comment">// 找到与没找到的判断值</span></span><br><span class="line"><span class="keyword">int</span> ci = <span class="number">0</span>;        <span class="comment">// 排除次数</span></span><br><span class="line"><span class="keyword">while</span> (head &lt;= foot) &#123;</span><br><span class="line"><span class="keyword">int</span> median = (head + foot) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;head 的值：%d Foot的值：%d Median的值：%d 次数：%d\n&quot;</span>,head,foot,median,++ci);</span><br><span class="line"><span class="keyword">if</span> (data == a[median]) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找到了 data的值为：%d\n&quot;</span>, data);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (data &gt; a[median]) &#123;        <span class="comment">// 值大于中间值，小于中间值的全部值被抛弃</span></span><br><span class="line">head = median + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;        <span class="comment">// 值小于中间值，大于中间值的全部值被抛弃</span></span><br><span class="line">foot = median - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">-2</span>) &#123;        <span class="comment">// 如果找不到这个值</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找不到这个值\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识汇编</title>
      <link href="/2022/03/06/Assembly_2022_3.6.01/"/>
      <url>/2022/03/06/Assembly_2022_3.6.01/</url>
      
        <content type="html"><![CDATA[<p>汇编语言是用计算机的思维去操作计算机。</p><h1 id="汇编语言概述"><a href="#汇编语言概述" class="headerlink" title="汇编语言概述"></a>汇编语言概述</h1><p>汇编语言是直接在硬件上工作的编程语言，首先要了解硬件系统的结构（重点主要在：CPU与内存），才能有效的应用汇编语言对其编程。<br>汇编学习的重点在如何利用硬件系统的编程结构和指令集有效灵活的控制系统进行工作。</p><h2 id="机器语言"><a href="#机器语言" class="headerlink" title="机器语言"></a>机器语言</h2><ul><li>机器语言是机器指令的集合。</li><li>机器指令展开来讲就是一台机器可以正确执行的命令。</li></ul><p><strong>指令</strong>：01010000（PUSH AX）把X推进堆栈<br><strong>电平脉冲</strong>：表示电子信号的浮点。0为平1为凸。<br>早期的程序员将0、1数字编程的程序代码打在纸带或卡片上，1打孔、0不打孔，再将程序通过纸带机或卡片机输入计算机，进行运算。后来，逐渐使用高科技（继电器、晶体管、石英震动），但打孔是始祖。<br><strong>例如</strong>：S =  768 + 12288 - 1280<br><strong>机器码</strong>：101100000000000000000011000001010000000000110000001011010000000000000101<br>假如将程序错写成以下，请找出错误：101100000000000000000011000001010000000001010000010110100000000000000101<br>如果在显示器上输出：welcome to masn。如果使用机器码。你看到这样的程序会怎么想？如果程序里有一个1被误写成0又如何去查找呢？</p><h2 id="汇编语言的产生"><a href="#汇编语言的产生" class="headerlink" title="汇编语言的产生"></a>汇编语言的产生</h2><p>汇编语言的主体是汇编指令。汇编指令和机器指令的差别在于指令的表示方法上。汇编指令是机器指令便于记忆的书写格式。汇编指令是机器指令的助记符。<br>例如：机器指令1000100111011000表示寄存器BX的内容送到AX中。汇编指令是MOV AX,BX（BX的移动到AX）。这样的写法与人类语言接近，便于阅读和记忆。<br>计算器能读懂的只有机器指令，那么如何让计算机执行程序员用汇编指令编写的程序呢？汇编语言会通过编译器（转化成机器码）输入进机器就可以执行了。</p><h2 id="汇编语言的组成"><a href="#汇编语言的组成" class="headerlink" title="汇编语言的组成"></a>汇编语言的组成</h2><p>汇编语言由以下三类组成：</p><ul><li>汇编指令（机器码的助记符）</li><li>伪指令（由编译器执行）</li><li>其他符号（由编译器识别）</li></ul><p>汇编语言的核心是汇编指令，它决定了汇编语言的特性。</p><h2 id="指令和数据"><a href="#指令和数据" class="headerlink" title="指令和数据"></a>指令和数据</h2><p>指令和数据是应用上的概念。在内存或磁盘上，指令和数据没有任何区别，都是二进制信息。<br><strong>二进制信息</strong>：<br>1000100111011000 -&gt; 89D8H（数据）<br>1000100111011000 -&gt; MOV AX,BX（程序）<br><strong>什么是内存地址空间？</strong><br>一个CPU的地址宽度为10，那么可以寻址1024个内存单元，这1024个可寻到的内存单元就构成这个CPU的内存地址空间。首先要介绍两个部分的基础知识，主板和接口卡（<strong>请跳转至各类存储器的芯片，看完后再向下看</strong>）。<br>上述的那些存储器在物理上是独立的器件。但它们在以下两点上相同：</p><ul><li>都和CPU总线相连</li><li>CPU对它们进行读或写的时候都通过控制线发出内存读写命令。（CPU读写时候看不到内存，看主存储器地址空间的那一类：<a href="https://onedrive.live.com/sync?ru=https://d.docs.live.net/1a76aba5568fb83d/OneNote%2520%E4%B8%8A%E4%BC%A0/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80#t=EgAkAgMAAAAMgAAADQABIF3g6JPKWfrdh6f0xNL4C5UltnAOXkUw4812GSMAt2%2BHz3HcBWdTB%2Br%2F9mrbeHmy1SlRh5Wszh5Fxun%2BKyFm%2BR%2BdTxupzJF9HxGyD0zZO2NoLrSv%2Fw1QMQdOY0SYBTSBv2sCwJ4LY%2FH6E2eap92DJi1%2BAn0hC%2FcTZfcULl6U6CyvQbXKFGFWk2YdWGmZz1Xk4VdGCQbx5paThA6osOnty10YnRjtuaboXZjXAAINh7rixrZzFgLzIcY6D7mB1xJ8R0LxhkmsBqU7u%2BQi5590hZEYOQ638FphMQr8F6tP%2B%2Fp7Xsf01g9klDDSepJK7zUUKfMSVOBP9cJyzXBBrmKRbhMBewATAf2%2FAwA2VvsG%2FNkXYQf6%2BGAQJwAAChOgAAASADI2NDQyNjY2NTZAcXEuY29tAFsAAB4yNjQ0MjY2NjU2JXFxLmNvbUBwYXNzcG9ydC5jb20AAAAsQ04ABjIzMDAwMAAAdvAIBAIAAJGQbUAwBkEABUFydmluAARSb2FkBMgAAAAAAAAAAAAAAAAAAAAAVo%2B4PRp2q6UAAPzZF2G6LY5hAAAAAAAAAAAAAAAAEAAyMjMuMTA0LjIwMi4yMTgABQQAAAADQBgA7QaS8AQQBQAAAAAAAAAAAAAAAAAAAAhIY8RQXPufA0AYAHcikvAEABgARP9T1wAAAAAAAAAAAAAAAAAA%2Fz8jAIqnb4UAAAAAAwA%3D">CPU读写时看到的图片演示</a></li></ul><p><strong>假设</strong>：上图中的内存空间地址段分配如下：</p><ul><li>地址0~7FFFH的32KB空间为主随机存储器的地址空间。</li><li>地址8000H~9FFFH的8KB空间为显存地址空间。</li><li>地址A000H~FFFFH的24kb空间为各个ROM的地址空间。</li></ul><p><strong>不同的计算机系统的内存地址空间分配情况是不同的。（我们这里采用的是英特尔系列的架构）：</strong><a href="https://onedrive.live.com/sync?ru=https://d.docs.live.net/1a76aba5568fb83d/OneNote%2520%E4%B8%8A%E4%BC%A0/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/8086PC%E6%9C%BA%E7%9A%84%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D.png#t=EgAkAgMAAAAMgAAADQABIF3g6JPKWfrdh6f0xNL4C5UltnAOXkUw4812GSMAt2%2BHz3HcBWdTB%2Br%2F9mrbeHmy1SlRh5Wszh5Fxun%2BKyFm%2BR%2BdTxupzJF9HxGyD0zZO2NoLrSv%2Fw1QMQdOY0SYBTSBv2sCwJ4LY%2FH6E2eap92DJi1%2BAn0hC%2FcTZfcULl6U6CyvQbXKFGFWk2YdWGmZz1Xk4VdGCQbx5paThA6osOnty10YnRjtuaboXZjXAAINh7rixrZzFgLzIcY6D7mB1xJ8R0LxhkmsBqU7u%2BQi5590hZEYOQ638FphMQr8F6tP%2B%2Fp7Xsf01g9klDDSepJK7zUUKfMSVOBP9cJyzXBBrmKRbhMBewATAf2%2FAwA2VvsG%2FNkXYQf6%2BGAQJwAAChOgAAASADI2NDQyNjY2NTZAcXEuY29tAFsAAB4yNjQ0MjY2NjU2JXFxLmNvbUBwYXNzcG9ydC5jb20AAAAsQ04ABjIzMDAwMAAAdvAIBAIAAJGQbUAwBkEABUFydmluAARSb2FkBMgAAAAAAAAAAAAAAAAAAAAAVo%2B4PRp2q6UAAPzZF2G6LY5hAAAAAAAAAAAAAAAAEAAyMjMuMTA0LjIwMi4yMTgABQQAAAADQBgA7QaS8AQQBQAAAAAAAAAAAAAAAAAAAAhIY8RQXPufA0AYAHcikvAEABgARP9T1wAAAAAAAAAAAAAAAAAA%2Fz8jAIqnb4UAAAAAAwA%3D">8086PC机的内存地址空间分配</a><br><strong>内存地址空间</strong>：最终运行程序的是CPU，我们用汇编（<strong>所有编程，这是学习编程的核心思维</strong>）编程的时候，必须要从CPU角度考虑问题。对CPU来讲，系统中的所有存储器中的存储单元都处于一个统一的逻辑存储器中，它的容量受CPU寻址能力的限制。这个逻辑存储器即是我们所说的内存地址空间。<br>​</p><h1 id="硬件说明"><a href="#硬件说明" class="headerlink" title="硬件说明"></a>硬件说明</h1><p><strong>寄存器</strong>：简单的讲是CPU中可以存储数据的器件，一个CPU中有多个寄存器。AX是其中一个寄存器的代号，BX是另一个寄存器的代号。<br><strong>存储器：</strong>CPU是计算机的核心部件，它控制整个计算机的运作并进行运算，想要让一个CPU工作，就必须向它提供指令和数据（指令是怎么去做，数据是那些是做的那些是被做的）。指令和数据在存储器中存放，也就是平时说的内存。在一台PC机中内存的作用仅次于CPU，离开了内存，性能再好的CPU也无法工作，磁盘不同于内存，磁盘上的数据或程序如果不读到内存中，就无法被CPU使用。<br><strong>存储单元</strong>：存储器被划分为若干个存储单元，每个存储单元从0开始顺序编号。例如：一个存储器有128个存储单元，编号从0~127。对于大容量的存储器一般还用以下单位来计量容量（以下用B来代表Byte）：1KB = 1024B \ 1MB = 1024KB \ 1GB = 1024MB \ 1TB = 1024GB。磁盘的容量单位同内存的一样，实际上以上单位是微机中常用的计量单位。<br><strong>主板：</strong>在每一台PC机中，都有一个主板，主板上有核心器件和一些主要器件。这些器件通过总线（地址总线、数据总线、控制总线）相连。<br><strong>接口卡</strong>：计算机系统中，所有可用程序控制其工作的设备，必须受到CPU的控制。CPU对外部设备不能直接控制，如显示器、音响、打印机等。直接控制这些设备进行工作的是插在扩展插槽上的接口卡。</p><h2 id="各类存储器的芯片"><a href="#各类存储器的芯片" class="headerlink" title="各类存储器的芯片"></a>各类存储器的芯片</h2><p>从读写属性上看分为两类：随机存储器（RAM）和只读存储器（ROM）。内存就是一个大的随机存储器，特性是断电数据会遗失。只读存储器永远只能读，但是数据是永久存储的。只读存储器装有BIOS的ROM，BIOS：Basic Input/Ouutput System，基本输入输出系统。BIOS是由主板（显卡等也有）和各类接口卡（如：显卡、网卡等）厂商提供的软件系统，可以通过它利用该硬件设备进行最基本的输入输出。在主板和某些接口卡上插有存储相应BIOS的ROM。<br>从功能和连接分类：</p><ul><li>随机存储器RAM</li><li>装有BIOS的ROM</li><li>接口卡上的RAM</li></ul><p>PC机中各类存储器的逻辑连接情况：<a href="https://onedrive.live.com/sync?ru=https://d.docs.live.net/1a76aba5568fb83d/OneNote%2520%E4%B8%8A%E4%BC%A0/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/PC%E6%9C%BA%E4%B8%AD%E5%90%84%E7%B1%BB%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E9%80%BB%E8%BE%91%E8%BF%9E%E6%8E%A5%E6%83%85%E5%86%B5.png#t=EgAkAgMAAAAMgAAADQABIF3g6JPKWfrdh6f0xNL4C5UltnAOXkUw4812GSMAt2%2BHz3HcBWdTB%2Br%2F9mrbeHmy1SlRh5Wszh5Fxun%2BKyFm%2BR%2BdTxupzJF9HxGyD0zZO2NoLrSv%2Fw1QMQdOY0SYBTSBv2sCwJ4LY%2FH6E2eap92DJi1%2BAn0hC%2FcTZfcULl6U6CyvQbXKFGFWk2YdWGmZz1Xk4VdGCQbx5paThA6osOnty10YnRjtuaboXZjXAAINh7rixrZzFgLzIcY6D7mB1xJ8R0LxhkmsBqU7u%2BQi5590hZEYOQ638FphMQr8F6tP%2B%2Fp7Xsf01g9klDDSepJK7zUUKfMSVOBP9cJyzXBBrmKRbhMBewATAf2%2FAwA2VvsG%2FNkXYQf6%2BGAQJwAAChOgAAASADI2NDQyNjY2NTZAcXEuY29tAFsAAB4yNjQ0MjY2NjU2JXFxLmNvbUBwYXNzcG9ydC5jb20AAAAsQ04ABjIzMDAwMAAAdvAIBAIAAJGQbUAwBkEABUFydmluAARSb2FkBMgAAAAAAAAAAAAAAAAAAAAAVo%2B4PRp2q6UAAPzZF2G6LY5hAAAAAAAAAAAAAAAAEAAyMjMuMTA0LjIwMi4yMTgABQQAAAADQBgA7QaS8AQQBQAAAAAAAAAAAAAAAAAAAAhIY8RQXPufA0AYAHcikvAEABgARP9T1wAAAAAAAAAAAAAAAAAA%2Fz8jAIqnb4UAAAAAAwA%3D">PC机中各类存储器的逻辑连接情况演示图</a></p><h1 id="CPU对存储器读和写（核心）"><a href="#CPU对存储器读和写（核心）" class="headerlink" title="CPU对存储器读和写（核心）"></a>CPU对存储器读和写（核心）</h1><p><strong>CPU要想进行数据的读写，必须和外部器件（标准的说法是芯片）进行三类信息交互：</strong></p><ul><li>存储单元的地址（地址信息）</li><li>器件的选择，读或写命令（控制信息）</li><li>读或写的数据（数据信息）</li></ul><p><strong>那么CPU是通过什么将地址、数据和控制信息传到存储芯片中呢？</strong><br>电子计算机能处理、传输的信息都是电信号，电信号当然用导线传输。在计算机中专门有连接CPU和其他芯片的导线，通常称为总线。物理上：是一根根导线的集合。<br>逻辑上划分为：</p><ul><li>地址总线</li><li>数据总线</li><li>控制总线</li></ul><p><strong>CPU在内存中是如何读或写的？</strong></p><ul><li>读：CPU通过地址总线向内存发送信号，找到地址后，CPU通过控制总线进行发送指令，内存接受到CPU控制总线指令后通过数据总线将数据信息发送到CPU。</li><li>写：CPU通过地址总线向内存发送信号，找到地址后，CPU通过控制总线进行发送指令，CPU将数据信息通过数据总线写入内存中。</li></ul><p>从上面我们知道CPU是如何进行数据的读写，<strong>可是我们如何命令计算机进行数据的读写？</strong><br>1000100111011000 -&gt; 89D8H（数据）<br>1000100111011000 -&gt; MOV AX,BX（程序）<br>数据有时候可以代表程序，区分的方式就是看数据是从哪个总线传给CPU。<br><strong>案例：</strong><br>对于8086CPU，下面的机器码能够完成从3号单元读数据：</p><ul><li>机器码：101000000000001100000000。</li><li>含义：从3号单元读取数据送入寄存器AX。</li><li>CPU接收这条机器码后将完成上面所述的读写工作。</li></ul><p><strong>地址总线</strong>：CPU是通过地址总线来指定存储单元的。地址总线上能传送多少个不同的信息，CPU就可以对多少个存储单元进行寻址。<br>64Bit就代表64个总线：当CPU和系统以及软件都是64位才能达到64位寻址速度，缺一不可。那么，地址总线如何发送地址信息呢？<br>CPU向内存发送0000001011后内存会定位1011地址。<br>一个CPU有N根地址总线，则可以说找个CPU的地址总线的宽度为N。这样的CPU最多可以寻找2的N次方个内存单元。<br><strong>数据总线</strong>：CPU与内存或其他器件之间的数据传送是通过数据总线来进行的，数据总线的宽度决定了CPU和外界的数据传送速度。<br><strong>控制总线</strong>：CPU对外部器件的控制是通过控制总线来进行的。在这里控制总线是个总裁，控制总线是一些不同控制线的集合。有多少根控制总线，就意味着CPU提供了对外部器件的多少种控制。所以控制总线的宽度决定了CPU对外部器件的控制能力。前面所说的内存读写命令是由几根控制线综合发出的：</p><ul><li>其中一根名为<strong>读信号</strong>输出控制线负责由CPU向外传送读信号，CPU向改控制线上<strong>输出低电平</strong>表示将读取数据。</li><li>有一根名为<strong>写信号</strong>输出控制线负责由CPU向外传送写信号。</li></ul><p>​</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>汇编指令是机器指令的助记符，同机器指令一一对应。</li><li>每一种CPU都有自己的汇编指令集。</li><li>CPU可以直接使用的信息在存储器中存放。</li><li>在存储器中指令和数据没有任何区别，都是二进制信息。</li><li>存储单元从零开始顺序编号。</li><li>一个存储单元可以存储8个bit（用作单位写成b），即8位二进制数。</li><li>1B = 8b \ 1KB = 1024B \ 1MB = 1024KB \ 1GB = 1024MB \ 1TB = 1024GB。</li><li>每个CPU芯片都有许多管脚，这些管脚和总线相连。也就是说，这些管脚引出总线。一个CPU可以引出三种总线的宽度标志了这个CPU不同方面的性能：<ul><li>地址总线的宽度决定了CPU的寻址能力。</li><li>数据总线的宽度决定了CPU与其他器件进行数据传送时的一次数据传送量。</li><li>控制总线决定了CPU对系统中其他器件的控制能力。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
            <tag> 教学文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言基本语法（下）</title>
      <link href="/2022/03/06/C_2022_3.6.01/"/>
      <url>/2022/03/06/C_2022_3.6.01/</url>
      
        <content type="html"><![CDATA[<h2 id="3-5-0-运算符与表达式"><a href="#3-5-0-运算符与表达式" class="headerlink" title="3.5.0 运算符与表达式"></a>3.5.0 运算符与表达式</h2><p>算术运算符是用来进行基本的数学运算的，它的最终计算结果仍然是数值。算术运算符和数学中的算术运算符有很多相似之处，如优先级、综合性等。也有同数学运算符运算不同的地方，比如数学中计算1.1/2，不区分参与运算的对象是整数还是实数，最终的计算结果就是数学上真实的值；而C中，是区分参与运算的对象和数据类型的。<br>运算规则：先乘除后加减，有括号先算括号里的。<br>算术运算符：</p><table><thead><tr><th>运算符</th><th>说明</th><th>属性</th></tr></thead><tbody><tr><td>+</td><td>加法运算符</td><td>或表示正值，如3+2，+1</td></tr><tr><td>-</td><td>减法运算符</td><td>或表示负值，如3-2，-8</td></tr><tr><td>*</td><td>乘法运算符</td><td>如4*5</td></tr><tr><td>/</td><td>除法运算符</td><td>如5/3</td></tr><tr><td>%</td><td>求余运算符</td><td>如5%3</td></tr></tbody></table><p>C语言规定：<br>两个整数相除的结果整数，小数部分被舍弃。<br>例如：7/3 的结果值是2不是2.3333，而7.0/3的结果是2.333<br>%运算符只能用于整数相除求余，运算结果的符号与被除数相同。<br>​</p><p>当除号两边都是整型量时，叫做整除，运算结果只保留整数部分。<br>当除号任何一边有实型量时，运算结果是实数。<br>%要求两侧均为整型数据<br>演示：10 和 2取余</p><h3 id="运算符优先级："><a href="#运算符优先级：" class="headerlink" title="运算符优先级："></a>运算符优先级：</h3><table><thead><tr><th>优先级</th><th>运算符</th><th>名称含意</th><th>使用形式</th><th>结合方向</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>[]</td><td>数组下标</td><td>数组名[常量表达式]</td><td>左到右</td><td></td></tr><tr><td>1</td><td>（）</td><td>圆括号</td><td>（表达式）</td><td></td><td></td></tr><tr><td>1</td><td>函数名（形参表）</td><td>左到右</td><td></td><td></td><td></td></tr><tr><td>1</td><td>.</td><td>成员选择（对象）</td><td>对象.成员名</td><td>左到右</td><td></td></tr><tr><td>1</td><td>-&gt;</td><td>成员选择（指针）</td><td>对象指针-&gt;成员名</td><td>左到右</td><td></td></tr><tr><td>2</td><td>-</td><td>负号运算符</td><td>-表达式</td><td>右到左</td><td>单目运算符</td></tr><tr><td>2</td><td>（类型）</td><td>强制类型转换</td><td>（数据类型）表达式</td><td>右到左</td><td></td></tr><tr><td>2</td><td>++</td><td>自增运算符</td><td>++变量名</td><td></td><td></td></tr><tr><td>2</td><td>变量名++</td><td>右到左</td><td>单目运算符</td><td></td><td></td></tr><tr><td>2</td><td>–</td><td>自减运算符</td><td>–变量名</td><td></td><td></td></tr><tr><td>2</td><td>变量名–</td><td>右到左</td><td>单目运算符</td><td></td><td></td></tr><tr><td>2</td><td>*</td><td>取值运算符</td><td>*指针变量</td><td>右到左</td><td>单目运算符</td></tr><tr><td>2</td><td>&amp;</td><td>取地址运算符</td><td>&amp;变量名</td><td>右到左</td><td>单目运算符</td></tr><tr><td>2</td><td>!</td><td>逻辑运算符</td><td>!表达式</td><td>右到左</td><td>单目运算符</td></tr><tr><td>2</td><td>~</td><td>按位取反运算符</td><td>~表达式</td><td>右到左</td><td>单目运算符</td></tr><tr><td>2</td><td>sizeof</td><td>长度运算符</td><td>sizeof（表达式）</td><td>右到左</td><td></td></tr><tr><td>3</td><td>/</td><td>除</td><td>表达式 / 表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>3</td><td>*</td><td>乘</td><td>表达式*表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>3</td><td>%</td><td>取余（取模）</td><td>整型表达式%整型表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>4</td><td>+</td><td>加</td><td>表达式+表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>4</td><td>-</td><td>减</td><td>表达式-表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>5</td><td>&lt;&lt;</td><td>左移</td><td>变量&lt;&lt;表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>5</td><td>&gt;&gt;</td><td>右移</td><td>变量&gt;&gt;表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>6</td><td>&gt;</td><td>大于</td><td>表达式&gt;表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>6</td><td>&gt;=</td><td>大于等于</td><td>表达式&gt;=表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>6</td><td>&lt;</td><td>小于</td><td>表达式&lt;表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>6</td><td>&lt;=</td><td>小于等于</td><td>表达式&lt;=表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>7</td><td>==</td><td>等于</td><td>表达式==表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>7</td><td>！=</td><td>不等于</td><td>表达式!=表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>8</td><td>&amp;</td><td>按位与</td><td>表达式&amp;表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>9</td><td>^</td><td>按位异或</td><td>表达式^表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>10</td><td>&#124;</td><td>按位或</td><td>表达式&#124;表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>11</td><td>&amp;&amp;</td><td>逻辑与</td><td>表达式&amp;&amp;表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>12</td><td>&#124;&#124;</td><td>逻辑或</td><td>表达式&#124;&#124;表达式</td><td>左到右</td><td>双目运算符</td></tr><tr><td>13</td><td>？：</td><td>条件运算符</td><td>表达式1？表达式2：表达式3</td><td>右到左</td><td>三目运算符</td></tr><tr><td>14</td><td>=</td><td>赋值运算符</td><td>变量 = 表达式</td><td>右到左</td><td></td></tr><tr><td>14</td><td>/=</td><td>除后赋值</td><td>变量/=表达式</td><td>右到左</td><td></td></tr><tr><td>14</td><td>*=</td><td>乘后赋值</td><td>变量*=表达式</td><td>右到左</td><td></td></tr><tr><td>14</td><td>%=</td><td>取模后赋值</td><td>变量%=表达式</td><td>右到左</td><td></td></tr><tr><td>14</td><td>+=</td><td>加后赋值</td><td>变量+=表达式</td><td>右到左</td><td></td></tr><tr><td>14</td><td>-=</td><td>减后赋值</td><td>变量-=表达式</td><td>右到左</td><td></td></tr><tr><td>14</td><td>&lt;&lt;=</td><td>左移后赋值</td><td>变量&lt;&lt;=表达式</td><td>右到左</td><td></td></tr><tr><td>14</td><td>&gt;&gt;=</td><td>右移后赋值</td><td>变量&gt;&gt;=表达式</td><td>右到左</td><td></td></tr><tr><td>14</td><td>&amp;=</td><td>按位与后赋值</td><td>变量&amp;=表达式</td><td>右到左</td><td></td></tr><tr><td>14</td><td>^=</td><td>按位异或后赋值</td><td>变量^=表达式</td><td>右到左</td><td></td></tr><tr><td>14</td><td>&#124;=</td><td>按位或后赋值</td><td>变量&#124;=表达式</td><td>右到左</td><td></td></tr><tr><td>15</td><td>，</td><td>逗号运算符</td><td>表达式，表达式…</td><td>左到右</td><td></td></tr></tbody></table><h2 id="3-5-1-和-–"><a href="#3-5-1-和-–" class="headerlink" title="3.5.1 ++ 和 –"></a>3.5.1 ++ 和 –</h2><ol><li>“++” 与 “–”<ol><li>前++ 后++</li></ol></li></ol><p>如果单独使用，不管是前++还是后++，最终的结果都是给这个变量加1.</p><ol><li>前++，先给这个变量自身加1，然后带着这个加1后的值参与运算。</li><li>后++，则先拿原值参与运算，运算完毕后，再将这个变量自身加1。<h2 id="3-5-2-复合赋值运算符"><a href="#3-5-2-复合赋值运算符" class="headerlink" title="3.5.2 复合赋值运算符"></a>3.5.2 复合赋值运算符</h2></li></ol><p>+= -= *= /= %=<br>例子：nubmer+=10 等于number=number+10；</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">voidmain</span>()&#123;</span><br><span class="line"></span><br><span class="line">inta=<span class="number">5</span>;</span><br><span class="line">a+=<span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);_<span class="comment">//结果a=15|a=a+10_</span></span><br><span class="line"></span><br><span class="line">intA=<span class="number">3</span>;</span><br><span class="line">intB=A+=A-=A*A;_<span class="comment">//首先A*A=9|然后是A=-6=3-9|最后A=A+(-6)|所以得出为-12_</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,B);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-0-关系运算符和逻辑运算符"><a href="#3-6-0-关系运算符和逻辑运算符" class="headerlink" title="3.6.0 关系运算符和逻辑运算符"></a>3.6.0 关系运算符和逻辑运算符</h2><ol><li>关系运算符</li></ol><blockquote><p>&lt; &gt;= &lt;= == !=<br>概念：关系运算符是用来描述两个事物之间的关系。<br>由关系运算符连接的表达式称之为”关系表达式”。</p></blockquote><ol><li>逻辑运算符<ol><li>&amp;&amp; 逻辑与</li></ol></li></ol><p>&amp;&amp; 两边的表达式结果都为true的时候，这个逻辑与表达式的结果就为true。<br>两边的表达式结果只要有一个是false，那么整个逻辑表达式的结果就是false。</p><ol><li>||逻辑或</li></ol><p>||两边的表达式结果只要有一边为ture，整个逻辑或表达式的结果就为ture<br>两边的表达式的结果都为false，整个逻辑或表达式的结果才为false。</p><ol><li>！逻辑非</li></ol><p>！真的变假，假的变真的。<br>注意：<br>C语言当中没有Bool类型，但同样有真假的概念。<br>C语言表示逻辑运算的结果时，以数组1代表真，以0代表假。<br>比如：<br>a和b的值分别是0和5，则a||b的值为1，a&amp;&amp;b的值为0<br>但是在判断一个量是否为真时，以0代表假，以非0代表真</p><h2 id="3-6-0-接收用户输入的scanf函数"><a href="#3-6-0-接收用户输入的scanf函数" class="headerlink" title="3.6.0 接收用户输入的scanf函数"></a>3.6.0 接收用户输入的scanf函数</h2><p>scanf通过键盘读取用户输入，放入变量中，记得参数一定要变量的地址(&amp;)。<br>如果遇到问题请换成scanf_s试试或在项目头部加入#define _CRT_SECURE_NO_WARNINGS</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b);</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">#define_CRT_SECURE_NO_WARNINGS</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">_<span class="comment">/**_</span></span><br><span class="line"><span class="comment">_*#define_CRT_SECURE_NO_WARNINGS是解决scanf报错问题，因为它是之间对地址值的修改，为了安全起见编译器会进行审查_</span></span><br><span class="line"><span class="comment">_*/</span><span class="function">_</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">intmain</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">intI=<span class="number">520</span>;</span><br><span class="line">intY=<span class="number">1314</span>;</span><br><span class="line"><span class="keyword">while</span>(I&lt;Y)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ILoveYou\n&quot;</span>);</span><br><span class="line">Y-=<span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>,I,Y);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入你心里的数值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;I);_<span class="comment">//或采用scanf_s(&quot;%d&quot;,I);_</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,I);</span><br><span class="line"><span class="keyword">if</span>(I==<span class="number">1314</span>&amp;&amp;I&gt;Y)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;祝有情人白头到老\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">elseif</span>(I==<span class="number">520</span>||I&gt;Y)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;爱情是两个人努力的结果\n&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;缘分还是不够呀~\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-1-if-else-语句"><a href="#3-6-1-if-else-语句" class="headerlink" title="3.6.1 if-else 语句"></a>3.6.1 if-else 语句</h2><p>顺序结构：程序从Main函数进入从上到下一行一行的执行，不会落下任何一行。<br>if语句：语法：if（判断语句）{要执行的代码}<br>注：”判断条件”一般为关系表达式</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">#define_CRT_SECURE_NO_WARNINGS</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">_<span class="comment">/**_</span></span><br><span class="line"><span class="comment">_*输入流缓冲区解决方案：_</span></span><br><span class="line"><span class="comment">_*1.setbuf(stdin,NULL);//使stdin输入流由默认缓冲区转为无缓冲区_</span></span><br><span class="line"><span class="comment">_*2.while((c=getchar())!=EOF&amp;&amp;c!=&#x27;\n&#x27;);//不停地使用getchar()获取缓冲中字符，直到获取的c是“\n”或文件结尾符EOF为止_</span></span><br><span class="line"><span class="comment">_*3.某些编译器(如VC6)支持用fflush(stdin)来清空输入缓冲，这个方法在C标准是没有的，因为标准中根本没有定义fflush(stdin)。fflush操作输入流是对C标准的扩充。在windows没什么问题，但Linux是不支持的。_</span></span><br><span class="line"><span class="comment">_*/</span><span class="function">_</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">voidmain20</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;title终结者邀请函&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;我是Arvin智能助手\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您是否愿意加入终结者队伍?\n如果原因加入请输入&#x27;Y&#x27;，如果拒绝加入请输入&#x27;N&#x27;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">charchoose;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;choose);</span><br><span class="line"></span><br><span class="line">intnumber=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">LOOP:<span class="keyword">if</span>(choose==<span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您的代号(三位数字)：&quot;</span>);</span><br><span class="line">intuserName;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;userName);</span><br><span class="line">intuserNameConfirm;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请确认您的代号：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;userNameConfirm);</span><br><span class="line"><span class="keyword">if</span>(userName==userNameConfirm)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的代号为：%d\n&quot;</span>,userName);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">5000</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;代号正确\n正在确认身份位置信息...\n&quot;</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;代号确认完成\n&quot;</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;恭喜您代号%d,欢迎您加入终结者\n&quot;</span>,userName);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;color4F&quot;</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">5000</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>,<span class="string">L&quot;Welcomeyoutojointheterminator,pleasegotohttps://arvinroad.github.io/forbelongtoyourinformation.&quot;</span>,<span class="string">L&quot;Admissiontothesuccessful&quot;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;dir/s&quot;</span>);</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>,<span class="string">L&quot;下面将进行安全环境搭建，请不要担忧&quot;</span>,<span class="string">L&quot;温馨提示&quot;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">5000</span>);</span><br><span class="line">_<span class="comment">/*垃圾清理*/</span><span class="function">_</span></span><br><span class="line"><span class="function"><span class="title">system</span><span class="params">(<span class="string">&quot;正在清除系统非安全文件，请稍等......&quot;</span>)</span></span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q%systemdrive%\\*.tmp&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q%systemdrive%\\*._mp&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q%systemdrive%\\*.log&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q%systemdrive%\\*.gid&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q%systemdrive%\\*.chk&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q%systemdrive%\\*.old&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q%systemdrive%\\recycled\\*.*&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q%windir%\\*.bak&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q%windir%\\prefetch\\*.*&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;rd/s/q%windir%\\temp&amp;md%windir%\\temp&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/q%userprofile%\\cookies\\*.*&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/q%userprofile%\\recent\\*.*&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q\&quot;%userprofile%\\LocalSettings\\TemporaryInternetFiles\\*.*\&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q\&quot;%userprofile%\\LocalSettings\\Temp\\*.*\&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;del/f/s/q\&quot;%userprofile%\\recent\\*.*\&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;echo清除系统非安全完成！&quot;</span>);</span><br><span class="line">_<span class="comment">//system(&quot;echo.&amp;pause&quot;);_</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;安全环境建设完毕\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;进行网络安全配置：&quot;</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">5000</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;ipconfig/all&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pingwww.baidu.com&quot;</span>);</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>,<span class="string">L&quot;信息建设完成,再见终结者&quot;</span>,<span class="string">L&quot;完成&quot;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">5000</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">elseif</span>(userName!=userNameConfirm)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;代码校验发生错误请重新输入\n&quot;</span>);</span><br><span class="line">gotoLOOP;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">elseif</span>(choose==<span class="string">&#x27;N&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;很遗憾,我们失去了一位有能力的朋友\n&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(number&lt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>((choose=<span class="built_in">getchar</span>())!=EOF&amp;&amp;choose!=<span class="string">&#x27;\n&#x27;</span>);_<span class="comment">//不停地使用getchar()获取缓冲中字符，直到获取的c是“\n”或文件结尾符EOF为止_</span></span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请问是否重新考虑？\n&quot;</span>);</span><br><span class="line">number++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入你的选择&#x27;Y&#x27;或&#x27;N&#x27;：&quot;</span>);</span><br><span class="line">_<span class="comment">//choose=getchar();//此处废弃，在没有清除输入缓存时暂代修复方案_</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;choose);</span><br><span class="line">gotoLOOP;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n输入错误程序自动销毁\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-2-switch-语句"><a href="#3-6-2-switch-语句" class="headerlink" title="3.6.2 switch 语句"></a>3.6.2 switch 语句</h2><p>语法：<br>switch（变量或表达式的值）{<br>case 值 1：<br>要执行的代码<br>break;<br>case 值 2：<br>要执行的代码<br>break;<br>}</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">#define_CRT_SECURE_NO_WARNINGS</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">voidmain</span>()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;你认为我怎么样？\n如果满意请输入&#x27;1&#x27;\n如果不满意请输入&#x27;2&#x27;\n&quot;</span>);</span><br><span class="line">intnum;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;感谢您对我友好的评价\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">elseif</span>(num==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;很抱歉，打扰到你了，请你选择一个1-5之间你最爱的数字\n&quot;</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line">intnumOne;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;numOne);</span><br><span class="line"></span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span>(numOne)</span><br><span class="line">&#123;</span><br><span class="line">case1:</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;shutdown-s-t100&quot;</span>);_<span class="comment">//关机_</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">case2:</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;shutdown-r-t1000&quot;</span>);_<span class="comment">//重启_</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">case3:</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>,<span class="string">L&quot;系统即将崩溃&quot;</span>,<span class="string">L&quot;恶意提示&quot;</span>,<span class="number">1</span>);_<span class="comment">//无限弹窗_</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">case4:</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;notepad&quot;</span>);_<span class="comment">//无限打开记事本_</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">case5:</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">void</span>*p=<span class="built_in">malloc</span>(<span class="number">1024</span>*<span class="number">1024</span>*<span class="number">10</span>);_<span class="comment">//给系统无限分配空间1秒分配10兆吃内存_</span></span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">void</span>*p=<span class="built_in">malloc</span>(<span class="number">1024</span>*<span class="number">1024</span>*<span class="number">10</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">void</span>*p=<span class="built_in">malloc</span>(<span class="number">1024</span>*<span class="number">1024</span>*<span class="number">10</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-3-While-循环语句"><a href="#3-6-3-While-循环语句" class="headerlink" title="3.6.3 While 循环语句"></a>3.6.3 While 循环语句</h2><p>语法：<br>while（循环条件）{<br>执行的指令<br>}</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">_<span class="comment">/**_</span></span><br><span class="line"><span class="comment">_*接收用户输入，如果用户输入的是大写那么就转换为小写_</span></span><br><span class="line"><span class="comment">_*如果是小写就转换为大写，如果是数字就原样输出，如果是空格就输出space_</span></span><br><span class="line"><span class="comment">_*/</span><span class="function">_</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">voidjudge</span><span class="params">(chardata)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">if</span>(data==<span class="string">&#x27;A&#x27;</span>&amp;&amp;data&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,data+=<span class="number">32</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">elseif</span>(data&gt;=<span class="number">97</span>&amp;&amp;data&lt;=<span class="number">122</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,data-=<span class="number">32</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">elseif</span>(data&gt;=<span class="number">48</span>&amp;&amp;data&lt;=<span class="number">57</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">elseif</span>(data==<span class="number">32</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ThisisSpaceKey\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;你是杠精吗？不会看题吗？\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">voidmain</span>()</span><br><span class="line">&#123;</span><br><span class="line">chardata=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="built_in">judge</span>(data);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-4-do…-while-循环"><a href="#3-6-4-do…-while-循环" class="headerlink" title="3.6.4 do… while 循环"></a>3.6.4 do… while 循环</h2><p>无论while是否运行，do都会先运行一次再检测是否符合while，如果符合就执行while。不符合将不会执行while。<br>语法：<br>do{<br>执行语句<br>}while（条件）;</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">voidmain</span>()</span><br><span class="line">&#123;</span><br><span class="line">inta=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;HelloWorld\n&quot;</span>);</span><br><span class="line">a++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(a&lt;<span class="number">5</span>&amp;&amp;a&gt;<span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a的值为：%d\n&quot;</span>,a);</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-4-for-循环"><a href="#3-6-4-for-循环" class="headerlink" title="3.6.4 for 循环"></a>3.6.4 for 循环</h2><p>for循环的参数可以进行删减，比如取代判断或变量增值，它是可以正常运行的。<br>语法：<br>For(声明初始化变量；判断；变量增值（或减值）){<br>执行语句；<br>}<br>​</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">_<span class="comment">/**_</span></span><br><span class="line"><span class="comment">_*百鸡百钱问题：_</span></span><br><span class="line"><span class="comment">_*100元去买100只鸡，公鸡5元一只，母鸡3元一只，小鸡3毛一只。_</span></span><br><span class="line"><span class="comment">_*100元分别能买公鸡母鸡小鸡各多少只？_</span></span><br><span class="line"><span class="comment">_*解：假设公鸡是X母鸡是Y小鸡是Z_</span></span><br><span class="line"><span class="comment">_*X+Y+Z=100_</span></span><br><span class="line"><span class="comment">_*5X+3Y+Z/3.0=100_</span></span><br><span class="line"><span class="comment">_*100/5=20100/3=33100/0.3~=300_</span></span><br><span class="line"><span class="comment">_*_</span></span><br><span class="line"><span class="comment">_*优化：_</span></span><br><span class="line"><span class="comment">_*100-X-Y=Z_</span></span><br><span class="line"><span class="comment">_*100-5X-3Y=Z*3_</span></span><br><span class="line"><span class="comment">_*_</span></span><br><span class="line"><span class="comment">_*优化前运行：72114次_</span></span><br><span class="line"><span class="comment">_*优化后运行：693次_</span></span><br><span class="line"><span class="comment">_*_</span></span><br><span class="line"><span class="comment">_*穷举法：(程序开发最常用到的)_</span></span><br><span class="line"><span class="comment">_*/</span><span class="function">_</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">voidmain25</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(intX=<span class="number">0</span>;X&lt;=<span class="number">20</span>;X++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(intY=<span class="number">0</span>;Y&lt;=<span class="number">33</span>;Y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(intZ=<span class="number">0</span>;Z&lt;=<span class="number">100</span>;Z++)_<span class="comment">//到不了300最多可以买100只所以我们采用100_</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((<span class="number">5</span>*X+<span class="number">3</span>*Y+Z/<span class="number">3.0</span>==<span class="number">100</span>)&amp;&amp;(X+Y+Z==<span class="number">100</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;公鸡为：%d母鸡为：%d小鸡为：%d\n&quot;</span>,X,Y,Z);_<span class="comment">//第一个限制只有100元第二个限制它们的总和只能是100_</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;----------------优化后----------------\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(intX=<span class="number">0</span>;X&lt;=<span class="number">20</span>;X++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(intY=<span class="number">0</span>;Y&lt;=<span class="number">33</span>;Y++)</span><br><span class="line">&#123;</span><br><span class="line">intZ=<span class="number">100</span>-X-Y;_<span class="comment">//小鸡=钱-购买公鸡+母鸡所花的钱剩余的全买小鸡_</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">5</span>*X+<span class="number">3</span>*Y+Z/<span class="number">3.0</span>==<span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;公鸡为：%d母鸡为：%d小鸡为：%d\n&quot;</span>,X,Y,Z);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-5-ShellExecuteA-作用"><a href="#3-6-5-ShellExecuteA-作用" class="headerlink" title="3.6.5 ShellExecuteA 作用"></a>3.6.5 ShellExecuteA 作用</h2><p>ShellExecuteA（0,”open”,”notepad”,0,0,6）;</p><ul><li>第一个参数代表是谁打开的 0代表系统打开</li><li>第二个open是指令</li><li>第三个是指令或地址</li><li>第四个和第五个默认是0</li><li>第五个参数默认的0</li><li>第六个参数。0代表隐藏打开，1代表最小化打开，2代表正常，3代表最大化<h2 id="3-6-6-Goto语句"><a href="#3-6-6-Goto语句" class="headerlink" title="3.6.6 Goto语句"></a>3.6.6 Goto语句</h2>语法：<br>标号：需要转到的程序执行行<br>Goto 标号；<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 需要注意的事情，在企业开发中是禁止使用Goto的因为会导致项目混乱，但Goto语句在网络安全领域大量使用，比如注入。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">LOOP:<span class="built_in">printf</span>(<span class="string">&quot;来我们穿越时空\n&quot;</span>);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">5000</span>);</span><br><span class="line"><span class="keyword">goto</span> LOOP;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>注意：在 if-else 语句演示中我用用到Goto可以参考。一个标号加冒号想往哪跳向哪跳。当然goto也常用于跳出复杂的循环。<h3 id="Goto-实现循环"><a href="#Goto-实现循环" class="headerlink" title="Goto 实现循环"></a>Goto 实现循环</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/* goto 实现循环 */</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">A:<span class="keyword">if</span> (i &lt; <span class="number">5</span>)&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;notepad&quot;</span>);</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">goto</span> A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">System</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Goto-的混乱问题"><a href="#Goto-的混乱问题" class="headerlink" title="Goto 的混乱问题"></a>Goto 的混乱问题</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/* goto 混乱的问题 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">goto</span> C;</span><br><span class="line"><span class="keyword">goto</span> B;</span><br><span class="line">A:<span class="built_in">printf</span>(<span class="string">&quot;AAA\n&quot;</span>);</span><br><span class="line">B:<span class="built_in">printf</span>(<span class="string">&quot;BBB\n&quot;</span>);</span><br><span class="line">C:<span class="built_in">printf</span>(<span class="string">&quot;CCC\n&quot;</span>);        <span class="comment">// 注意：执行goto C; 到这里后不会执行goto B; 从C直接往下执行</span></span><br><span class="line">D:<span class="built_in">printf</span>(<span class="string">&quot;DDD\n&quot;</span>);</span><br><span class="line">E:<span class="built_in">printf</span>(<span class="string">&quot;EEE\n&quot;</span>);</span><br><span class="line">F:<span class="built_in">printf</span>(<span class="string">&quot;FFF\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用goto跳出复杂循环"><a href="#使用goto跳出复杂循环" class="headerlink" title="使用goto跳出复杂循环"></a>使用goto跳出复杂循环</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">voidmain</span>()&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(inti=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(intj=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">5</span>)&#123;</span><br><span class="line">_<span class="comment">//break;//跳出当前循环_</span></span><br><span class="line">gotoA;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3d%3d&quot;</span>,i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">A:<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-6-7-简单的递归"><a href="#3-6-7-简单的递归" class="headerlink" title="3.6.7 简单的递归"></a>3.6.7 简单的递归</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 一个简单的递归(从前有座庙的无限循环) */</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;notepad&quot;</span>);</span><br><span class="line"><span class="built_in">main</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;notepad&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-8-SetWindowPos-函数"><a href="#3-6-8-SetWindowPos-函数" class="headerlink" title="3.6.8 SetWindowPos 函数"></a>3.6.8 SetWindowPos 函数</h2><ul><li><p>第一个参数：窗口句柄对象</p></li><li><p>第二个参数：关于如何在Z轴上放置窗口标记，因为我们是二维所以默认为NULL</p></li><li><p>第三个参数：窗口的x坐标</p></li><li><p>第四个参数：窗口的y坐标</p></li><li><p>第五个参数：窗口的x轴大小</p></li><li><p>第六个参数：窗口的y轴坐标</p></li><li><p>第七个参数：关于如何移动窗口的标记，默认为0</p><h2 id="3-6-9-捕获窗口-Windows系统函数"><a href="#3-6-9-捕获窗口-Windows系统函数" class="headerlink" title="3.6.9 捕获窗口 Windows系统函数"></a>3.6.9 捕获窗口 Windows系统函数</h2><p>HWND window = FindWindowA(“窗口类名”, “窗口标题”);<br>它会根据窗口的类型与标题寻找窗口，并将信息存储在我们创建的 HWND类型的window对象中。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="comment">//ShellExecuteA(0, &quot;open&quot;, &quot;\&quot;C:\\Program Files\\Microsoft Office\\root\\Office16\\WINWORD.EXE\&quot;&quot;, 0, 0, 1);</span></span><br><span class="line"> <span class="built_in">ShellExecuteA</span>(<span class="number">0</span>, <span class="string">&quot;open&quot;</span>, <span class="string">&quot;notepad&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*   我们可以借助黑客软件来扫描窗口信息例如：Spy.exe 或 ViewWizard</span></span><br><span class="line"><span class="comment">*   HWND window 存储应用的窗口(Windows系统函数)</span></span><br><span class="line"><span class="comment">*   FindWindowA(&quot;窗口类名类名&quot;,&quot;应用的窗口标题&quot;);</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">*   SetWindowPos Windows系统函数，用来设置窗口的大小和位置信息</span></span><br><span class="line"><span class="comment">*   400 300 是设置窗口的位置 200 200 是设置窗口的大小</span></span><br><span class="line"><span class="comment">*   </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> HWND window = <span class="built_in">FindWindowA</span>(<span class="string">&quot;Notepad&quot;</span>, <span class="string">&quot;无标题 - 记事本&quot;</span>);</span><br><span class="line"> <span class="keyword">if</span> (window == <span class="literal">NULL</span>) &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;应用窗口破获失败\n&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">SetWindowPos</span>(window, <span class="literal">NULL</span>, <span class="number">400</span>, <span class="number">300</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* 窗口闪现 */</span></span><br><span class="line"> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">LOOP:<span class="keyword">while</span> (i &lt; <span class="number">500</span>) &#123;</span><br><span class="line"> <span class="built_in">SetWindowPos</span>(window, <span class="literal">NULL</span>, <span class="number">400</span>, <span class="number">300</span>, i, i, <span class="number">0</span>);</span><br><span class="line"> <span class="built_in">Sleep</span>(<span class="number">1000</span>);</span><br><span class="line"> i += <span class="number">50</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">while</span> (i &gt; <span class="number">500</span>) &#123;</span><br><span class="line"> <span class="built_in">SetWindowPos</span>(window, <span class="literal">NULL</span>, <span class="number">400</span>, <span class="number">300</span>, i, i, <span class="number">0</span>);</span><br><span class="line"> <span class="built_in">Sleep</span>(<span class="number">1000</span>);</span><br><span class="line"> i -= <span class="number">50</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">if</span> (i &lt; <span class="number">500</span> &amp;&amp; j &lt; <span class="number">3</span>) &#123;</span><br><span class="line"> ++j;</span><br><span class="line"> <span class="keyword">goto</span> LOOP;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 关闭应用 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="built_in">system</span>(<span class="string">&quot;taskkill /f /im Notepad.exe&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="built_in">open</span>();</span><br><span class="line"> <span class="built_in">Sleep</span>(<span class="number">5000</span>);    <span class="comment">// 调试延迟，使用可以去掉</span></span><br><span class="line"> <span class="built_in">show</span>();</span><br><span class="line"> <span class="built_in">Sleep</span>(<span class="number">5000</span>);</span><br><span class="line"> <span class="built_in">close</span>();</span><br><span class="line"> <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-7-0-隐藏黑窗口"><a href="#3-7-0-隐藏黑窗口" class="headerlink" title="3.7.0 隐藏黑窗口"></a>3.7.0 隐藏黑窗口</h2><p>隐藏程序执行时的黑色窗口。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 隐藏黑窗口(伪装DOS窗口)：</span></span><br><span class="line"><span class="comment">*        不动声色的执行程序</span></span><br><span class="line"><span class="comment">*        隐藏在别的程序中执行</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* #pragem 程序预编译</span></span><br><span class="line"><span class="comment">* linker  链接</span></span><br><span class="line"><span class="comment">* &quot;/subsystem:\&quot;windows\&quot;/entry:\&quot;mainCRTStartup\&quot;&quot; 以Windows模式下去编译默认情况下是DOS窗口模式(DOS指令模式)编译，这句话是让它以Windows模式进行编译</span></span><br><span class="line"><span class="comment">* 项目属性- 链接器 - 系统 改变子系统为(窗口(/SUBSYSTEM:WINDOWS))</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/subsystem:\&quot;windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;</span>) <span class="comment">// 隐藏DOS窗口</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">MessageBoxA</span>(<span class="number">0</span>, <span class="string">&quot;你的电脑已被锁定&quot;</span>, <span class="string">&quot;系统提示&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-7-1-注射技术（将程序隐藏在另一个程序）"><a href="#3-7-1-注射技术（将程序隐藏在另一个程序）" class="headerlink" title="3.7.1 注射技术（将程序隐藏在另一个程序）"></a>3.7.1 注射技术（将程序隐藏在另一个程序）</h2><p>注射技术在使用的时候需要注意，如果非法注射属于违法犯罪。我们学习注射技术是为了更好的保护自己的设备不被黑客注入。<br>注射技术需要用到动态库 项目属性：常规 - 配置类型改为(默认是.exe) 动态库DLL<br>设置属性的目标文件名：项目属性：常规 - 目标文件名 自定义名称<br>动态库我们不需要MAIN函数<br>动态库想要被外部执行就必须提供一个接口 _declspec (dllexport)<br>_<em>declspec 的前面时俩个</em></p><h3 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h3></li><li><p>第一步：把项目默认值中的配置类型改为dll动态库</p></li><li><p>第二步：引入windows.h头文件</p></li><li><p>第三步：加入关键字 _declspaec (dllexport)</p></li><li><p>第四步：更改常规中的目标文件名</p></li><li><p>第五步：生成dll文件</p></li></ul><p>代码演示：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 注射技术在使用的时候需要注意，如果非法注射属于违法犯罪。我们学习注射技术是为了更好的保护自己的设备不被黑客注入。</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 注射技术需要用到动态库 项目属性：常规 - 配置类型改为(默认是.exe) 动态库DLL</span></span><br><span class="line"><span class="comment">* 设置属性的目标文件名：项目属性：常规 - 目标文件名 自定义名称</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 动态库我们不需要MAIN函数</span></span><br><span class="line"><span class="comment">* 动态库想要被外部执行就必须提供一个接口 _declspec (dllexport)</span></span><br><span class="line"><span class="comment">* 注意：</span></span><br><span class="line"><span class="comment">* __declspec 的前面时俩个_</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__declspec(dllexport) <span class="function"><span class="keyword">void</span> <span class="title">Hanker</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">MessageBoxA</span>(<span class="number">0</span>, <span class="string">&quot;您的系统被劫持&quot;</span>, <span class="string">&quot;系统提示&quot;</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言基本语法（上）</title>
      <link href="/2022/03/02/C_2022_3.2.01/"/>
      <url>/2022/03/02/C_2022_3.2.01/</url>
      
        <content type="html"><![CDATA[<h2 id="3-1-什么是变量"><a href="#3-1-什么是变量" class="headerlink" title="3.1 什么是变量"></a>3.1 什么是变量</h2><p>变量是指其值可以变化的量。计算机中，指令代码、数据都存储与内存中。变量也需要存储在内存中。在计算机中，每个变量都被分配了一块内存空间，在这些空间里存储的就是变量的值。变量之所以可以变化，就是这个存储空间可以存储不同的数值。存储空间里的值变化，则变量对应的值也变化。同一时间，内存空间里只能保存一份值，新值冲掉原来的值，每个内存单元都有编号，这些是内存的地址。</p><h2 id="3-1-1-什么是常量与变量"><a href="#3-1-1-什么是常量与变量" class="headerlink" title="3.1.1 什么是常量与变量"></a>3.1.1 什么是常量与变量</h2><p>常量就是计算机内存里面不变的数据。<br>变量就是计算机内存里需要并且经常改变的数据<br>举例说明：<br>变量就是租房子。因为会经常变动<br>常量就是买房子。基本不会变</p><h2 id="3-1-2-变量的概念与命名规则"><a href="#3-1-2-变量的概念与命名规则" class="headerlink" title="3.1.2 变量的概念与命名规则"></a>3.1.2 变量的概念与命名规则</h2><ol><li>变量名定义：<br>定义：</li></ol><p>程序中用于标识常量、变量、函数的字符序列<br>组成：<br>只能由字母、数字、下划线组成，第一个字符必须是字母或下划线<br>大小写有区别不能使用C语言的关键字<br>举例说明：给变量起名，就好比开房</p><ol><li>变量的语法</li></ol><p>变量类型变量名；<br>变量名 = 值；<br>简写：变量类型变量名 = 值；</p><ol><li>变量名要有意义：</li></ol><p>首先要保证的就是这个变量的名字要有意义。<br>什么叫意义？<br>举例：学生，年龄，身高，姓名<br>现阶段给变量起名字的时候都是以字母开头后面可以跟任意字母、数字、下划线。</p><ol><li>变量的使用规则</li></ol><p>先声明，后赋值，再使用。</p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><ol><li><p>起的变量名不要与C语言系统中的关键字重复。</p></li><li><p>在C语言中，大小写是敏感的。</p></li><li><p>最好给变量赋予初值。</p></li><li><p>同一个变量名在同一函数夏不允许重复定义。</p></li><li><p>变量的命名规范</p><ol><li>Camel 驼峰命名法：要求变量名首单词的首字母要小写，其余每个单词的首字母要大写。多用于给变量命名。</li><li>Pascal 帕斯卡命名法：要求每个单词首字母要大写，其余字母小写。多用于类或者方法命名。<h2 id="3-1-3-C语言中变量一定要初始化"><a href="#3-1-3-C语言中变量一定要初始化" class="headerlink" title="3.1.3 C语言中变量一定要初始化"></a>3.1.3 C语言中变量一定要初始化</h2>变量如果不初始化，可以编译成功，但是执行的时候，很可能报错。<br>操作系统是如何管理内存的？<br>每当一个应用程序打开时，操作系统会为其分配内存，内存有内存地址与内存单元，当应用程序初始化时，就会往内存单元里面写入数据，当操作系统回收的时候，并不清楚内存单元，所以存在大量的垃圾数据。<br>如果变量不初始化，就会默认读取垃圾数据，有些数据会导致系统崩溃。<br>VC++2010 的编译器可以感知变量没有初始化，调试的时候就会出错。所以变量使用之前，必须初始化。<h2 id="3-1-4-定义常量的两种方式"><a href="#3-1-4-定义常量的两种方式" class="headerlink" title="3.1.4 定义常量的两种方式"></a>3.1.4 定义常量的两种方式</h2>定义常量PI的两种方式：</li></ol></li><li><p>#define N 10</p></li><li><p>Const float N10;</p></li></ol><p>区别：<br>第一种方式：是将N定义成一种符号，此时N只是10的别名，在编译期间用10去取代N的值，Define相当于替换。<br>第二种方式：是将N定义称为变量，但是告诉编译器它的值是固定不变的，如果在程序中试图去修改它的值，在编译时会报错。<br>#define 定义常量有什么好处</p><ol><li>通过有意义的单词符号，可以指明该常量的意思，使得程序员在阅读代码时，减少迷惑。</li><li>需要修改常量的时候，可以只需要修改一次，实现批量修改，效率高而且准确。</li></ol><p>如中需要将PI修改成3.14的话，只需要更改代码行：<br>#define N 10 为 #define N 11</p><h2 id="3-1-5-转义字符"><a href="#3-1-5-转义字符" class="headerlink" title="3.1.5 转义字符"></a>3.1.5 转义字符</h2><table><thead><tr><th>转义字符</th><th>意义</th><th>ASCII码值（十进制）</th></tr></thead><tbody><tr><td>\a</td><td>响铃</td><td>007</td></tr><tr><td>\b</td><td>退格（BS），将当前位置移到前一列</td><td>008</td></tr><tr><td>\f</td><td>换页（BS），将当前位置移到下页开头</td><td>012</td></tr><tr><td>\n</td><td>换行（FF），将当前位置移到下行开头</td><td>010</td></tr><tr><td>\r</td><td>回车（CR），将当前位置移到本行开头</td><td>013</td></tr><tr><td>\t</td><td>水平制表符（HT），跳到下一个TAB位置</td><td>009</td></tr><tr><td>\v</td><td>垂直制表（VT）</td><td>011</td></tr><tr><td>\\</td><td>代表一个反斜线字符”\‘</td><td>092</td></tr><tr><td>\`</td><td>代表一个单引号字符</td><td>039</td></tr><tr><td>\“</td><td>代表一个双引号字符</td><td>034</td></tr><tr><td>\？</td><td>代表一个问号</td><td>063</td></tr><tr><td>\0</td><td>空字符（NULL）</td><td>000</td></tr><tr><td>\ddd</td><td>1到3位八进制数所代表的任意字符</td><td>三位八进制</td></tr><tr><td>\xhh</td><td>1到2位十六进制所代表的任意字符</td><td>二位十六进制</td></tr></tbody></table><h2 id="3-2-1-二进制、八进制、十六进制转化成十进制"><a href="#3-2-1-二进制、八进制、十六进制转化成十进制" class="headerlink" title="3.2.1 二进制、八进制、十六进制转化成十进制"></a>3.2.1 二进制、八进制、十六进制转化成十进制</h2><p>方法：按权相加<br>例1：(111011)2 = 1<em>2^5+1</em>2^4+1<em>2^30</em>2^2+1^2^1+1<em>2^0=59（10）<br>例2：(136)8 = 1</em>8^2+3<em>8^1+<em>8^0=94（10）<br>例3：(1F2A)16 = 1</em>16^3+15</em>16^2+2<em>16^1+10</em>16^0=7978（10）<br>演示：输出012 和0x12分别打印值，使用%d解析。<br>结论1：0 开头代表八进制<br>结论2：0x开头代表十六进制。一般用于地址<br>注意：<br>任何进制，不允许出现大于等于进制的数字</p><h2 id="3-2-2-二进制和八进制互相转换"><a href="#3-2-2-二进制和八进制互相转换" class="headerlink" title="3.2.2 二进制和八进制互相转换"></a>3.2.2 二进制和八进制互相转换</h2><p>二进制转换成八进制：从右向左，每三位一组（不足三位左边补零），转换成八进制。<br>八进制转换成二进制：用三位二进制数代替每一位八进制数</p><table><thead><tr><th>000</th><th>0</th></tr></thead><tbody><tr><td>001</td><td>1</td></tr><tr><td>010</td><td>2</td></tr><tr><td>011</td><td>3</td></tr><tr><td>100</td><td>4</td></tr><tr><td>101</td><td>5</td></tr><tr><td>110</td><td>6</td></tr><tr><td>111</td><td>7</td></tr></tbody></table><p>例：(1101001)2 = (001,101,001)2 = (151)8<br>例：(666)8 = (110,110,110)2 = (110110110)2</p><h2 id="3-2-3-二进制十六进制相互转换"><a href="#3-2-3-二进制十六进制相互转换" class="headerlink" title="3.2.3 二进制十六进制相互转换"></a>3.2.3 二进制十六进制相互转换</h2><p>二进制转换成十六进制：从右向左，每四位一组（不足四位左补零），转换成十六进制<br>十六进制转换成二进制：用四位二进制数代替每一位十六进制数</p><table><thead><tr><th>0000</th><th>0</th></tr></thead><tbody><tr><td>0001</td><td>1</td></tr><tr><td>0010</td><td>2</td></tr><tr><td>0011</td><td>3</td></tr><tr><td>0100</td><td>4</td></tr><tr><td>0101</td><td>5</td></tr><tr><td>0110</td><td>6</td></tr><tr><td>0111</td><td>7</td></tr><tr><td>1000</td><td>8</td></tr><tr><td>1001</td><td>9</td></tr><tr><td>1010</td><td>A</td></tr><tr><td>1011</td><td>B</td></tr><tr><td>1100</td><td>C</td></tr><tr><td>1101</td><td>D</td></tr><tr><td>1110</td><td>E</td></tr><tr><td>1111</td><td>F</td></tr></tbody></table><p>例：(11010101111101)2 = (0011,0101,0111,1101)2 = (357D)16<br>例：(4B9E)16 = (0100,1011,1001,1110)2 = (100101110011110)2</p><h2 id="3-2-4-十进制二进制转换"><a href="#3-2-4-十进制二进制转换" class="headerlink" title="3.2.4 十进制二进制转换"></a>3.2.4 十进制二进制转换</h2><p>十进制转换二进制</p><ol><li>十进制整数转换为二进制：方法是除以2取余，逆序排列，以(89)10为例，如下：</li></ol><p>89 / 2 余1<br>44 / 2 余0<br>22 / 2 余0<br>11 / 2 余1<br>5 / 2 余1<br>2 / 2 余0<br>1 余1<br>(89) 10 = (1011001)2<br>(5) 10 = (101)2<br>(2) 10 = (10)2</p><h2 id="3-2-5-二进制十进制转换"><a href="#3-2-5-二进制十进制转换" class="headerlink" title="3.2.5 二进制十进制转换"></a>3.2.5 二进制十进制转换</h2><p>十进制是逢十进一，由数字符号 0,1,2,3,4,5,6,7,8,9组成，可以这样分拆十进制数：<br>(1234)10 = 1<em>10^3+2</em>10^2+3<em>10^1+4</em>10^0 = 1000 + 200 + 30 + 4 = (1234)10<br>采用同样的方式转换二进制到十进制：<br>(1101)2 = 1<em>2^3+1</em>2^2+0<em>2^1+1</em>2^0 = 8 + 4 + 0 + 1 =  (13)10<br>(10.01)2 = 1<em>2^1+0</em>2^0+0<em>2^-1+1</em>2^-2 = 2 + 0 + 0 + 0.25 = (2.25)10</p><h2 id="3-2-6-十进制小数转换二进制"><a href="#3-2-6-十进制小数转换二进制" class="headerlink" title="3.2.6 十进制小数转换二进制"></a>3.2.6 十进制小数转换二进制</h2><p>方法是乘以2取整，顺序排列，以(0.625)10为例：如下：<br>0.625<em>2 = 1.25 取整1<br>0.25</em>2=0.5 取整0<br>0.5*2=1 取整1<br>(0.625)10 = (0.101)2<br>(0.25)10 = (0.01)2<br>(0.5)10 = (0.1)2</p><h2 id="3-2-7-计算机存储数据"><a href="#3-2-7-计算机存储数据" class="headerlink" title="3.2.7 计算机存储数据"></a>3.2.7 计算机存储数据</h2><p>程序员编写的程序以及所使用的数据在计算机的内存中是以二进制位序列的方式存放的。<br>典型的计算机内存段二进制位序如下：<br>···0001000 10101010<br>1000101010111011001010010100100010010010010···<br>上面的二进制位序里，每一位上的数字，要么是0，要么是1。在计算机中，位(bit)是含有0或者1值的一个单元。在物理上，它的值是一个负或者是一个正电荷。也就是计算机中可以通过电压的高低来表示一位所含有的值。如果是0，则用低电压表示，如果是1，则用高电压表示。<br>在上面的二进制位序这个层次上，位的集合没有结构，很难来解释这些系列的意义。为了能够从整体上考虑这些位，于是给这些位序强加上结构的概念，这样的结构被称作为字节(byte)和字(word)。通常，一个字节由8位构成，而一个字由32位构成。或者说是4个字节构成。</p><h2 id="3-2-8-内存中的位，字节，字"><a href="#3-2-8-内存中的位，字节，字" class="headerlink" title="3.2.8 内存中的位，字节，字"></a>3.2.8 内存中的位，字节，字</h2><p>计算机中的内存是以位为最小存储单位的。通过对内存进行组织，可以引用特定的位集合。把计算机的内存起始位编号为1，每隔8位编号增1，也就是以字节为单位，每隔一个字节编号向上加一，可以对计算机所有内存进行编号。</p><table><thead><tr><th>地址编号</th><th>位7</th><th>位6</th><th>位5</th><th>位4</th><th>位3</th><th>位2</th><th>位1</th><th>位0</th><th>字节内容</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>10010000</td></tr><tr><td>2</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>01100111</td></tr><tr><td>3</td><td>1</td><td>1</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>11101100</td></tr><tr><td>4</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>00000000</td></tr><tr><td>5</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>01110010</td></tr><tr><td>···</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="3-2-8-1-计算机32位与64位的真正差别"><a href="#3-2-8-1-计算机32位与64位的真正差别" class="headerlink" title="3.2.8.1 计算机32位与64位的真正差别"></a>3.2.8.1 计算机32位与64位的真正差别</h2><p>在于计算机的寻址能力<br>什么是寻址能力？<br>寻址能力一般指的是CPU对于内存寻址的能力，通俗来说，就是能用到的多少内存的应该问题，数据在存储器（RAM）中存放是有规律的，CPU在运算的时候需要把数据提取出来就需要知道数据存放在哪里，这个时候就需要挨家挨户的找，这就叫做寻址，但是如果地址太多了超出了CPU的能力范围，CPU就找不到了，CPU最大能查询多大范围的能力叫做寻址能力。<br>CPU的寻址能力是以字节为单位的，如32位寻址的CPU可以寻址2^32次方大小的地址也就是4G，这也是为什么32位的CPU最大能搭配4G内存的原因，再多内存就找不到了。<br>4G内存怎么得来的：2^32 = 4G<br>2^32 = 2^2<em>2^10</em>2^10<em>2^10 = 4</em>1024<GB>*1024<MB>*1024(KB) = 4G<br>32位内存代表的是内存最大地址为32位。<br>一个16进制代表4个2进制。<br>64位代表内存地址最大为64位。<br>32位CPU支持最大内存为4G</p><h2 id="3-2-9-printf类型与数据类型"><a href="#3-2-9-printf类型与数据类型" class="headerlink" title="3.2.9 printf类型与数据类型"></a>3.2.9 printf类型与数据类型</h2><p>声明变量的时候需要指明数据类型，声明函数的时候，也需要指明函数的返回值数据类型。数据类型是对程序所处理的数据的”抽象”，将计算机中可能出现的数据进行一个分类，哪些数据可以归结为一类，哪些数据又可以归结为另一类。比如整数1,2,3,-1,-2,0,1000归结为整数类型；带小数点的数据，比如：12.1,2343.34,-23434.33归结为实数类型。<br>C语言规定，在程序中使用的每一个数据，必须指定其数据类型。在C语言中，提供了非常丰富的数据类型，如列出了C语言提供的所有类型：</p><h3 id="数据类型："><a href="#数据类型：" class="headerlink" title="数据类型："></a>数据类型：</h3><p>简单类型：</p><ul><li>基础类型：<ul><li>整形（int）</li><li>浮点（float\double）</li><li>字符型（char）</li><li>空类型（void）</li></ul></li><li>用户定义类型：<ul><li>枚举类型（enum）</li></ul></li></ul><p>结构类型：</p><ul><li>数组（[]）</li><li>结构（struct）</li><li>联合（union）</li><li>类（class）</li></ul><p>指针类型：（*）<br>注意：<br>必须按照对应的数据类型去解析数据，不然会出错。<br>Printf不会执行自动类型转换。</p><h3 id="输出字符表"><a href="#输出字符表" class="headerlink" title="输出字符表"></a>输出字符表</h3><table><thead><tr><th>字符</th><th>输出的数据类型</th><th>含义</th></tr></thead><tbody><tr><td>%d</td><td>整形</td><td>整形输出</td></tr><tr><td>%ld</td><td>长整型</td><td>长整型输出</td></tr><tr><td>%o</td><td>整数</td><td>以八进制形式输出整数</td></tr><tr><td>%x</td><td>整数或字符串地址</td><td>以十六进制数形式输出整数，或输出字符串地址</td></tr><tr><td>%u</td><td>输出unsigned型数据（无符号整形）</td><td>以十进制输出unsigned型数据。注意：%d和%u有无符号的数值范围不一致，也就是极限值，不然会出错</td></tr><tr><td>%c</td><td>字符</td><td>输出一个字符</td></tr><tr><td>%s</td><td>字符串</td><td>输出一个字符串</td></tr><tr><td>%f</td><td>实数</td><td>以小数形式输出，默认保留6位</td></tr><tr><td>%.100</td><td>实数</td><td>保留小数点后100位</td></tr><tr><td>%e</td><td>实数</td><td>以指数形式输出实数</td></tr><tr><td>%g</td><td>不输出0</td><td>根据大小自动选f格式或e格式，且不输出无意义的0</td></tr></tbody></table><h2 id="3-3-0-sizeof-运算符"><a href="#3-3-0-sizeof-运算符" class="headerlink" title="3.3.0 sizeof 运算符"></a>3.3.0 sizeof 运算符</h2><p>sizeof是一个单目运算符，用来计算操作数在内存中占据的字节数，其操作数既可以是括在圆括号中的类型标识符，其返回值是size_t类型，即无符号整数，如：</p><table><thead><tr><th>Sizeof(short)</th><th>返回2</th></tr></thead><tbody><tr><td>Sizeof(long)</td><td>返回4</td></tr><tr><td>Sizeof(int)</td><td>取决系统也可以是下面的表达式</td></tr><tr><td>Short x；</td><td></td></tr><tr><td></td><td></td></tr><tr><td>Sizeof(x)</td><td>返回2</td></tr></tbody></table><h2 id="3-3-1-符号的作用"><a href="#3-3-1-符号的作用" class="headerlink" title="3.3.1 符号的作用"></a>3.3.1 符号的作用</h2><p>整数的正负–有符号和无符号。<br>前面论述的只关注了正整数，负数在计算机中该如何表示？正数和负数是两种情况，计算机又是一个很笨的东西，要区分两种情况，就必须有一个标记来表示是哪种情况。两种情况，用二进制的一位刚好可以表示，比如用0表示正数，用1表示负数，刚好可以区分清楚。那么一个4字节也就是32位存储单元的整数，应该用哪一位表示数据的正负符号呢？最简单的方法就是用最高位（就是最左边那一位）了。C语言中确实就是用最高位来表示应该整数的正负号。0表示为正，1表示为负。</p><h2 id="3-4-0-基本数据类型"><a href="#3-4-0-基本数据类型" class="headerlink" title="3.4.0 基本数据类型"></a>3.4.0 基本数据类型</h2><p>注意：数据的运算必须建立在数据的极限范围内。</p><table><thead><tr><th>类型</th><th>类型关键字</th><th>长度(位)</th><th>取值范围</th></tr></thead><tbody><tr><td>有符号字符型</td><td>[signed]char</td><td>8</td><td>-127 — +127</td></tr><tr><td>无符号字符型</td><td>unsigned char</td><td>8</td><td>0 — 255</td></tr><tr><td>有符号短整型</td><td>[signed] short [int]</td><td>16</td><td>-32767 — +32767</td></tr><tr><td>无符号短整型</td><td>unsigned short [int]</td><td>16</td><td>0 —65535</td></tr><tr><td>有符号长整型</td><td>[signed] long [int]</td><td>32</td><td>-2147483647 — +2147483647</td></tr><tr><td>无符号长整形</td><td>unsigned long [int]</td><td>32</td><td>0 — 4294967295</td></tr><tr><td>单精度实型</td><td>float</td><td>32</td><td>约(3.4<em>10^-38 — 3.4</em>10^-38)</td></tr><tr><td>双精度实型</td><td>double</td><td>64</td><td>约(1.7<em>10^-308 — 1.7</em>10^-308)</td></tr></tbody></table><h2 id="3-4-1-数值范围"><a href="#3-4-1-数值范围" class="headerlink" title="3.4.1 数值范围"></a>3.4.1 数值范围</h2><p>Int 型最大：2147483647<br>Int 型最小：-2147483647<br>unsingned int 型最大：0xffffffff 也就是 4294967295</p><h2 id="3-4-2-整型常量"><a href="#3-4-2-整型常量" class="headerlink" title="3.4.2 整型常量"></a>3.4.2 整型常量</h2><p>三种表示形式：</p><ul><li><p>十进制整数：由数字 0 - 9 和正负号表示。如：123，-456，0</p></li><li><p>八进制整数：由数字 0 开头，后跟数字 0 - 7。如：0123，011</p></li><li><p>十六进制整数：由 0x 或 0X 开头，后跟 0 - 9，a - f，A - F表示。如：0x123，0Xff</p></li><li><p>长整形常量：789L，017L，0x12aL（用 l 或 L 引出）</p><h2 id="3-4-3-整型变量"><a href="#3-4-3-整型变量" class="headerlink" title="3.4.3 整型变量"></a>3.4.3 整型变量</h2><p>整型变量用于存放整型数据。根据数值的表示范围整形可以为整形（int）、短整型（short）、长整型（long）三种。<br>这三种整型都默认为有符号型（signed）,有符号即可以是正数、负数和0。也可以根据需要，将整型指定为无符号型（unsigned），此时整型变量只能存放非负数。<br>上面提到的 Short、long、signed、unsigned 都是一些类型修饰符，用于补充说明变量的特性。</p><h2 id="3-4-4-浮点型数据"><a href="#3-4-4-浮点型数据" class="headerlink" title="3.4.4 浮点型数据"></a>3.4.4 浮点型数据</h2><p>两种表示形式：</p></li><li><p>十进制小数形式：必须带小数点。如：0.123，.123，123.0，0.0，123.</p></li><li><p>指数形式：e或E之前必须有数字；指数必须为整数。如：12.3e3,123E2,1.23e4,e-5,1.2E-3.5</p></li></ul><p>在C语言中，则以”E”或”e”后跟一个整数来表示”10”为底数的幂数。（e代表10，3代表3次方）<br>12.3e3 == 12.3*10^3<br>e代表基数10 3代表3次方</p><p>1.2345e+002==</p><p>e+002表示10的2次方。科学计数法，用e表示10，加号表示正整数次方；减后，表示负整数次方，这里就是等于123.456实型常量的类型细分：</p><ul><li>默认为double型，例如3.14就是double类型。</li><li>后面加f或F认为是Float型，例如：3.14f就是Float类型。</li></ul><p>%8.2f表示：<br>整数8表示宽度为8，也就是8个字符，而.2表示精度为2，也就是小数点后有2位。</p><h2 id="3-4-5-浮点型变量"><a href="#3-4-5-浮点型变量" class="headerlink" title="3.4.5 浮点型变量"></a>3.4.5 浮点型变量</h2><p>浮点型分为单精度型（float）和双精度型（double）两种。<br>Float 型数据占用4个字节（32bit）存储单元，提供的有效数字是6 - 7位。<br>Double 型数据占用8个字节（64bit）存储单元，提供的有效数字是15 - 16位。</p><h2 id="3-4-6-字符型数据"><a href="#3-4-6-字符型数据" class="headerlink" title="3.4.6 字符型数据"></a>3.4.6 字符型数据</h2><p>字符”1”和整数1是不同的概念：<br>字符”1”只是代表一个形状为”1”的符号，在需要时按原样输出，在内存中以ASCII码形式存储，占1个字符。<br>整数1是以整数存储方式（二进制补码方式）存储的，占2个或4个字节。<br>注意：</p><ul><li>字符型常量和字符串常量长度不一致，sizeof(‘A’)和sizeof(“A”)；长度不一致，前者为4个字节，后者为2个字节。</li><li>一个汉字占两个字节，只能由宽字符存储，字符串存储一个汉字输出是3个字节，因为字是两个加个”\0”的一个字节。</li><li>sizeof数据类型和sizeof字符型常量不是一个东西例如：</li></ul><p>Char a = ‘A’；sizeof(ch)是一个字节，但sizeof(‘A’)是四个字节</p><ul><li>Wchar_t wch = “” 宽字符 可以存储汉字；’’是窄字符。<h2 id="3-4-7-字符型变量"><a href="#3-4-7-字符型变量" class="headerlink" title="3.4.7 字符型变量"></a>3.4.7 字符型变量</h2>字符型变量在内存中占一个字节，由于存储的是字符的二进制ASCII码，与整型数据存储方式类似，字符型数据和整数数据可以相互运算。<br>注意：<br>字符串常量不允许赋值给字符型变量，C语言也没有专门的字符串变量。要在内存中存取字符串，只能使用数组或指针。<br>设置默认控制台前景和背景颜色：<br>COLOR [attr]   attr 指定控制台输出的颜色属性<br>颜色属性由两个十六进制数学指定，第一个为背景，第二个则为前景。每个数字可以为以下如何值之一（在CMD输入Color ？也可查询）：</li></ul><table><thead><tr><th>0 = 黑色</th><th>8 = 灰色</th></tr></thead><tbody><tr><td>1 = 蓝色</td><td>9 = 淡蓝色</td></tr><tr><td>2 = 绿色</td><td>A = 淡绿色</td></tr><tr><td>3 = 浅绿色</td><td>B = 淡浅绿色</td></tr><tr><td>4 = 红色</td><td>C = 淡红色</td></tr><tr><td>5 = 紫色</td><td>D = 淡紫色</td></tr><tr><td>6 = 黄色</td><td>E =淡黄色</td></tr><tr><td>7 = 白色</td><td>F = 亮白色</td></tr></tbody></table><p>如果没有给定任何参数，该命令会将颜色还原到CMD.exe 启动时的颜色。这个值来自当前控制台窗口、/T 命令行开关或 DefaultColor 注册表值。<br>如果用相同的前景和背景颜色来执行 COLOR命令，COLOR命令会将ERRORLEVEL设置为1。<br>例如：COLOR fc 在亮白色上产生亮红色</p><h2 id="3-4-8-ASCII码"><a href="#3-4-8-ASCII码" class="headerlink" title="3.4.8 ASCII码"></a>3.4.8 ASCII码</h2><p>实际就是将我们所有字符都标号了。他们可以相互转换</p><table><thead><tr><th>ASCII值</th><th>控制字符</th><th>ASCII值</th><th>字符</th><th>ASCII值</th><th>字符</th><th>ASCII值</th><th>字符</th></tr></thead><tbody><tr><td>000</td><td>NUL</td><td>032</td><td>(space)</td><td>064</td><td>@</td><td>096</td><td>`</td></tr><tr><td>001</td><td>SOH</td><td>033</td><td>!</td><td>065</td><td>A</td><td>097</td><td>a</td></tr><tr><td>002</td><td>STX</td><td>034</td><td>“</td><td>066</td><td>B</td><td>098</td><td>b</td></tr><tr><td>003</td><td>ETX</td><td>035</td><td>#</td><td>067</td><td>C</td><td>099</td><td>c</td></tr><tr><td>004</td><td>EOT</td><td>036</td><td>$</td><td>068</td><td>D</td><td>100</td><td>d</td></tr><tr><td>005</td><td>END</td><td>037</td><td>%</td><td>069</td><td>E</td><td>101</td><td>e</td></tr><tr><td>006</td><td>ACK</td><td>038</td><td>&amp;</td><td>070</td><td>F</td><td>102</td><td>f</td></tr><tr><td>007</td><td>BEL</td><td>039</td><td>‘</td><td>071</td><td>G</td><td>103</td><td>g</td></tr><tr><td>008</td><td>BS</td><td>040</td><td>(</td><td>072</td><td>H</td><td>104</td><td>h</td></tr><tr><td>009</td><td>HT</td><td>041</td><td>)</td><td>073</td><td>I</td><td>105</td><td>i</td></tr><tr><td>010</td><td>LF</td><td>042</td><td>*</td><td>074</td><td>J</td><td>106</td><td>j</td></tr><tr><td>011</td><td>VT</td><td>043</td><td>+</td><td>075</td><td>K</td><td>107</td><td>k</td></tr><tr><td>012</td><td>FF</td><td>044</td><td>,</td><td>076</td><td>L</td><td>108</td><td>l</td></tr><tr><td>013</td><td>CR</td><td>045</td><td>-</td><td>077</td><td>M</td><td>109</td><td>m</td></tr><tr><td>014</td><td>SO</td><td>046</td><td>。</td><td>078</td><td>N</td><td>110</td><td>n</td></tr><tr><td>015</td><td>SI</td><td>047</td><td>/</td><td>079</td><td>O</td><td>111</td><td>o</td></tr><tr><td>016</td><td>DLE</td><td>048</td><td>0</td><td>080</td><td>P</td><td>112</td><td>p</td></tr><tr><td>017</td><td>DC1</td><td>049</td><td>1</td><td>081</td><td>Q</td><td>113</td><td>q</td></tr><tr><td>018</td><td>DC2</td><td>050</td><td>2</td><td>082</td><td>R</td><td>114</td><td>r</td></tr><tr><td>019</td><td>DC3</td><td>051</td><td>3</td><td>083</td><td>S</td><td>115</td><td>s</td></tr><tr><td>020</td><td>DC4</td><td>052</td><td>4</td><td>084</td><td>T</td><td>116</td><td>t</td></tr><tr><td>021</td><td>NAK</td><td>053</td><td>5</td><td>085</td><td>U</td><td>117</td><td>u</td></tr><tr><td>022</td><td>SYN</td><td>054</td><td>6</td><td>086</td><td>V</td><td>118</td><td>v</td></tr><tr><td>023</td><td>ETB</td><td>055</td><td>7</td><td>087</td><td>W</td><td>119</td><td>w</td></tr><tr><td>024</td><td>CAN</td><td>056</td><td>8</td><td>088</td><td>X</td><td>120</td><td>x</td></tr><tr><td>025</td><td>EM</td><td>057</td><td>9</td><td>089</td><td>Y</td><td>121</td><td>y</td></tr><tr><td>026</td><td>SUB</td><td>058</td><td>:</td><td>090</td><td>Z</td><td>122</td><td>z</td></tr><tr><td>027</td><td>ESC</td><td>059</td><td>;</td><td>091</td><td>[</td><td>123</td><td>{</td></tr><tr><td>028</td><td>FS</td><td>060</td><td>&lt;</td><td>092</td><td>\</td><td>124</td><td>&#124;</td></tr><tr><td>029</td><td>GS</td><td>061</td><td>=</td><td>093</td><td>]</td><td>125</td><td>}</td></tr><tr><td>030</td><td>RS</td><td>062</td><td>&gt;</td><td>094</td><td>^</td><td>126</td><td>~</td></tr><tr><td>031</td><td>US</td><td>063</td><td>?</td><td>095</td><td>_</td><td>127</td><td>▢</td></tr></tbody></table><h2 id="3-4-9-隐式类型转换（小转大）"><a href="#3-4-9-隐式类型转换（小转大）" class="headerlink" title="3.4.9 隐式类型转换（小转大）"></a>3.4.9 隐式类型转换（小转大）</h2><p>整型、实型、字符型数据之间可以混合运算。例如：<br>10 + ‘a’ + 1.5 - 8765.1234*’b’<br>不同数据类型之间运算会进行自动类型转换，规则如下：<br>转换步骤：简单而言就是小的转大的。<br>INT -&gt; unsigned -&gt; long -&gt; double。<br>运算过程：</p><ol><li>进行 10 + ‘a’ 的运算：将’a’转换成整数97，得到和为107.</li><li>进行 107+1.5 的运算：将107转换成 double 型，得到和为 108.500000.</li><li>进行 8765.1234*’b’的运算：将’b’转换为double型数 98.000000，再和8765.1234相乘。</li><li>把之前得到的108.500000减去8765.1234*’b’的值，就完成了整个表达式的求值。<h2 id="3-4-10-强制类型转换（大转小）"><a href="#3-4-10-强制类型转换（大转小）" class="headerlink" title="3.4.10 强制类型转换（大转小）"></a>3.4.10 强制类型转换（大转小）</h2>一般形式：（类型名）（表达式）<br>例如：<br>（int）（x+y）<br>（int）x+y<br>（double）（3/2）<br>（int）3.6<br>​</li></ol><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">voidmain</span>()&#123;</span><br><span class="line"></span><br><span class="line">_<span class="comment">/*第一种*/</span>_</span><br><span class="line">doublea=<span class="number">3.1415926</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>,a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(<span class="keyword">int</span>)a);_<span class="comment">//强制类型转换，Printf不会自动执行类型转换_</span></span><br><span class="line"></span><br><span class="line">_<span class="comment">/*第二种(最常用)*/</span>_</span><br><span class="line">doubleb=<span class="number">3.1415926</span>;</span><br><span class="line">intc=b;_<span class="comment">//b是8个字节c是4个字节。当你声明一个变量的时候，变量的空间就已经决定了15_</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n%d\n&quot;</span>,b,c);</span><br><span class="line"></span><br><span class="line">floatd=<span class="number">3.1415f</span>;</span><br><span class="line">doublee=d;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n%f\n&quot;</span>,d,e);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>,(<span class="keyword">float</span>)e);</span><br><span class="line"></span><br><span class="line">_<span class="comment">/*char转int*/</span>_</span><br><span class="line">charf=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(<span class="keyword">int</span>)f);_<span class="comment">//把字符转换成ASCII码进行运算_</span></span><br><span class="line">intg=<span class="number">71</span>;</span><br><span class="line">charG=g;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n%c\n&quot;</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(G),G);_<span class="comment">//int转char_</span></span><br><span class="line">inth=g<span class="number">-1</span>;</span><br><span class="line">charH=h;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,H);_<span class="comment">//我们可以通过修改ASCII的值来改变符号_</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>强制转换得到所需类型的中间变量，原变量类型、变量值保持不变。<br>注意：</p><ol><li>当赋值给一个已经声明的类型的时候会发生类型转换。</li><li>Char类型转变其它类型是ASCII码的相加或相减。</li></ol><p>精度损失问题：较高类型向较低类型转换时可能发生精度损失。<br>类型间转换：<br>不同类型的整型数据所占的字节数不同，他们在相互转换时需要格外小心，不要把过大的数据放在过小的数据类型中，在把占字节较大的数据赋值给占字节较小的数据时，防止出现以下的情况：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">2147483648</span>；</span><br><span class="line">printf（<span class="string">&quot;%d&quot;</span>,a）;</span><br></pre></td></tr></table></figure><p>这样赋值后，输出变量a的值并非预期的 2147483648，而是 -2147483648，原因是2147483648超出了int类型能装载的最大值，数据产生了溢出。如果换一种输出格式控制符，代码如下所示：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%u&quot;</span>,a);</span><br></pre></td></tr></table></figure><p>输出的结果就是变量a的值，原因是%u是按照无符号整型输出的数据，而无符号整型的数据范围上限大于2147483648这个值。</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言特性</title>
      <link href="/2022/02/22/C_2022.2.22.03/"/>
      <url>/2022/02/22/C_2022.2.22.03/</url>
      
        <content type="html"><![CDATA[<h2 id="2-0-C语言开发环境搭建"><a href="#2-0-C语言开发环境搭建" class="headerlink" title="2.0 C语言开发环境搭建"></a>2.0 C语言开发环境搭建</h2><ol><li>Visual studio（全宇宙最强IDE）</li></ol><p>记得勾选C++就可以</p><h2 id="2-1-C语言常用命令"><a href="#2-1-C语言常用命令" class="headerlink" title="2.1 C语言常用命令"></a>2.1 C语言常用命令</h2><p>Dir：列出当前目录下的文件以及文件卷<br>md：创建目录<br>rd ：删除目录<br>cd：进入指定目录<br>cd..：退回上一级目录<br>cd/：退回根目录<br>del：删除文件<br>exit：退出DOS<br>cl：编译和链接<br>注意要点：</p><ol><li><p>使用Visual studio自带编译器执行</p></li><li><p>不在同一盘符内不可执行需要进入到程序所在盘符（不用CD）</p></li><li><p>进入盘符之后需要CD进入文件卷，进入文件卷之后再CI编译和链接</p></li><li><p>注意指令间的空格</p><h2 id="2-1-1-练习：使用命令行生成一个关机程序"><a href="#2-1-1-练习：使用命令行生成一个关机程序" class="headerlink" title="2.1.1 练习：使用命令行生成一个关机程序"></a>2.1.1 练习：使用命令行生成一个关机程序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">system(<span class="string">&quot;shutdown -s -t 600&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译：cl <name>.c<br>生成取消程序<br>Main函数是主要程序，项目中必须有，仅只允许有一个，它是一个程序的入口。</p><h2 id="2-2-1-system-“pause”-和getchar-的区别"><a href="#2-2-1-system-“pause”-和getchar-的区别" class="headerlink" title="2.2.1 system(“pause”)和getchar()的区别"></a>2.2.1 system(“pause”)和getchar()的区别</h2><p>相同点：两者都是让程序暂停<br>区别：</p></li><li><p>getchar(); 读取一个字符</p></li><li><p>System(“pause”)；既让操作系统来暂停该程序的执行，同时程序运行到此语句时，会让程序的窗口上显示”Press any key to continue…” 也就是”按任意键继续“，即等待的用户按下任意键使得该程序从暂停状态返回到执行状态继续从刚才暂停的地方开始执行。</p><h2 id="2-3-1-include-说明"><a href="#2-3-1-include-说明" class="headerlink" title="2.3.1  #include 说明"></a>2.3.1  #include 说明</h2><p>Include 包含我们需要的函数定义。<br>windows系统预制了很多库函数，我们需要采用就需要用#include去调用这些。<br>源代码最终是需要被编译器处理的。编译器编译的过程比较复杂，但一般需要经历好几步。第一步是预处理。所谓预处理，就是编译前，先进行些预先的处理，如代替源代码中需要代替的部分。#include 就是这么一个预处理指示指令。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include 是C语言预处理器标识符。#和include之间可以有多个空格。#也不一定要顶格，但是一定是第一个非空白字符。#include的作用，是告诉编译器在编译前，要做一些预先处理：将后面&lt;&gt;中的文件内容包含到当前文件内，所谓包含，是指将&lt;&gt;中列出的文件的内容复制到当前文件里。</span><br></pre></td></tr></table></figure><p>注意：#一定要是第一个非空白字符。否则编译器会提示错误，并且错误信息和出错原因完全不匹配。<br>因为getchar 和 printf 两个函数的声明位于 Stdio.h 文件中，所以简单的用#include把stdio.h文件包含进来，自然就把1getchar 和 printf 两个函数的声明包含进来了。<br>说明：函数声明只是向编译器登记有这么一个函数，声明了函数不调用这个函数，是被允许的。这也就是为什么包含了整个stdio.h文件，里面声明了很多其他函数，但实际没有使用这些函数而编译器又不提示的原因。</p><h2 id="2-4-1-BUG的意思"><a href="#2-4-1-BUG的意思" class="headerlink" title="2.4.1 BUG的意思"></a>2.4.1 BUG的意思</h2><p>Bug的英文意思是臭虫，被引入到计算机领域，需要追溯到第一代计算机时代。当时的计算机是由许多真空管构成，需要利用大量的电力使真空管发光。某天，一只虫子爬进了其中的某只真空管中，计算机于是停止工作了。研究人员耗费了很长时间，找来找去，一处地方一处地方排查，终于发现这个虫子，取出虫子后，计算机就恢复了正常，于是BUG这个词语就在计算机领域中代表了隐藏的错误、缺陷、漏洞或者问题。把排除错误的过程称为DeBug。</p><h2 id="2-4-2-断点调试"><a href="#2-4-2-断点调试" class="headerlink" title="2.4.2 断点调试"></a>2.4.2 断点调试</h2><p>断电是为了方便程序员在调试过程中观察程序内部各状态而专门设置的一种调试手段。也就是在调试模式下运行程序过程中，当程序语句运行到设置断点后，暂停程序运行，但是程序当时的内存，寄存器，上下文环境等数据都被保持，并且在源码编辑器中指示出当前停留在代码的哪一行。然后程序员就可以不慌不忙利用调试器查看程序内部状态。</p><h2 id="2-4-3-C语言程序编译过程"><a href="#2-4-3-C语言程序编译过程" class="headerlink" title="2.4.3 C语言程序编译过程"></a>2.4.3 C语言程序编译过程</h2><h3 id="预处理："><a href="#预处理：" class="headerlink" title="预处理："></a>预处理：</h3><p>预处理就过程实际上是处理”#”,将include包含的头文件直接拷贝到hell.c当中；将#define 定义的宏进行替换，同时将代码中没用的注释部分删除等<br>具体做的事情如下：</p></li><li><p>将所有的#define 删除，并且展开所有的宏定义。说白了就是字符替换</p></li><li><p>处理所有的条件编译指令。#ifdef #idndf #endif等，就是带#的那些</p></li><li><p>处理#include，将#include指向的文件插入该行出</p></li><li><p>删除所有注释</p></li><li><p>添加行号和文件标识，这样的在调试和编译出错的时候才知道是哪一个文件的哪一行。</p></li><li><p>保留#pragma 编译器指令，因为编译器需要使用它们。</p><h3 id="编译："><a href="#编译：" class="headerlink" title="编译："></a>编译：</h3><p>编译的过程实质上是把高级语言翻译为机器语言，即对a.c做了这些事情。</p></li><li><p>词法分析</p></li><li><p>语法分析</p></li><li><p>语义分析</p></li><li><p>优化后生成相应的汇编代码</p></li></ol><p>从高级语言到汇编语言再到机器码<br>Gcc -s hello.c -o a.s 可以生成汇编代码<br>Gcc -c hello.c -o a.o 可以将源文件翻译成二进制文件。类Uinx系统编译的结果生成.o文件，Windows系统是生成.obj文件。<br>编译的过程就是把hello.c翻译成二进制文件</p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>就像刚才的hello.c它使用到了C标准库的东西”printf”,但是编译过程只是把源文件翻译成二进制而已，这个二进制还不能直接执行，这个时候就需要做一个动作，将翻译成二进制与需要用到的库绑定在一起。举个例子编译过的过程就是比如人要打你，你打电话叫人。你的人还没到就跟人打，这肯定被人打的惨不忍睹，肯定是你的人到了才打比较保险。</p><p>Gcc hello.c -o a 可以生成可执行程序。即Gcc不带任何参数。ldd就可以看到你的可执行程序依赖的库。</p><p>可以看到a.o的大小是1.1k，毕竟它只是把源文件翻译成二进制文件。a却有7k，应该是他多了很多绳子，在运行时候这些绳子就将对应的库函数牵过来。很形象的比喻。</p><h2 id="2-4-4-C语言程序结构"><a href="#2-4-4-C语言程序结构" class="headerlink" title="2.4.4 C语言程序结构"></a>2.4.4 C语言程序结构</h2><ol><li>一个程序由一个或多个源文件组成</li></ol><p>预处理指令例如包含头文件<br>全局声明     在函数之外进行的数据声明<br>函数定义     函数用来实现的功能</p><ol><li>函数是C程序的主要组成部分</li></ol><p>必须包含一个Main函数（只能有一个）<br>每个函数都用来实现若干特定功能<br>被调用的函数可以是库函数，也可以是自己编制设计的函数<br>程序总是从main函数开始执行</p><ol><li>C程序对计算机的操作由C语句完成</li></ol><p>C程序书写格式是比较自由的，一行可以几个语句，便于阅读只写一行<br>数据声明和语句最后必须有分号<br>C语言本身不提供输入输出语句<br>程序应当包含注释，增加可读性</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言概述</title>
      <link href="/2022/02/22/C_2022.2.22.02/"/>
      <url>/2022/02/22/C_2022.2.22.02/</url>
      
        <content type="html"><![CDATA[<h2 id="1-1-1-什么是C语言"><a href="#1-1-1-什么是C语言" class="headerlink" title="1.1.1 什么是C语言"></a>1.1.1 什么是C语言</h2><p>C语言就是和电脑进行交流的语言。学习C语言是为了进阶C++。</p><h2 id="1-1-2-什么是软件"><a href="#1-1-2-什么是软件" class="headerlink" title="1.1.2 什么是软件"></a>1.1.2 什么是软件</h2><p>软件：一系列按照特定顺序组织的计算机数据和指令集合。<br>常见的软件：<br>系统软件：如：DOS、Windows、Linux、IOS、Android等。<br>应用软件：如：微信、扫雷、迅雷、QQ等。<br>软件的出现实现了人与计算机之间的更好的交互。<br>交互方式：<br>自然交互界面：声音控制、触摸屏手势识别。<br>图形化界面：这种方式简单直观，使用者易于接受，容易上手操作。<br>命令行方式：需要一个控制台，输入特定的指令，让计算机完成一系列操作。较为麻烦，需要记录住一些命令。</p><h2 id="1-1-3-计算机信息存储"><a href="#1-1-3-计算机信息存储" class="headerlink" title="1.1.3 计算机信息存储"></a>1.1.3 计算机信息存储</h2><p>位（Bit）：度量数据的最小单位<br>字节（Byte）：最常用的基本单位，一个字节有8Bit<br>K ：1K = 1024 byte<br>M（兆）：1M = 1024 K<br>G（吉）：1G = 1024 M<br>T （太）：1T = 1024 G</p><h2 id="1-1-4-进制的概念"><a href="#1-1-4-进制的概念" class="headerlink" title="1.1.4 进制的概念"></a>1.1.4 进制的概念</h2><p>注意：计算机是用二进制存储数据的。<br>十进制： R=10 数字集 0123456789<br>二进制： R=2   数字集 01<br>八进制： R=8   数字集 01234567<br>十六进制：R=16 数字集 0~9ABCDEF</p><h2 id="1-1-5-程序与指令"><a href="#1-1-5-程序与指令" class="headerlink" title="1.1.5 程序与指令"></a>1.1.5 程序与指令</h2><p>指令是对计算机进行程序控制的最小单位。<br>所有的指令的集合称为计算机的指令系统。电脑是X86，手机是 ARM。<br>程序是为了完成一项特定任务而用某种语言来编写的一组指令序列。<br>计算机的大脑或者是心脏就是CPU，它控制着整个计算机运作，每种CPU，都有自己的指令系统，这个指令系统，就是该CPU的机器语言。机器语言是一组由0和1系列组成的指令码，这些指令码，是CPU制作厂商规定出来的，然后发布出来，请程序员遵守。比如下面某CPU指令系统中的两条指令：<br>10000000 加 | 10010000 减<br>要让计算机工作，就得用这样的语言去命令它。这样的命令，不是一条两条，而是上百条。而且不同型号的计算机其计算机语言是不相通的，按着一种计算机的机器指令编制的程序，不能在另一种计算机上执行。<br>终于出现了汇编语言，就是一些标识符取代0与1，一门人类可以比较轻松认识的编程语言。只是这门语言计算机并不认识，所以人类还不能用这个语言命令计算机做事情。<br>所以，有一类专门的程序，既认识机器语言，又认识汇编语言，也就是编译器，将标识符转化为0与1，知道怎么把汇编语言翻译成机器语言。于是人类和机器间的交流，终于又畅通了，而且人类可以比较轻松的编写程序了，也就是编译器，将标识符转化为0与1。<br>汇编语言和机器语言都是面向机器的，机器不同，语言也不同。既然有办法让编译器翻译成机器语言，难道就不能把其他更人性化的语言翻译成机器语言？1954年，Fortran 语言出现了，其后相继出现了类似的语言。这批语言，使程序员摆脱了计算机硬件的限制，把主要精力放在了程序设计上，不在关注底层的计算机硬件。这类语言称为高级语言。同样的，高级语言要被计算机执行，也需要一个翻译程序将其翻译成机器语言，这就是编译程序，简称编译器。<br>这类高级语言解决问题的方法是分析出解决问题所需要的步骤，把程序看作是数据加工的过程。基于这类方法的程序设计语言成为面向过程的语言。C语言就是这种面向过程的程序设计语言。</p><h3 id="1-1-5-1"><a href="#1-1-5-1" class="headerlink" title="1.1.5.1"></a>1.1.5.1</h3><p>例子：使用指令关机<br>Shutdown -s -t 600 // 关机<br>shutdown -a          // 取消关机<br>Shutdown -r -t      // 重启<br><a name="ugKxB"></a></p><h2 id="1-1-6-主流语言进化史"><a href="#1-1-6-主流语言进化史" class="headerlink" title="1.1.6 主流语言进化史"></a>1.1.6 主流语言进化史</h2><p>艾伦·麦席森·图灵（Alan Mathison Turing，1912年6月23日 - 1954年6月7日），英国数学家、逻辑学家，被称为计算机之父，人工智能之父。<br><a name="EK0p2"></a></p><h3 id="1-1-6-1-PHP是最好的语言出处"><a href="#1-1-6-1-PHP是最好的语言出处" class="headerlink" title="1.1.6.1 PHP是最好的语言出处"></a>1.1.6.1 PHP是最好的语言出处</h3><p>PHP是最好的语言这个梗不是出自别处，而就是出自PHP的官方文档！<br>PHP is the best language for web programming，but what about other languages?<br>​</p><p>Because PHP is the best language ever, ever It`s fast ,very powerful, and free.<br><a name="Ynp00"></a></p><h3 id="1-1-6-2"><a href="#1-1-6-2" class="headerlink" title="1.1.6.2"></a>1.1.6.2</h3><p>第一代：机器语言<br>第二代：汇编语言<br>第三代：C语言<br>第四代：C/C++、ObjectiveC语言<br>第五代：Java、C#、PHP、Lua、Pyhon、VB<br><a name="GLfmh"></a></p><h2 id="1-1-7-C语言特点"><a href="#1-1-7-C语言特点" class="headerlink" title="1.1.7 C语言特点"></a>1.1.7 C语言特点</h2><p>代码量小（相对汇编）执行速度快可移植性较差<br>功能强大（上帝之手）过于自由，经验不足易出错<br>编程自由（基本后面的语言都它写的）对平台库依赖较多<br>编写代码实现周期长  可移植性较差<br><a name="R8Xv4"></a></p><h2 id="1-1-8-为什么要学C语言"><a href="#1-1-8-为什么要学C语言" class="headerlink" title="1.1.8 为什么要学C语言"></a>1.1.8 为什么要学C语言</h2><p>因为强，黑客必备。<br>名企、外企、高新程序员面试必考<br>未来的精英语言<br><a name="qbXzM"></a></p><h2 id="1-1-9-C语言适用领域"><a href="#1-1-9-C语言适用领域" class="headerlink" title="1.1.9 C语言适用领域"></a>1.1.9 C语言适用领域</h2><p>计算机领域，C/C++大小通吃<br>C语言的应用极为广泛，从网站后台，到底层操作系统，从多媒体应用到大型网络游戏，从主板开发到人工智能均可使用C语言来开发。大公司职位，高薪职位都要求C语言基础好。</p><ol><li>可以写网站后台程序</li><li>可以写GUI界面（Windows等可视化操作界面）</li><li>可以针对某个主题写出功能强大的程序库，然后供其他程序方便使用，从而让其他程序节省开发时间。</li><li>可以写出大型游戏的引擎</li><li>可以写出另一个语言</li><li>可以写操作系统和驱动程序，并且只能用C语言编写，Linux操作系统的全部源代码都可以在网上得到，要深入了解操作系统的运行秘密，懂C语言就可以看懂。</li><li>任何设备只要配置了微处理器，就都支持C语言。从微波炉到手机，都是由C语言技术来推动的。嵌入式开发<br><a name="VICFI"></a><h2 id="1-2-0-C语言关键字"><a href="#1-2-0-C语言关键字" class="headerlink" title="1.2.0 C语言关键字"></a>1.2.0 C语言关键字</h2>C语言仅有32个关键字，9种控制语句，却能完成无数的功能。<br>32个关键字：（由系统定义，不能重做其他定义）</li></ol><table><thead><tr><th>auto</th><th>break</th><th>case</th><th>char</th><th>const</th></tr></thead><tbody><tr><td>continue</td><td>default</td><td>do</td><td>double</td><td>else</td></tr><tr><td>Enum</td><td>extern</td><td>float</td><td>for</td><td>go to</td></tr><tr><td>if</td><td>int</td><td>long</td><td>register</td><td>return</td></tr><tr><td>short</td><td>signed</td><td>size of</td><td>static</td><td>struct</td></tr><tr><td>switch</td><td>typedef</td><td>unsigned</td><td>union</td><td>void</td></tr><tr><td>volatile</td><td>while</td><td>​</td><td></td><td></td></tr><tr><td>​</td><td></td><td></td><td></td><td></td></tr><tr><td>​</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p><a name="s5w08"></a></p><h2 id="1-2-1-9种控制语句"><a href="#1-2-1-9种控制语句" class="headerlink" title="1.2.1 9种控制语句"></a>1.2.1 9种控制语句</h2><p>If () ~ else ~<br>For () ~<br>while ()~<br>do ~ while ()<br>Continue<br>Break<br>Switch<br>Go to<br>Return<br><a name="QA3me"></a></p><h2 id="1-2-2-C语言的34种运算符"><a href="#1-2-2-C语言的34种运算符" class="headerlink" title="1.2.2 C语言的34种运算符"></a>1.2.2 C语言的34种运算符</h2><p>34种运算符：<br>算术运算符：+ - * / % ++ –<br>关系运算符：&lt; &lt;= == &gt; &gt;= !=<br>逻辑运算符：！ &amp;&amp; ||<br>位运算符：&lt;&lt; &gt;&gt; ~ | ^ &amp;<br>赋值运算符： = 及其扩展<br>条件运算符：？：<br>逗号运算符：，<br>指针运算符：* &amp;<br>求字节数：sieze of<br>强制类型转化：（类型）<br>分量运算符：. -&gt;<br>下标运算符：[]<br>其他：：（） -<br><a name="vJTDX"></a></p><h2 id="2-0-C语言开发环境搭建"><a href="#2-0-C语言开发环境搭建" class="headerlink" title="2.0 C语言开发环境搭建"></a>2.0 C语言开发环境搭建</h2><ol><li>Visual studio（全宇宙最强编译器）</li></ol><p>记得勾选C++开发</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 游戏编程 — WinMain</title>
      <link href="/2022/02/22/GameCode_WinMain_2022.2.22.01/"/>
      <url>/2022/02/22/GameCode_WinMain_2022.2.22.01/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="function">Int WINAPI  <span class="title">WinMain</span><span class="params">(_In_ HINSTANCE hInstance,_In_opt HINSTANCE hPrevInstance,_In_ LPSTR lpCmdine,_In_ <span class="keyword">int</span> nCmdShow)</span></span>&#123;</span><br><span class="line">    <span class="built_in">MessageBox</span>(<span class="literal">NULL</span>,<span class="string">L&quot;你好，Visual Studio&quot;</span>,<span class="string">L&quot;消息窗口&quot;</span>,<span class="number">0</span>);</span><br><span class="line">    Return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WINAPI 其实就是 _stdcall 有时候也会写作 CALLBACK 它和 WINAPI 等效<br>WinMain 是Windows程序的入口函数</p><h3 id="WinMain的第一个参数："><a href="#WinMain的第一个参数：" class="headerlink" title="WinMain的第一个参数："></a>WinMain的第一个参数：</h3><p>HINSTANCE类型的hInstance，它表示该程序当前运行的实例句柄。<br>我们可以对这个类型HINSTANCE进行字面上的理解，h前缀表示这个参数的类型为handle(句柄)，句柄的意思，而后面的Instance中文意思是实例，将两个意思结合起来，所以这个类型就是实例句柄。<br>hInstance其实就是一个数值。当一个程序在Windows下运行时，它唯一对应一个运行中的实例，也只有运行中的程序实例，才有资格分配到句柄。<br>一个应用程序可以运行多个实例，每运行一个实例，系统都会给该实例分配一个句柄，并且通过hInstance参数传递给程序的入口点WinMain函数。</p><h3 id="WinMain的第二个参数："><a href="#WinMain的第二个参数：" class="headerlink" title="WinMain的第二个参数："></a>WinMain的第二个参数：</h3><p>HINSTANCE类型的hPrevInstance,表示当前实例的前一个实例句柄。<br>​我们可以对这个参数进行字面上的理解，h表示参数类型为句柄，Prev代表先前的(Previous)意思，Instance依旧表示实例，那么组合起来就是先前的实例句柄，这样顾名思义，是不是很好记忆呢，对于这个参数用法，MSDN中明确表示在Win32环境下，该参数总是取NULL，这就是说在Win32环境下这个参数没有存在感，不起任何作用，只是在进行WinMain函数书写时需要将它专门做为一个参数表示出来而已。</p><h3 id="WinMain的第三个参数："><a href="#WinMain的第三个参数：" class="headerlink" title="WinMain的第三个参数："></a>WinMain的第三个参数：</h3><p>LPSTR类型的lpCmdLine，它是一个以空终止的字符串，指定传递给运用程序的命令行参数。<br>依旧是进行参数肢解：lp前缀表示这个参数是一个指针，Cmd表示Command，命令的意思，与Line组合起来就表示命令行。<br>例如在Windows7操作系统下的E盘有一个叫ForTheDream.txt的文件，我们用鼠标双击这个文件时将启动记事本程序(notepad.exe)。<br>此时系统会将E:\ForTheDream.txt作为命令行的参数传递给记事本程序的WinMain函数，记事本程序会在得到这个文件的路径后，就会在窗口中正确显示这个文件的内容。</p><h3 id="WinMain的第四个参数："><a href="#WinMain的第四个参数：" class="headerlink" title="WinMain的第四个参数："></a>WinMain的第四个参数：</h3><p>int类型的nCmdShow，指定程序窗口应该如何显示，是最大化，最小化，还是隐藏等等。<br>这个参数可有如下取值：</p><table><thead><tr><th>参数</th><th>值</th><th>意义</th></tr></thead><tbody><tr><td>SW_HIDE</td><td>0</td><td>隐藏此窗口并激活另一个窗口</td></tr><tr><td>SW_MAXIMIZE</td><td>3</td><td>最大化指定的窗口</td></tr><tr><td>SW_MINIMIZE</td><td>6</td><td>最小化指定的窗口并激活当前Z次序中顶部的窗口</td></tr><tr><td>SW_RESTOPE</td><td>9</td><td>激活并显示此窗口，如果此窗口被最小化或者最大化了，系统会恢复它到原始尺寸的位置，一个应用程序应该在恢复最小化的窗口时指定此SW_RESTORE标识</td></tr><tr><td>SW_SHOW</td><td>5</td><td>以当前的尺寸和位置激活与显示指定窗口</td></tr><tr><td>SW_SHOWMAXIMIZED</td><td>3</td><td>最大化激活并显示这个窗口</td></tr><tr><td>SW_SHOWMINIMIZED</td><td>2</td><td>最小化激活并显示这个窗口</td></tr><tr><td>SW_SHOWMINNOACTIVE</td><td>7</td><td>最小化显示这个窗口，与SW_SHOWMINIMIZED唯一的区别是不会去激活指定的窗口</td></tr><tr><td>SW_SHOWNA</td><td>8</td><td>以当前的尺寸和位置激活与显示指定窗口，与SW_SHOW的唯一区别是不会去激活指定的窗口</td></tr><tr><td>SW_SHOWNOACTIVATE</td><td>4</td><td>显示一个窗口，若指定的窗口是最小化或者最大化的，系统会恢复其到原始尺寸和位置，与SW_SHOWNORMAL的唯一区别是不会去激活指定的窗口</td></tr><tr><td>SW_SHOWNORMAL</td><td>1</td><td>激活和显示一个窗口，若指定的窗口是最小化或者最大化的，系统会恢复其到原始尺寸和位置。一个应用程序应该在第一次显示窗口的时候指定这个标识</td></tr></tbody></table><h2 id="MessageBox函数"><a href="#MessageBox函数" class="headerlink" title="MessageBox函数"></a>MessageBox函数</h2><p>MessageBox函数，它用于显示一个消息框，可以通过一些参数来设置这个消息框的样式。在MSDN中查到这个函数有如下原型：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">Int WINAPI <span class="title">MessageBox</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ HWND hWnd,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPCTSTR lpTest,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_opt_ LPCTSTR lpCaption,</span></span></span><br><span class="line"><span class="params"><span class="function">_In_ UINT uType</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><p>这里的_In_opt 类似于之前提到过的_in，只不过是后面多了一个_opt,表示可选的（Optional），两个词组合在一起就表示”可选的输入参数”了。就是说这个参数我们可以自己填内容，不填具体内容的话直接填NULL也行得通，选择权在于我们。</p><h3 id="MessageBox函数第一个参数："><a href="#MessageBox函数第一个参数：" class="headerlink" title="MessageBox函数第一个参数："></a>MessageBox函数第一个参数：</h3><p>HWND类型的hWnd，表示我们显示的消息框所属的窗口的句柄。在进行Windows编程中，我们常常要和句柄打交道，后面我们会具体阐述什么是句柄，在我们的Visual Studio程序中，这个参数设为了NULL，表示消息框是从属于桌面。</p><h3 id="MessageBox函数的第二个参数："><a href="#MessageBox函数的第二个参数：" class="headerlink" title="MessageBox函数的第二个参数："></a>MessageBox函数的第二个参数：</h3><p>LPCTSTR类型的lpText，它是一个以NULL结尾的字符串，表示所要显示的消息的内容。</p><h3 id="MessageBox函数的第三个参数："><a href="#MessageBox函数的第三个参数：" class="headerlink" title="MessageBox函数的第三个参数："></a>MessageBox函数的第三个参数：</h3><p>LPCTSTR类型的lpCaption，它也是一个以NULL结尾的字符串，在其中填我们要显示的消息框的标题的内容。</p><h3 id="MessageBox函数的第四个参数："><a href="#MessageBox函数的第四个参数：" class="headerlink" title="MessageBox函数的第四个参数："></a>MessageBox函数的第四个参数：</h3><p>UINT类型的uType，表示我们消息窗口需要什么样的样式。微软已经为我们定义好了很多可供选择的样式和消息对应的图标，一些常用的样式列表如下：</p><table><thead><tr><th>标识名（Flags）</th><th>含有精析</th></tr></thead><tbody><tr><td>MB_ABORTRETRYIGNORE</td><td>消息框带有三个按钮：Abort、Retry和Ignore</td></tr><tr><td>MB_OK</td><td>消息框带有唯一一个按钮：OK。需要注意的是，MB_OK 是系统默认的MessageBox函数样式</td></tr><tr><td>MB_OKCANCEL</td><td>消息框带有两个按钮：OK和Cancel</td></tr><tr><td>MB_RETRYCANCEL</td><td>消息框带有两个按钮：Retry和Cancel</td></tr><tr><td>MB_YESNO</td><td>消息框带有两个按钮：YES和NO</td></tr><tr><td>MB_YESNOCANCEL</td><td>消息框带有三个按钮：YES、NO和Cancel</td></tr></tbody></table><p>常见的图标我们也是通过一些标识名来指定，如以下几种：</p><table><thead><tr><th>标识名（Flags）</th><th>含义精析</th></tr></thead><tbody><tr><td>MB_ICONWARNING</td><td>“警告”图标</td></tr><tr><td>MB_ICONASTERISK</td><td>“风险”图标</td></tr><tr><td>MB_ICONSTOP</td><td>“停止”图标</td></tr></tbody></table><p>这里只列出了一些常用的标识，完整版可以自行查阅MSDN。<br>想要多个标识一起使用的话，我们可以采用逻辑或（Logical OR）把不同的标识连接起来，具体的符号是键盘上Enter键上方的那条竖杠”|”。比如要创建一个具有YES和NO的按钮并带有”问号”图标的消息框，我们就把uType填成这样：MB_YESNO|MB_ICONQUESTION,非常直观。后面我们也会经常碰到类似的、需要多个标识符同时使用的场合，用一下这条竖杠”|”连接一下就好了。<br>和大多数Win32函数一样，MessageBox函数也有返回值。在Visual Studio示例程序中，这个返回值可以忽略。而如果我们创建了具有对应按钮的消息框，就涉及到按下具体的按键，就需要给出按键的返回值，这样我们就需要判断哪个键被按下了，再对应作出相应的响应。返回值的列表如下：</p><table><thead><tr><th>返回值类型</th><th>精析</th></tr></thead><tbody><tr><td>IDABORT</td><td>按下Abort后的返回值</td></tr><tr><td>IDCANCEL</td><td>按下Cancel后的返回值</td></tr><tr><td>IDIGNORE</td><td>按下Ignore后的返回值</td></tr><tr><td>IDNO</td><td>按下NO之后的返回值</td></tr><tr><td>IDOK</td><td>按下OK之后的返回值</td></tr><tr><td>IDRETRY</td><td>按下Retry之后的返回值</td></tr><tr><td>IDYES</td><td>按下Yes之后的返回值</td></tr></tbody></table><p>这个短小的函数MessageBox我们算是讲完了。它虽然很简单，但是非常好用，可谓麻雀虽小五脏俱全，特别是在需要向玩家显示出错误消息的时候，比如我们写了一个函数，在程序执行出错的时候我们要知道出错的地方，就可以这样来写：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>（error）&#123;</span><br><span class="line">MessageBox（<span class="literal">NULL</span>,<span class="string">L&quot;在这里填写出错的信息&quot;</span>,<span class="string">L&quot;在这里填报错信息标题&quot;</span>,<span class="number">0</span>）；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用MessageBox来显示错误消息的这个方法会贯穿我们游戏编程的始终，如果想让我们的游戏程序遇到问题可以更加智能，就要在我们的游戏程序源代码中多加一些这样的”错误处理”代码。值得一提的是，在运行游戏程序时经常会弹出一个提示框，提示缺失某某D3D的DLL或者MSVR的DLL，程序想要重新安装云云，就是这个MessageBox函数的杰作。</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> 游戏开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript 程序流程</title>
      <link href="/2021/12/06/TypeScript_JS_Learning_2021_12_6_01/"/>
      <url>/2021/12/06/TypeScript_JS_Learning_2021_12_6_01/</url>
      
        <content type="html"><![CDATA[<h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p><strong>算术运算符</strong></p><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>加号</td></tr><tr><td>-</td><td>减号</td></tr><tr><td>*</td><td>乘号</td></tr><tr><td>/</td><td>除号</td></tr><tr><td>%</td><td>取余（取模）</td></tr><tr><td>++ | –</td><td>自增 | 自减</td></tr></tbody></table><p><strong>比较运算符</strong></p><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>==</td><td>等于</td></tr><tr><td>===</td><td>等于（不仅值还包括类型）</td></tr><tr><td>!=</td><td>不等于</td></tr><tr><td>!==</td><td>不等于（不仅值还包括类型）</td></tr></tbody></table><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">2</span> + <span class="number">3</span>;</span><br><span class="line"><span class="keyword">let</span> num = <span class="number">2</span> - ( <span class="number">3</span> + <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取余</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">10</span> % <span class="number">3</span>;</span><br><span class="line"><span class="built_in">document</span>.write(num);<span class="comment">// 输出为 1 取余等于（3*3 = 9）余 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ++自增</span></span><br><span class="line">num = num + <span class="number">1</span>;</span><br><span class="line">num ++;</span><br><span class="line">++ num;</span><br><span class="line"><span class="comment">// 在输出中++是程序会先打印然后执行++操作</span></span><br><span class="line"><span class="built_in">document</span>.write(num++ + <span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(num + <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果要先++再使用可以采用</span></span><br><span class="line"><span class="built_in">document</span>.write(++num + <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比较运算</span></span><br><span class="line"><span class="keyword">let</span> res:<span class="built_in">boolean</span> = <span class="number">5</span> &gt; <span class="number">3</span>;</span><br><span class="line"><span class="built_in">document</span>.write(res);<span class="comment">// 输出为true</span></span><br><span class="line">res = <span class="number">5</span> &lt; <span class="number">3</span>;</span><br><span class="line"><span class="built_in">document</span>.write(res);<span class="comment">// 输出为false</span></span><br><span class="line">num = <span class="number">5</span></span><br><span class="line">res = num == <span class="number">5</span>;</span><br><span class="line"><span class="built_in">document</span>.write(res);<span class="comment">// 输出为true</span></span><br><span class="line"></span><br><span class="line">num = <span class="number">3</span>;</span><br><span class="line">num2 = <span class="string">&quot;3&quot;</span>;</span><br><span class="line">res = num === num2;<span class="comment">// 输出为false</span></span><br><span class="line">res = num != num2;<span class="comment">// 输出为ture</span></span><br></pre></td></tr></table></figure><p><strong>逻辑运算符</strong></p><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>逻辑与（并且 | 又）</td></tr><tr><td>||</td><td>或</td></tr><tr><td>! ture (或者! false)</td><td>逻辑非（取反）</td></tr></tbody></table><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 例如：10 &gt; num &gt;2; 但是我们程序不能这样写：</span></span><br><span class="line"><span class="keyword">let</span> res:<span class="built_in">boolean</span> = <span class="literal">null</span>;</span><br><span class="line">res = num &gt; <span class="number">3</span> &amp;&amp; &lt; <span class="number">10</span>;<span class="comment">// num大于3，小于10 结果才为ture 一个为false 则结果为 false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者是 num &gt; 10 num &lt; 5;</span></span><br><span class="line">res = num &gt; <span class="number">10</span> || num &lt; <span class="number">5</span>; <span class="comment">// 两个有一个为ture 则结果为 ture</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 取反</span></span><br><span class="line">res = !(num &gt; <span class="number">10</span>); <span class="comment">//如果（num &gt; 10）为ture 则结果为 false</span></span><br></pre></td></tr></table></figure><p><strong>赋值运算符</strong></p><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>赋值</td></tr><tr><td>+=</td><td>加赋值</td></tr><tr><td>-=</td><td>减赋值</td></tr><tr><td>*=</td><td>乘赋值</td></tr><tr><td>/=</td><td>除赋值</td></tr></tbody></table><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num：<span class="built_in">number</span> = <span class="number">3</span>; <span class="comment">// 将3赋值给num</span></span><br><span class="line"></span><br><span class="line">num = num +<span class="number">3</span>;<span class="comment">// 给num的值加3可以写成：</span></span><br><span class="line">num += <span class="number">3</span>;</span><br></pre></td></tr></table></figure><hr><h3 id="判断语句-条件控制语句"><a href="#判断语句-条件控制语句" class="headerlink" title="判断语句 | 条件控制语句"></a>判断语句 | 条件控制语句</h3><p>假设有一个值 Age 如果大于18就输出成年人 如果小于18就输出未成年人</p><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// if 判断语句 if 表示如果 else 表示否则</span></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span>(age &gt; <span class="number">18</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;成年人&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    docment.write(<span class="string">&quot;未成年人&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果大于60为老年人</span></span><br><span class="line"><span class="keyword">if</span>( age &gt; <span class="number">60</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;老年人&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(age &gt; <span class="number">18</span>)&#123;</span><br><span class="line">    doucument.write(<span class="string">&quot;成年人&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    doucument.write(<span class="string">&quot;未成年&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 假设 0-59 是一般 60-79 是及格 80-100 是优秀</span></span><br><span class="line"><span class="keyword">let</span> score = <span class="number">80</span>;</span><br><span class="line"><span class="keyword">if</span>(score &gt;= <span class="number">0</span> &amp;&amp; score &lt; <span class="number">60</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;一般&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">60</span> &amp;&amp; score &lt; <span class="number">80</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">80</span>&amp;&amp; score &lt;=<span class="number">100</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;系统出错&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 假设我们有一个num 如果num大于100 我们只允许给它100，否则就输出本身值</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">if</span>(num &gt; <span class="number">100</span>)&#123;</span><br><span class="line">    num = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(num);</span><br><span class="line"><span class="comment">// 当然我们可以采用三目运算更加快速的解决这个问题 (条件？值1:值2 如果为ture则赋值值1 否则赋值值2)</span></span><br><span class="line">num = num &gt; <span class="number">100</span> ? <span class="number">100</span> : num;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 假设我们需要多种状态</span></span><br><span class="line"><span class="built_in">enum</span> State&#123;</span><br><span class="line">    idle,</span><br><span class="line">    run,</span><br><span class="line">    attack,</span><br><span class="line">    die</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> state:State = State.idle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(state == State.idle)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;站立&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 我们可以采用选择结构语句(分支语句) switch:</span></span><br><span class="line"><span class="keyword">switch</span>(state)&#123;</span><br><span class="line">    <span class="keyword">case</span> State.idel:</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">&quot;站立&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">// 到此结束 </span></span><br><span class="line">    <span class="keyword">case</span> State.run:</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">&quot;跑步&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> State.attack:</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">&quot;攻击&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>: <span class="comment">//如果以上都没进来就执行：</span></span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">&quot;死亡&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="循环控制语句"><a href="#循环控制语句" class="headerlink" title="循环控制语句"></a>循环控制语句</h3><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// while() 循环判断 我们先输出5个HelloWorld</span></span><br><span class="line"><span class="keyword">let</span> i:<span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> num:<span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt; <span class="number">5</span>)&#123;</span><br><span class="line">   <span class="built_in">document</span>.write(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(num + <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们在游戏开发中通常有while做成死循环检测或执行游戏全生命周期的事件</span></span><br><span class="line"><span class="keyword">while</span>(ture)&#123;</span><br><span class="line"><span class="comment">// 游戏中持久生命周期事件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 假设我们要打印出100以内的所有偶数的和</span></span><br><span class="line"><span class="keyword">let</span> i:<span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> num: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt; <span class="number">101</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">        num += i;</span><br><span class="line">    &#125;</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.wirte(num +<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// do ... while 循环 第一次无论如何就进行执行一次 再进行循环、判断</span></span><br><span class="line"><span class="keyword">let</span> i:<span class="built_in">number</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;do.while 循环&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">while</span>(i &lt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们有一个数组代表人名,我们需要将数组内容逐步打印出来：</span></span><br><span class="line"><span class="keyword">let</span> names:<span class="built_in">string</span>[] = [<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span>]</span><br><span class="line"><span class="built_in">document</span>.write(names[<span class="number">0</span>]);<span class="comment">// 这样的打印方法是效率很低的，且不好管理</span></span><br><span class="line"><span class="comment">// 我们用遍历方式</span></span><br><span class="line"><span class="keyword">let</span> i :<span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt; <span class="number">3</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(name[i]);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当然还要一个循环方式更加便捷，省去我们在外面创建变量和自增</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; <span class="number">3</span>; i++;)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(names[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当然在后面为了更加便捷还有一种for循环 它会遍历数组直到全部完成</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> tmpName <span class="keyword">of</span> nams)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(tmpName);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// in 不会输出遍历数组的值而是遍历输出数组的索引</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> index <span class="keyword">in</span> names)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(indx);<span class="comment">// 输出 0 1 2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当然我们可以在循环中退出来</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i &gt; <span class="number">5</span>)&#123;</span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">//跳出for循环 这个方法可以用在所有循环，但是注意它只会跳出自己最近的循环，如果是嵌套循环，它只能跳出第一层</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Script </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript | JavaScript 变量与常量</title>
      <link href="/2021/12/05/TypeScript_JS_Learning_2021_12_5_01/"/>
      <url>/2021/12/05/TypeScript_JS_Learning_2021_12_5_01/</url>
      
        <content type="html"><![CDATA[<h3 id="语句介绍"><a href="#语句介绍" class="headerlink" title="语句介绍"></a>语句介绍</h3><p><strong>输出语句</strong></p><p>document.write(); 只支持输出为字符串类型</p><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;Hello World&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>JavaScript</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;Hello World&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>可产生变化的输出语句（通过变量）：</p></blockquote><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明变量(let或者Var)：</span></span><br><span class="line"><span class="keyword">let</span> PersonName = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">PersonName = <span class="string">&quot;你好，世界&quot;</span>;</span><br><span class="line"><span class="built_in">document</span>.write(PersonName);</span><br></pre></td></tr></table></figure><ul><li>JavaScript</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> PersonName = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">PersonName = <span class="string">&quot;你好，世界&quot;</span>;</span><br><span class="line"><span class="built_in">document</span>.write(PersonName);</span><br></pre></td></tr></table></figure><blockquote><p>const 常量无法改变</p></blockquote><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明常量</span></span><br><span class="line"><span class="keyword">const</span> tmp = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="built_in">document</span>.write(tmp);</span><br></pre></td></tr></table></figure><ul><li>JavaScript（没有常量）</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tmp = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="built_in">document</span>.write(tmp);</span><br></pre></td></tr></table></figure><blockquote><p>声明类型限定（只能存储限定类型）</p></blockquote><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 限定为字符串</span></span><br><span class="line"><span class="keyword">var</span> PersonName:<span class="built_in">string</span> = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 报错：因为111不是字符串类型而是整型，需要修改成number（int）类型</span></span><br><span class="line"><span class="keyword">var</span> PersonName：<span class="built_in">number</span> = <span class="string">&quot;Hello&quot;</span></span><br><span class="line">PersonName = <span class="number">111</span>;</span><br></pre></td></tr></table></figure><ul><li>JavaScript（没有类型限定）</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> PersonName = <span class="string">&quot;Hello&quot;</span>;</span><br></pre></td></tr></table></figure><hr><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><blockquote><p>在TypeScript | JavaScript 中，如果我们没有给予数据类型，它会根据你的数据自动判断类型。例如：最好写上</p></blockquote><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>枚举</td><td>自己定义一个属于自己的类型</td></tr><tr><td>联合类型</td><td>一个变量支持两种或多种类型</td></tr><tr><td>number</td><td>整型，与 int 一样</td></tr><tr><td>string</td><td>字符串，可以用 + 连接字符串或者连接其他类型，还有模板字符串 ``</td></tr><tr><td>boolean</td><td>布尔类型，只含两个字：ture（是）| false（否）</td></tr><tr><td>any</td><td>任何类型（可以包含任何类型）</td></tr><tr><td>array</td><td>基础数组</td></tr></tbody></table><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 自动判定为number (int)类型</span></span><br><span class="line"><span class="keyword">let</span> tmp = <span class="number">333</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动将tmp转化为字符串类型</span></span><br><span class="line"><span class="built_in">document</span>.write(tmp + <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果tmp没有赋值则打印 特殊值：undefined (表示你声明了一个变量没有赋值)</span></span><br><span class="line"><span class="keyword">let</span> tmp:<span class="built_in">number</span>;</span><br><span class="line"><span class="built_in">document</span>.write(tmp + <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 还有一个特殊值为 null 为空,表示我们主动赋值为空</span></span><br><span class="line">tmp = <span class="literal">null</span>;</span><br><span class="line"><span class="built_in">document</span>.write(tmp + <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>JavaScript</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tmp = <span class="number">333</span>;</span><br></pre></td></tr></table></figure><blockquote><p>模板字符串</p></blockquote><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> tmp:<span class="built_in">number</span> = <span class="number">520</span>;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">`Hello <span class="subst">$&#123;tmp&#125;</span>,</span></span><br><span class="line"><span class="string">World`</span>);</span><br></pre></td></tr></table></figure><blockquote><p>any 可以包含任何类型</p></blockquote><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> tmp <span class="built_in">any</span> = <span class="literal">false</span>;</span><br><span class="line">tmp = Hello;</span><br><span class="line">tmp = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><blockquote><p>array 基础数组</p></blockquote><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a:<span class="built_in">number</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> b:<span class="built_in">number</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> b:<span class="built_in">number</span> = <span class="number">3</span>;</span><br><span class="line"><span class="string">``</span><span class="string">``</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组：首先类型相同，变量含意相同(例如关卡)</span></span><br><span class="line"><span class="keyword">let</span> a:<span class="built_in">number</span>[] = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">doucument.write(<span class="string">`A的数组为<span class="subst">$&#123;a&#125;</span>`</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// string 演示(个子类型都可以用数组表示)：</span></span><br><span class="line"><span class="keyword">let</span> Names:<span class="built_in">string</span>[] = [<span class="string">&quot;Hello&quot;</span>,<span class="string">&quot;World&quot;</span>]</span><br><span class="line">doucument.write(<span class="string">`Name的数组为<span class="subst">$&#123;Names&#125;</span>`</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">// 当然也可以直接用</span></span><br><span class="line"><span class="keyword">let</span> a:<span class="built_in">number</span>[] = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> b:<span class="built_in">number</span> = a[<span class="number">3</span>];</span><br><span class="line">doucument.write(<span class="string">`B的数值为<span class="subst">$&#123;b&#125;</span>`</span>)</span><br></pre></td></tr></table></figure><blockquote><p>联合类型：一个变量支持两种或多种类型</p></blockquote><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num:<span class="built_in">number</span>|<span class="built_in">string</span> = <span class="number">0</span>;</span><br><span class="line">num = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 报错：不支持布尔类型需要添加</span></span><br><span class="line">num = ture;</span><br></pre></td></tr></table></figure><blockquote><p>枚举</p></blockquote><p>假设我们的游戏通常需要很多不同的颜色，我希望有一个值来表示颜色</p><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 普通方法 </span></span><br><span class="line"><span class="keyword">let</span> color:<span class="built_in">number</span> = <span class="number">0</span>;<span class="comment">//0 白色 1 黑色</span></span><br><span class="line"><span class="comment">// 或者玩家的一个状态</span></span><br><span class="line"><span class="keyword">let</span> state:<span class="built_in">number</span> = <span class="number">0</span>;<span class="comment">// 0站立 1 跑步 2 死亡 3 攻击</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 枚举</span></span><br><span class="line"><span class="built_in">enum</span> Color&#123;</span><br><span class="line">    red,</span><br><span class="line">    blue,</span><br><span class="line">    green</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> color:Color = Color.red;</span><br><span class="line"><span class="comment">// 或者玩家的一个状态</span></span><br><span class="line"><span class="built_in">enum</span> State&#123;</span><br><span class="line">    idle,</span><br><span class="line">    run,</span><br><span class="line">    death,</span><br><span class="line">    attack</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> state:State = state.idle;</span><br></pre></td></tr></table></figure><blockquote><p>注释</p></blockquote><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"><span class="comment">/* 多行注释 */</span></span><br></pre></td></tr></table></figure><blockquote><p>类型验证</p></blockquote><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> X = <span class="number">10</span>;</span><br><span class="line"><span class="string">``</span><span class="string">``</span></span><br><span class="line"><span class="comment">// 假设我没有定义X的类型(自动判定)，后面我写了很多行代码，忘记了X的类型，我们可以输出X的类型查看</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="keyword">typeof</span> X);<span class="comment">// 输出类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 关于枚举</span></span><br><span class="line"><span class="built_in">enum</span> Color&#123;</span><br><span class="line">    red,</span><br><span class="line">    blue,</span><br><span class="line">    green</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> color:Color = color.red;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="keyword">typeof</span> color);<span class="comment">// 输出为number</span></span><br><span class="line"><span class="built_in">document</span>.write(Color.red + <span class="string">&quot;&quot;</span>);<span class="comment">// 输出为1</span></span><br><span class="line"><span class="comment">// 枚举本身是采用整型记录的所以它的类型依旧为整型</span></span><br><span class="line"><span class="built_in">enum</span> Color&#123;</span><br><span class="line">    red = <span class="number">2</span>,</span><br><span class="line">    blue,</span><br><span class="line">    green = <span class="number">3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>类型别名</p></blockquote><ul><li>TypeScript</li></ul><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">Type NewNumber = <span class="built_in">number</span>;</span><br><span class="line"><span class="keyword">let</span> num:NewNumber = <span class="number">3</span>;</span><br><span class="line"><span class="built_in">document</span>.write(num);<span class="comment">// 输出为3</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="keyword">typeof</span> num);<span class="comment">//输出l</span></span><br><span class="line"><span class="comment">// 这样我们就可以修改类型名称为自定义的了 我真想把number改成int</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Script </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 音乐类（完结）</title>
      <link href="/2021/11/15/CodeGame_Java_SuperMary_Test08/"/>
      <url>/2021/11/15/CodeGame_Java_SuperMary_Test08/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.arvin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javazoom.jl.decoder.JavaLayerException;</span><br><span class="line"><span class="keyword">import</span> javazoom.jl.player.Player;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  背景音乐类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Music</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 空参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Music</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException, JavaLayerException </span>&#123;</span><br><span class="line">        Player player;  <span class="comment">// 播放音乐</span></span><br><span class="line">        String str = System.getProperty(<span class="string">&quot;user.dir&quot;</span>) + <span class="string">&quot;/src/Music/music.wav&quot;</span>;</span><br><span class="line">        BufferedInputStream name = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(str)); <span class="comment">// 读取 str 中音乐 将异常添加到方法签名</span></span><br><span class="line">        player = <span class="keyword">new</span> Player(name); <span class="comment">// 实例化 Player 对象 将异常添加到方法签名</span></span><br><span class="line">        player.play(); <span class="comment">// 调用 Player 的 play() 开始播放音乐</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeGame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 敌人类</title>
      <link href="/2021/11/14/CodeGame_Java_SuperMary_Test07/"/>
      <url>/2021/11/14/CodeGame_Java_SuperMary_Test07/</url>
      
        <content type="html"><![CDATA[<h3 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.arvin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  敌人类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Enemy</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存储当前坐标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> x,y;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存储敌人类型</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> type;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断敌人运动的方向</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> face_to = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于显示敌人的当前图像</span></span><br><span class="line">    <span class="keyword">private</span> BufferedImage show;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个背景对象</span></span><br><span class="line">    <span class="keyword">private</span> BackGround backGround;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 食人花运动的极限范围</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> max_up = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> max_down = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个线程对象 实现敌人的运动</span></span><br><span class="line">    <span class="keyword">private</span> Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义当前的图片的状态</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> image_type = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  蘑菇敌人的构造函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Enemy</span> <span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">boolean</span> face_to,<span class="keyword">int</span> type,BackGround backGround)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">        <span class="keyword">this</span>.face_to = face_to;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">this</span>.backGround = backGround;</span><br><span class="line"></span><br><span class="line">        show = StaticValue.Mogu.get(<span class="number">0</span>); <span class="comment">// 初始化 Show</span></span><br><span class="line"></span><br><span class="line">        thread.start(); <span class="comment">// 启动线程</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  食人花敌人的构造函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Enemy</span> <span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">boolean</span> face_to,<span class="keyword">int</span> type,<span class="keyword">int</span> max_up,<span class="keyword">int</span> max_down,BackGround backGround)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">        <span class="keyword">this</span>.face_to = face_to;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">this</span>.max_up = max_up;</span><br><span class="line">        <span class="keyword">this</span>.max_down = max_down;</span><br><span class="line">        <span class="keyword">this</span>.backGround = backGround;</span><br><span class="line"></span><br><span class="line">        show = StaticValue.Flower.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        thread.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  敌人的死亡方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">death</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        show = StaticValue.Mogu.get(<span class="number">2</span>); <span class="comment">// 蘑菇死亡时图片</span></span><br><span class="line">        <span class="keyword">this</span>.backGround.getEnemyList().remove(<span class="keyword">this</span>); <span class="comment">//死亡后移除敌人</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 生成 x y show 的 get 方法 */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">getShow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> show;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成 type的 Get 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 抽写 Runnable 接口方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             *  判断是否是蘑菇敌人</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">if</span> (type == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (face_to)&#123;   <span class="comment">//判断当前朝向</span></span><br><span class="line">                    <span class="keyword">this</span>.x -= <span class="number">2</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.x += <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 判断切换 敌人的运动图片</span></span><br><span class="line">                image_type = image_type == <span class="number">1</span> ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">                show = StaticValue.Mogu.get(image_type);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 定义两个布尔 它们用于判断的敌人向左还是向右</span></span><br><span class="line">            <span class="keyword">boolean</span> canLeft = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">boolean</span> canRight = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 遍历障碍物</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; backGround.getObstacleList().size(); i++) &#123;</span><br><span class="line">                Obstacle obl = backGround.getObstacleList().get(i); <span class="comment">// 定义临时变量</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否可以向右走</span></span><br><span class="line">                <span class="keyword">if</span> (obl.getX() == <span class="keyword">this</span>.x + <span class="number">36</span> &amp;&amp; (obl.getY() + <span class="number">65</span> &gt; <span class="keyword">this</span>.y &amp;&amp; obl.getY() -<span class="number">35</span> &lt; <span class="keyword">this</span>.y)) &#123;</span><br><span class="line">                    canRight = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否可以向左走</span></span><br><span class="line">                <span class="keyword">if</span> (obl.getX() == <span class="keyword">this</span>.x - <span class="number">36</span> &amp;&amp; (obl.getY() + <span class="number">65</span> &gt; <span class="keyword">this</span>.y &amp;&amp; obl.getY() -<span class="number">35</span> &lt; <span class="keyword">this</span>.y)) &#123;</span><br><span class="line">                    canLeft = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断蘑菇敌人是否向左走 并且已经碰到了我们的障碍物 或者敌人走到了屏幕最左侧</span></span><br><span class="line">            <span class="keyword">if</span> (face_to &amp;&amp; !canLeft || <span class="keyword">this</span>.x == <span class="number">0</span>) &#123;</span><br><span class="line">                face_to = <span class="keyword">false</span>;    <span class="comment">// 重置方向向右走</span></span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>((!face_to) &amp;&amp; (!canRight) || <span class="keyword">this</span>.x == <span class="number">764</span>)&#123; <span class="comment">//反过来</span></span><br><span class="line">                face_to = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             *  判断是否是食人花敌人</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">if</span> (type == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (face_to) &#123; <span class="comment">// 食人花敌人的运动方向</span></span><br><span class="line">                    <span class="keyword">this</span>.y -= <span class="number">2</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.y += <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                image_type = image_type == <span class="number">1</span> ? <span class="number">0</span> : <span class="number">1</span>;   <span class="comment">//图像切换</span></span><br><span class="line">                <span class="comment">// 食人花敌人是否到了上限位置</span></span><br><span class="line">                <span class="keyword">if</span> (face_to &amp;&amp; (<span class="keyword">this</span>.y == max_up)) &#123;</span><br><span class="line">                    face_to = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 食人花敌人是否到了下限位置</span></span><br><span class="line">                <span class="keyword">if</span> ((!face_to) &amp;&amp; (<span class="keyword">this</span>.y == max_down))&#123;</span><br><span class="line">                    face_to = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                show = StaticValue.Flower.get(image_type);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">50</span>);   <span class="comment">// 线程休眠50毫秒</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeGame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 马里奥类</title>
      <link href="/2021/11/12/CodeGame_Java_SuperMary_Test06/"/>
      <url>/2021/11/12/CodeGame_Java_SuperMary_Test06/</url>
      
        <content type="html"><![CDATA[<h4 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.arvin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  马里奥类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用马里奥类实现 Runnadle 接口 重写其中的抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mario</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于表示(存储)横纵坐标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> x, y;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于表示马里奥当前状态</span></span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示当前状态对应的图像</span></span><br><span class="line">    <span class="keyword">private</span> BufferedImage show = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个 BackGround 对象用来获取障碍物信息</span></span><br><span class="line">    <span class="keyword">private</span> BackGround backGround = <span class="keyword">new</span> BackGround();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用来实现马里奥动作 线程对象</span></span><br><span class="line">    <span class="keyword">private</span> Thread thread = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 马里奥的移动速度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> xSpeed;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 马里奥的跳跃速度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ySpeed;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个索引 取得马里奥的运动图像</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> indexOf;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 表示马里奥上升的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> upTime = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断马里奥是否走到了城堡门口</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isOK;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断马里奥是否死亡</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isDeath = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 积分系统 表示分数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Mario</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Mario</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">        show = StaticValue.Stand_Right;     <span class="comment">// 初始化 show</span></span><br><span class="line">        <span class="keyword">this</span>.status = <span class="string">&quot;stand--Right&quot;</span>;     <span class="comment">// 用于表示马里奥当前的状态</span></span><br><span class="line">        thread = <span class="keyword">new</span> Thread(<span class="keyword">this</span>);    <span class="comment">// 初始化线程</span></span><br><span class="line">        thread.start();                     <span class="comment">// 启动线程 调用 start 方法</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 马里奥死亡方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">death</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        isDeath = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 马里奥向左移动</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">leftMove</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 改变移动速度</span></span><br><span class="line">        xSpeed = -<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断马里奥是否碰到了旗子 马里奥就应该无法移动</span></span><br><span class="line">        <span class="keyword">if</span> (backGround.isReach()) &#123;</span><br><span class="line">            xSpeed = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断马里奥是否处于空中</span></span><br><span class="line">        <span class="keyword">if</span> (status.indexOf(<span class="string">&quot;jump&quot;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">            status = <span class="string">&quot;jump--left&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            status = <span class="string">&quot;move--left&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 马里奥向右移动</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rightMove</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        xSpeed = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断马里奥是否碰到了旗子 马里奥就应该无法移动</span></span><br><span class="line">        <span class="keyword">if</span> (backGround.isReach()) &#123;</span><br><span class="line">            xSpeed = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (status.indexOf(<span class="string">&quot;jump&quot;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">            status = <span class="string">&quot;jump--right&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            status = <span class="string">&quot;move--right&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 马里奥向左停止</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">leftStop</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        xSpeed = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (status.indexOf(<span class="string">&quot;jump&quot;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">            status = <span class="string">&quot;jump--left&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            status = <span class="string">&quot;stop--left&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 马里奥向右停止</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rightStop</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        xSpeed = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (status.indexOf(<span class="string">&quot;jump&quot;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">            status = <span class="string">&quot;jump--right&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            status = <span class="string">&quot;stop--right&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 马里奥跳跃</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jump</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (status.indexOf(<span class="string">&quot;jump&quot;</span>) == -<span class="number">1</span>)&#123;  <span class="comment">// 判断马里奥是否是跳跃状态(-1 表示不是)</span></span><br><span class="line">            <span class="keyword">if</span> (status.indexOf(<span class="string">&quot;left&quot;</span>) != -<span class="number">1</span>) &#123;  <span class="comment">// 判断马里奥此时的方向(-1 表示向左)</span></span><br><span class="line">                status = <span class="string">&quot;jump--left&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                status = <span class="string">&quot;jump--right&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ySpeed = -<span class="number">10</span>;</span><br><span class="line">            upTime = <span class="number">7</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断马里奥是否碰到了旗子 马里奥就应该无法移动</span></span><br><span class="line">        <span class="keyword">if</span> (backGround.isReach()) &#123;</span><br><span class="line">            ySpeed = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 马里奥下落</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fall</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (status.indexOf(<span class="string">&quot;left&quot;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">            status = <span class="string">&quot;jump--left&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            status = <span class="string">&quot;jump--right&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ySpeed = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写 Runnable 的抽象方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// while 死循环</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断马里奥是否处于障碍物上</span></span><br><span class="line">            <span class="keyword">boolean</span> onObstacle = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断是否可以往右走</span></span><br><span class="line">            <span class="keyword">boolean</span> canRight = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断是否可以往左走</span></span><br><span class="line">            <span class="keyword">boolean</span> canLeft = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断马里奥是否到达旗杆位置 (游戏结束)</span></span><br><span class="line">            <span class="keyword">if</span> (backGround.isFlag() &amp;&amp; <span class="keyword">this</span>.x &gt;= <span class="number">500</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span>.backGround.setReach(<span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.backGround.isBase()) &#123; <span class="comment">// 判断旗子是否下落完成</span></span><br><span class="line">                    status = <span class="string">&quot;move--right&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (x &lt; <span class="number">690</span>) &#123; <span class="comment">// 判断马里奥是否移动到了中间</span></span><br><span class="line">                        x += <span class="number">5</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        isOK = <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (y &lt; <span class="number">395</span>) &#123;</span><br><span class="line">                        xSpeed = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">this</span>.y += <span class="number">5</span>;</span><br><span class="line">                        status = <span class="string">&quot;jump--right&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (y &gt; <span class="number">395</span>) &#123;</span><br><span class="line">                        <span class="keyword">this</span>.y = <span class="number">395</span>;</span><br><span class="line">                        status = <span class="string">&quot;stop--right&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 遍历当前场景里所有的障碍物</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;backGround.getObstacleList().size(); i++) &#123;</span><br><span class="line">                    Obstacle obstacle = backGround.getObstacleList().get(i); <span class="comment">// 临时变量存储当前场景障碍物信息</span></span><br><span class="line">                    <span class="keyword">if</span> (obstacle.getY() == <span class="keyword">this</span>.y + <span class="number">25</span> &amp;&amp; (obstacle.getX() &gt; <span class="keyword">this</span>.x -<span class="number">30</span> &amp;&amp; obstacle.getX() &lt; <span class="keyword">this</span>.x +<span class="number">25</span>))&#123; <span class="comment">// 判断马里奥是否处于障碍物上</span></span><br><span class="line">                        onObstacle = <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 判断是否跳起来顶到砖块 (碰撞检测)</span></span><br><span class="line">                    <span class="keyword">if</span> ((obstacle.getY() &gt;= <span class="keyword">this</span>.y -<span class="number">30</span> &amp;&amp; obstacle.getY() &lt;= <span class="keyword">this</span>.y -<span class="number">20</span>) &amp;&amp; (obstacle.getX() &gt; <span class="keyword">this</span>.x -<span class="number">30</span> &amp;&amp; obstacle.getX() &lt; <span class="keyword">this</span>.x + <span class="number">25</span>))&#123;</span><br><span class="line">                        <span class="keyword">if</span> (obstacle.getType() == <span class="number">0</span>) &#123; <span class="comment">// 检测障碍物类型 (0 可破坏砖块)</span></span><br><span class="line">                            backGround.getObstacleList().remove(obstacle);</span><br><span class="line">                            score += <span class="number">1</span>; <span class="comment">// 积分+1</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        upTime = <span class="number">0</span>; <span class="comment">// 行为反馈 顶到砖块立刻下落</span></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 判断是否可以往右走 (碰撞检测)</span></span><br><span class="line">                    <span class="keyword">if</span> (obstacle.getX() == <span class="keyword">this</span>.x + <span class="number">25</span> &amp;&amp; (obstacle.getY() &gt; <span class="keyword">this</span>.y -<span class="number">30</span> &amp;&amp; obstacle.getY() &lt; <span class="keyword">this</span>.y +<span class="number">25</span>))&#123;</span><br><span class="line">                        canRight = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 判断是否可以往左走 (碰撞检测)</span></span><br><span class="line">                    <span class="keyword">if</span> (obstacle.getX() == <span class="keyword">this</span>.x - <span class="number">30</span> &amp;&amp; (obstacle.getY() &gt; <span class="keyword">this</span>.y - <span class="number">30</span> &amp;&amp; obstacle.getY() &lt; <span class="keyword">this</span>.y + <span class="number">25</span>)) &#123;</span><br><span class="line">                        canLeft = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断马里奥是否碰到敌人死亡或者踩死敌人</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; backGround.getEnemyList().size(); i++) &#123; <span class="comment">// 遍历每一个敌人</span></span><br><span class="line">                    Enemy enemy = backGround.getEnemyList().get(i); <span class="comment">// enemy 存储当前的敌人</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 判断马里奥是否位于敌人头上 与判断障碍物是一样的</span></span><br><span class="line">                    <span class="keyword">if</span> (enemy.getY() == <span class="keyword">this</span>.y + <span class="number">20</span> &amp;&amp; (enemy.getX() -<span class="number">25</span> &lt;= <span class="keyword">this</span>.x &amp;&amp; enemy.getX() +<span class="number">35</span> &gt;= <span class="keyword">this</span>.x)) &#123;</span><br><span class="line">                        <span class="comment">// 判断是蘑菇敌人还是食人花敌人 蘑菇敌人才可以踩死</span></span><br><span class="line">                        <span class="keyword">if</span> (enemy.getType() == <span class="number">1</span>) &#123;</span><br><span class="line">                            enemy.death();  <span class="comment">// 调用蘑菇敌人的死亡方法</span></span><br><span class="line">                            score += <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">                            <span class="comment">// 让马里奥上升一小段</span></span><br><span class="line">                            upTime = <span class="number">3</span>;</span><br><span class="line">                            ySpeed = -<span class="number">10</span>;</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (enemy.getType()== <span class="number">2</span>)&#123; <span class="comment">// 食人花敌人情况</span></span><br><span class="line">                            <span class="comment">// 马里奥死亡</span></span><br><span class="line">                            death();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 判断马里奥是否碰到敌人 碰到死亡</span></span><br><span class="line">                    <span class="keyword">if</span> ((enemy.getX() + <span class="number">35</span> &gt; <span class="keyword">this</span>.x &amp;&amp; enemy.getX() - <span class="number">25</span> &lt; <span class="keyword">this</span>.x) &amp;&amp; (enemy.getY() + <span class="number">35</span> &gt;<span class="keyword">this</span>.y &amp;&amp; enemy.getY() -<span class="number">20</span> &lt; <span class="keyword">this</span>.y)) &#123;</span><br><span class="line">                        <span class="comment">// 马里奥死亡</span></span><br><span class="line">                        death();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 进行马里奥跳跃</span></span><br><span class="line">                <span class="keyword">if</span> (onObstacle &amp;&amp; upTime == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (status.indexOf(<span class="string">&quot;left&quot;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span> (xSpeed != <span class="number">0</span>)&#123;</span><br><span class="line">                            status = <span class="string">&quot;move--left&quot;</span>;</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            status = <span class="string">&quot;stop--left&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (xSpeed != <span class="number">0</span>)&#123;</span><br><span class="line">                            status = <span class="string">&quot;move--right&quot;</span>;</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            status = <span class="string">&quot;stop--right&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (upTime != <span class="number">0</span>)&#123;</span><br><span class="line">                        upTime--;   <span class="comment">// 一直自检</span></span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        fall(); <span class="comment">// 让他下落</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    y += ySpeed; <span class="comment">// 改变坐标值</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断马里奥是否在运动</span></span><br><span class="line">                <span class="keyword">if</span> (canLeft &amp;&amp; xSpeed &lt; <span class="number">0</span> || canRight &amp;&amp; xSpeed &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    x += xSpeed;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 判断马里奥是否到了最左边</span></span><br><span class="line">                    <span class="keyword">if</span> (x &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                        x = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断当前是否是移动状态</span></span><br><span class="line">                <span class="keyword">if</span> (status.contains(<span class="string">&quot;move&quot;</span>)) &#123;</span><br><span class="line">                    indexOf = indexOf == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否向左移动</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;move--left&quot;</span>.equals(status)) &#123;</span><br><span class="line">                    show = StaticValue.Run_Left.get(indexOf);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否向右移动</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;move--right&quot;</span>.equals(status)) &#123;</span><br><span class="line">                    show = StaticValue.Run_Right.get(indexOf);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否向左停止</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;stop--left&quot;</span>.equals(status)) &#123;</span><br><span class="line">                    show = StaticValue.Stand_Left;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否向右停止</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;stop-right&quot;</span>.equals(status)) &#123;</span><br><span class="line">                    show = StaticValue.Stand_Right;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否向左跳跃</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;jump--left&quot;</span>.equals(status))&#123;</span><br><span class="line">                    show = StaticValue.Jump_Left;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否向右跳跃</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;jump--right&quot;</span>.equals(status))&#123;</span><br><span class="line">                    show = StaticValue.Jump_Right;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 线程休眠 50 毫秒</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">50</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException exception) &#123;</span><br><span class="line">                    exception.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成 x y BufferedImage 的 set 和 get 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setX</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setY</span><span class="params">(<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">getShow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> show;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShow</span><span class="params">(BufferedImage show)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.show = show;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成 backGround 的 set 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBackGround</span><span class="params">(BackGround backGround)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.backGround = backGround;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成 判断马里奥是否到城堡门口的 Get 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isOK</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isOK;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成 isDeath 的 Get 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isDeath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isDeath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成分数的 Get 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getScore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeGame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】但行好事，莫问前程「暴力兔」</title>
      <link href="/2021/11/08/eqistle.2021.11.08.01/"/>
      <url>/2021/11/08/eqistle.2021.11.08.01/</url>
      
        <content type="html"><![CDATA[<p>您好，我是陆弦，我又写信了。</p><p>这篇文章是2020年5月23日写的，今天是2020年7月17日。祝朋友们，内心平和柔软，外表无坚不摧。</p><p>但行好事 莫问前程</p><p>原创 陆弦 一路弦歌 5月23日</p><p>赠人玫瑰，手留余香。5.20买的影星玫瑰。</p><p>这首歌的名字是《我的希望在路上》</p><p>（词：诗人小招，曲：独立音乐人白羽，演唱：佩佩、白羽）</p><p>曾经有一段时间，我的微信签名就是：</p><p>但行好事，莫问前程。（现在的签名是：怕什么真理无穷，进一寸有进一寸的欢喜。）</p><p>但行好事，莫问前程。<br>百度的解释：多多地做善事，过好当下，先不要去问前程如何。</p><p>我的理解是：做善良之人，行善良之事，无论未来如何，做好当下。</p><p>那么，如何做一个善良之人呢？</p><p>首先，有向善之心。</p><p>养成善意的视角，不以恶意揣测他人。</p><p>相处时与人为善，将自己的善意传达给他人时，必将也会收到他人回馈的善意，这个世界将消弥多少纷争与矛盾。</p><p>其次，培养善良的特质。不苛求他人，控制情绪，学会聆听。</p><p>一个善良的人，大多是性情温和的，因为他们会将心比心，不会说出伤害他人的话，也不会做出伤害他人的事。</p><p>最后，就是行动起来。多微笑，多关爱他人，力所能及地帮助他人。只有行动起来，才能帮助到他人，不要担心力量微小，再小的善意也是善意，也能带给受助者以暖意。</p><p>我忽地想到一个故事。</p><p>黄昏下，退潮的海滩上，走着一个小男孩。</p><p>小男孩身前的沙滩上，跳着许许多多试图回到海中的小鱼，而小男孩身后的沙滩上却一条搁浅的小鱼都没有。</p><p>妈妈问他：“你为什么要把小鱼都丢回大海啊？”</p><p>小男孩：“因为鱼儿离不开水啊，我不丢它回大海，它会死的。”</p><p>妈妈又问：“可是这片沙滩上的小鱼太多了，数也数不清，而且今天你将小鱼都丢回去了，那明天呢？那后天呢？那未来呢？那么多小鱼，你丢得完吗？”</p><p>小男孩笑了笑，夕阳灿烂的光辉照在他的脸上：“确实是丢不完的，但是我想在自己能力范围内，尽量帮助它们。”</p><p>小男孩举了举手中的小鱼，并努力将小鱼丢回大海，“</p><p>比如这条小鱼，我将它送回大海。这条小鱼只是我丢的所有小鱼其中一条，但是对于这条小鱼来说，我却是它的唯一，是唯一个帮助到它，并改变了它命运的人。我希望它能继续快乐生活下去，而不是被困沙滩，最终死掉。 “</p><p>这段时间，我就行动起来了。我参加了某会救.护员培训，参加这个培训的目的，就是希望多知道一些救.护知识，在突发状况发生时，我不但能够自救，不给别人拖后腿，还能够在力所能及的范围内帮助他人。</p><p>学习分为线上理论学习与线下实操考核。</p><p>线上理论学习包括了：某运动的基本知识、救护概论、心肺复苏、创伤救护、常见急症、理论考试，六个部分。在学习的过程中我发现，当真正遇到突发状况时，我在现场有可能面对的是鲜血、断肢、肠子、呕吐物等，这些让人面色发白、冷汗涔涔的物事。</p><p>所以，当一个合格的急.救员，除了要掌握好这些急救知识，最主要的是克服心理上的不适，冷静面对。如果急.救员都处于慌乱中，那么怎么能够帮助到他人。</p><p>关于现场情境，发几张图片，大家随意感受一下。 </p><p>（断肢伤口展示） </p><p>（肠管外溢展示。说实话，隔着屏幕学到这里时，我快吐了。）认认真真地学习了两周时间，5月18日参加了线上考试。</p><p>考试共有三次机会，学分80分以上为合格。我只考了一次，就获得了90分，理论合格了，好开心呀。错误了三题，这三题错误都是理解上出了问题。</p><p>其他关于救.护知识的具体问题全部正确。5月22日进行线下知识巩固与实操考核。</p><p>上午的实操内容是心肺复苏。</p><p>在操练心肺复苏的过程中，有一个学员在打开气道时，慌乱中手指掐住了伤员的喉咙，老师忙急声制止：“可别这么掐，这么掐，反而把伤员掐死了。”</p><p>学员们立马哄堂大笑。老师很严肃地环顾一圈，说道：“不要笑，在现场时，情形本来就很紧张，难免出现这样的状况，所以大家不能掉以轻心，认真地学习，不能让伤员二次受伤，甚至是死亡。”</p><p>是啊，作为一个人，作为一个救.护员，要尊重生命、敬畏生命，将伤者的生命安全放在头一位，在救护的过程中，要时刻关注伤者的伤势、反应，避免造成二次伤害，缓解伤者的痛苦，挽救伤者的生命。 </p><p>（左边是三角巾，右边是弹性绷带。） （胸部按压，伤者脸上敷着消毒面膜。） 人工呼吸 （排除口腔异物）下午的实操内容是创伤救护，包括：出血、骨折。绷带包扎有几种方法：环形包扎、螺旋包扎、螺旋反折包扎、8字包扎、回返包扎。三角巾包扎有几种方法：头部包扎、双肩包扎、胸部包扎、腹部包扎、手掌或脚掌包扎、膝部包扎，悬挂臂包扎。</p><p>（三角巾头部出血包扎，像不像偷地雷的？）（三角巾肩部出血包扎）（三角巾膝部出血包扎）（三角巾悬挂臂骨折包扎）（绷带回返式断肢包扎）拍照时，实操小组搭档喜笑颜开。</p><p>我说：“不能笑，断肢的伤员很痛，是不会笑的。尊重生命，首先要尊重自己的生命。身体发肤，受之父母，不敢毁损，孝之始也。”  哈哈哈…… </p><p>实操也终于合格了，好开心，觉得自己已经具备了一点点帮助别人的能力。</p><p>这次学习，我不但收获了丰富的急.救知识，还收获了心理上的慰贴感受。</p><p>这次来参加学习的学员，人数众多（约有30%为男生），大家热情高涨，态度一丝不苟。</p><p>这些现象都表明了，大部分人还是心存善念的，希望自己能为他人提供一点点帮助，希望这个世界更美好。</p><p>考试中，别的组的个别学员，是这样走江湖的，大家随意感受一下。 与人为善是值得肯定的，但是还需要注意几点。</p><p>首先，确保你的善举是被需要的。</p><p>有时候未经要求的“帮助”可能适得其反，“做好事有时也会受到惩罚”，好心办坏事，不但看不到受助者的笑脸，很可能还会被埋汰。</p><p>其次，不要为你的善举沾沾自喜，谦虚一点。如果做善事只为了身边的人夸奖你，那不是真正的善良。不求回报地去做善事，才是真正的善良。</p><p>最后，善良但要有锋芒，不要被别人利用你的善良。没有边界的心软，只会让对方得寸进尺；毫无原则的仁慈，只会让对方为所欲为。</p><p>嗯，但行好事，莫问前程。</p><p>请诸君亦来日行一善吧，</p><p>哪怕你只是说一句：“你好美，我爱你。”</p><hr><p><img src="https://z3.ax1x.com/2021/11/08/IGGsqx.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGDMR.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGG6Z6.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGcdK.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGrs1.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGgIO.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGRiD.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGWJe.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGfRH.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGG5QA.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGhzd.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGoLt.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGIsI.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGG7eP.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGXWQ.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGHdf.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGLFS.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGbo8.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGOJg.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGjzj.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGxQs.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGGzyn.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGJSLq.jpg"><br><img src="https://z3.ax1x.com/2021/11/08/IGJ9e0.jpg"></p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力兔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 超级玛丽障碍物类</title>
      <link href="/2021/11/08/CodeGame_Java_SuperMary_Test05/"/>
      <url>/2021/11/08/CodeGame_Java_SuperMary_Test05/</url>
      
        <content type="html"><![CDATA[<h4 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.arvin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  障碍物类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Obstacle</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于表示当前坐标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> y;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于记录障碍物类型</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> type;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于显示图像</span></span><br><span class="line">    <span class="keyword">private</span> BufferedImage show = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义当前场景对象</span></span><br><span class="line">    <span class="keyword">private</span> BackGround BackGround = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个线程对象 用于完成我们旗子下落的过程</span></span><br><span class="line">    <span class="keyword">private</span> Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Obstacle</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> type, BackGround BackGround)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">this</span>.BackGround = BackGround;</span><br><span class="line">        show = StaticValue.Obstacle.get(type);  <span class="comment">//  得到该类型的图像</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果是旗子的话 启动线程</span></span><br><span class="line">        <span class="keyword">if</span> (type == <span class="number">4</span>)&#123;</span><br><span class="line">            thread.start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成上面四个变量的 Get 方法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">getShow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> show;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写 Runnable 的抽象方法</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.BackGround.isReach()) &#123; <span class="comment">// 判断马里奥此时是否到达了旗子的位置</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.y &lt; <span class="number">374</span>) &#123; <span class="comment">// 判断此时的旗子有没有落到地上</span></span><br><span class="line">                    <span class="keyword">this</span>.y += <span class="number">5</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">this</span>.BackGround.setBase(<span class="keyword">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">50</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeGame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 超级玛丽窗口</title>
      <link href="/2021/11/07/CodeGame_Java_SuperMary_Test03/"/>
      <url>/2021/11/07/CodeGame_Java_SuperMary_Test03/</url>
      
        <content type="html"><![CDATA[<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>首先要基于：<a href="https://arvinroad.github.io/2021/11/05/CodeGame_Java_SuperMary_Test01/">Java 创建窗口</a></p><p>其次基于：<a href="https://arvinroad.github.io/2021/11/06/CodeGame_Java_SuperMary_Test02/">Java 超级玛丽常量类</a></p><p>搭配文件：<a href="https://arvinroad.github.io/2021/11/07/CodeGame_Java_SuperMary_Test04/">Java 超级玛丽背景类</a></p><hr><h4 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.arvin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javazoom.jl.decoder.JavaLayerException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  窗口框架类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WindowsFrame</span>  <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">KeyListener</span>,<span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于存储所有的背景</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;BackGround&gt; AllBackground = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于存档当前的背景</span></span><br><span class="line">    <span class="keyword">private</span> BackGround NowBackground = <span class="keyword">new</span> BackGround();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于双缓存</span></span><br><span class="line">    <span class="keyword">private</span> Image OffScreenImage = <span class="keyword">null</span>; <span class="comment">// 该变量为我们的双缓存</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义马里奥对象</span></span><br><span class="line">    <span class="keyword">private</span> Mario mario = <span class="keyword">new</span> Mario();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个线程对象用于马里奥运动</span></span><br><span class="line">    <span class="keyword">private</span> Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 空参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WindowsFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口的大小为 800 * 600</span></span><br><span class="line">        <span class="keyword">this</span>.setSize(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口居中显示</span></span><br><span class="line">        <span class="keyword">this</span>.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口的可见性</span></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建点击窗口上的关闭键，结束程序</span></span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口大小不可变</span></span><br><span class="line">        <span class="keyword">this</span>.setResizable(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向窗口对象添加键盘监听器 需要该类实现 KeyListener 接口 并重写抽象方法</span></span><br><span class="line">        <span class="keyword">this</span>.addKeyListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口名称</span></span><br><span class="line">        <span class="keyword">this</span>.setTitle(<span class="string">&quot;超级玛丽&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在空参构造中调用常量类的初始化(图片)方法</span></span><br><span class="line">        StaticValue.Init();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化马里奥对象</span></span><br><span class="line">        mario = <span class="keyword">new</span> Mario(<span class="number">10</span>,<span class="number">355</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建全部场景，因为有3个场景所以我们要通过 For 循环进行创建</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line">            AllBackground.add(<span class="keyword">new</span> BackGround(i, i == <span class="number">3</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>)); <span class="comment">// 传入二个参数：当前关卡数 | 是否为最后一关的布尔变量(三目运算) |</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将第一个场景设置为当前场景，修改这里参数可以进入不同关卡</span></span><br><span class="line">        NowBackground = AllBackground.get(<span class="number">0</span>);</span><br><span class="line">        mario.setBackGround(NowBackground); <span class="comment">// 将第一个场景的 BackGround 对象传递给马里奥</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用 repaint(); 方法 绘制图像</span></span><br><span class="line">        repaint();</span><br><span class="line"></span><br><span class="line">        thread.start(); <span class="comment">// 启动线程</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 播放音乐 实例化一个 Music 对象</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">new</span> Music();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException exception) &#123;</span><br><span class="line">            exception.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JavaLayerException exception) &#123;</span><br><span class="line">            exception.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  重写 Paint 方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics GraphicsPaint)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (OffScreenImage == <span class="keyword">null</span>)&#123;</span><br><span class="line">            OffScreenImage = createImage(<span class="number">800</span>,<span class="number">600</span>);  <span class="comment">// 为空 创建图像 调用 createImage() 方法</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Graphics graphics = OffScreenImage.getGraphics(); <span class="comment">// 定义 Graphics 对象</span></span><br><span class="line">        graphics.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">800</span>,<span class="number">600</span>); <span class="comment">// 调用 Graphics 的 fillRect(); 方法对我们的图像进行填充</span></span><br><span class="line">        graphics.drawImage(NowBackground.getBgImage(),<span class="number">0</span>,<span class="number">0</span>,<span class="keyword">this</span>); <span class="comment">// 绘制背景 (此时我们的图像绘制在缓冲区上)</span></span><br><span class="line">        <span class="comment">// 绘制敌人 (注意绘制在障碍物前，因为要被障碍物挡住)</span></span><br><span class="line">        <span class="keyword">for</span> (Enemy enemy : NowBackground.getEnemyList())&#123;</span><br><span class="line">            graphics.drawImage(enemy.getShow(),enemy.getX(),enemy.getY(),<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制障碍物 通过增强 For 循环</span></span><br><span class="line">        <span class="keyword">for</span> (Obstacle obstacle:NowBackground.getObstacleList()) &#123;</span><br><span class="line">            graphics.drawImage(obstacle.getShow(),obstacle.getX(),obstacle.getY(),<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制城堡</span></span><br><span class="line">        graphics.drawImage(NowBackground.getTower(),<span class="number">620</span>,<span class="number">270</span>,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制旗杆</span></span><br><span class="line">        graphics.drawImage(NowBackground.getGan(),<span class="number">500</span>,<span class="number">220</span>,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制马里奥对象</span></span><br><span class="line">        graphics.drawImage(mario.getShow(),mario.getX(),mario.getY(),<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制积分</span></span><br><span class="line">        Color color = graphics.getColor(); <span class="comment">// 保存我们的颜色</span></span><br><span class="line">        graphics.setColor(Color.BLACK); <span class="comment">// 颜色设置为黑色</span></span><br><span class="line">        graphics.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>,Font.BOLD,<span class="number">25</span>)); <span class="comment">// 设置字体为宋体 加粗 字号 25</span></span><br><span class="line">        graphics.drawString(<span class="string">&quot;当前分数：&quot;</span>+ mario.getScore(),<span class="number">300</span>,<span class="number">100</span>); <span class="comment">// 绘制显示</span></span><br><span class="line">        graphics.setColor(color); <span class="comment">// 还原我们的字体颜色</span></span><br><span class="line"></span><br><span class="line">        GraphicsPaint.drawImage(OffScreenImage,<span class="number">0</span>,<span class="number">0</span>,<span class="keyword">this</span>); <span class="comment">// 我们将缓冲区的图片绘制到窗口中</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  Main 主函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 WindowsFrame 的对象</span></span><br><span class="line">        WindowsFrame windowsFrame = <span class="keyword">new</span> WindowsFrame();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  KeyListener并重写抽象方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当键盘按下按钮时调用</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向右移动</span></span><br><span class="line">        <span class="keyword">if</span> (e.getKeyCode() == <span class="number">39</span>) &#123;</span><br><span class="line">            mario.rightMove();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向左移动</span></span><br><span class="line">        <span class="keyword">if</span> (e.getKeyCode() == <span class="number">37</span>) &#123;</span><br><span class="line">            mario.leftMove();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跳跃</span></span><br><span class="line">        <span class="keyword">if</span> (e.getKeyCode() == <span class="number">32</span>)&#123;</span><br><span class="line">            mario.jump();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当键盘松开按键时调用</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向左停止</span></span><br><span class="line">        <span class="keyword">if</span> (e.getKeyCode() == <span class="number">37</span>)&#123;</span><br><span class="line">            mario.leftStop();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向右停止</span></span><br><span class="line">        <span class="keyword">if</span> (e.getKeyCode()  == <span class="number">39</span>)&#123;</span><br><span class="line">            mario.rightStop();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写 Runnable 抽象方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            repaint();  <span class="comment">// 重写绘制图像</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">50</span>); <span class="comment">//线程休眠 50 毫秒</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断马里奥是否在屏幕最右边，如果是切换场景</span></span><br><span class="line">                <span class="keyword">if</span> (mario.getX() &gt;= <span class="number">775</span>)&#123;</span><br><span class="line">                    NowBackground = AllBackground.get(NowBackground.getSort());</span><br><span class="line">                    mario.setBackGround(NowBackground); <span class="comment">// 将当前场景对象传递给马里奥类</span></span><br><span class="line">                    mario.setX(<span class="number">10</span>);   <span class="comment">// 重置马里奥坐标，到出生点位置</span></span><br><span class="line">                    mario.setY(<span class="number">395</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 马里奥是否死亡</span></span><br><span class="line">                <span class="keyword">if</span> (mario.isDeath())&#123;</span><br><span class="line">                    JOptionPane.showMessageDialog(<span class="keyword">this</span>,<span class="string">&quot;马里奥死亡演示结束 - Arvin&quot;</span>);</span><br><span class="line">                    System.exit(<span class="number">0</span>); <span class="comment">// 结束程序</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断游戏是否结束</span></span><br><span class="line">                <span class="keyword">if</span> (mario.isOK()) &#123; <span class="comment">//判断是否结束 弹出一个窗口 调用JOptionPane 的 showMessageDialog 方法</span></span><br><span class="line">                    JOptionPane.showMessageDialog(<span class="keyword">this</span>,<span class="string">&quot;Demo演示结束 - Arvin&quot;</span>);</span><br><span class="line">                    System.exit(<span class="number">0</span>); <span class="comment">// 结束程序</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeGame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 超级玛丽背景类</title>
      <link href="/2021/11/07/CodeGame_Java_SuperMary_Test04/"/>
      <url>/2021/11/07/CodeGame_Java_SuperMary_Test04/</url>
      
        <content type="html"><![CDATA[<p>配合文件：<a href="https://arvinroad.github.io/2021/11/07/CodeGame_Java_SuperMary_Test03/">Java 超级玛丽窗口</a></p><hr><h4 id="代码演示："><a href="#代码演示：" class="headerlink" title="代码演示："></a>代码演示：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.arvin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  背景类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BackGround</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 调用BufferedImage 该对象用于显示当前场景的图片 */</span></span><br><span class="line">    <span class="keyword">private</span> BufferedImage bgImage = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 记录当前是第几个场景(关卡) */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> sort;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 判断是否是最后一个场景 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> flag;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 用于存放我们所有的障碍物 */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Obstacle&gt; ObstacleList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 用于存放我们所有的敌人 */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Enemy&gt; enemyList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 用于显示旗杆 */</span></span><br><span class="line">    <span class="keyword">private</span> BufferedImage Gan = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 用于显示城堡 */</span></span><br><span class="line">    <span class="keyword">private</span> BufferedImage Tower = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断马里奥是否到达旗杆位置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isReach = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断旗子是否落地</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isBase = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 空参构造 */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BackGround</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 含两个参数的构造参数 */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BackGround</span><span class="params">(<span class="keyword">int</span> sort,<span class="keyword">boolean</span> flag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sort = sort;</span><br><span class="line">        <span class="keyword">this</span>.flag = flag;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 判断我们此时的 flag 是否为 true */</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            bgImage = StaticValue.BackgroundImage_Two;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            bgImage = StaticValue.BackgroundImage_Noe;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 判断是否是第一关 */</span></span><br><span class="line">        <span class="keyword">if</span> (sort == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 绘制第一关的地面，上地面 type = 1，下地面 type = 2</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">27</span>; i++) &#123;</span><br><span class="line">                ObstacleList.add(<span class="keyword">new</span> Obstacle(i*<span class="number">30</span>,<span class="number">420</span>,<span class="number">1</span>,<span class="keyword">this</span>));    <span class="comment">// 绘制上地面</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 双重 For 循环绘制下地面</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">120</span>; j += <span class="number">30</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">27</span>; i++) &#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(i*<span class="number">30</span>,<span class="number">570</span>-j,<span class="number">2</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 绘制砖块A */</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">120</span>; i &lt;= <span class="number">150</span> ; i += <span class="number">30</span>) &#123;</span><br><span class="line">                ObstacleList.add(<span class="keyword">new</span> Obstacle(i,<span class="number">300</span>,<span class="number">3</span>,<span class="keyword">this</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 绘制砖块 B - F</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">300</span>; i &lt;= <span class="number">570</span>; i += <span class="number">30</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">360</span> || i == <span class="number">390</span> || i == <span class="number">480</span> || i==<span class="number">510</span> || i == <span class="number">540</span>) &#123;   <span class="comment">// 判断是否是蓝色砖块</span></span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(i,<span class="number">300</span>,<span class="number">3</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;  <span class="comment">// 否则是普通砖块</span></span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(i,<span class="number">300</span>,<span class="number">0</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 绘制砖块 G</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">420</span>; i &lt;= <span class="number">450</span>; i+=<span class="number">30</span>) &#123;</span><br><span class="line">                ObstacleList.add(<span class="keyword">new</span> Obstacle(i,<span class="number">240</span>,<span class="number">3</span>,<span class="keyword">this</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制水管</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">360</span>; i &lt;=<span class="number">600</span>; i += <span class="number">25</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">360</span>)&#123; <span class="comment">// 绘制水管最上层</span></span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">620</span>,i,<span class="number">5</span>,<span class="keyword">this</span>));</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">645</span>,i,<span class="number">6</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">620</span>,i,<span class="number">7</span>,<span class="keyword">this</span>));</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">645</span>,i,<span class="number">8</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 绘制第一关蘑菇敌人</span></span><br><span class="line">            enemyList.add(<span class="keyword">new</span> Enemy(<span class="number">580</span>,<span class="number">385</span>,<span class="keyword">true</span>,<span class="number">1</span>,<span class="keyword">this</span>));</span><br><span class="line">            <span class="comment">// 绘制第一关食人花敌人</span></span><br><span class="line">            enemyList.add(<span class="keyword">new</span> Enemy(<span class="number">635</span>,<span class="number">420</span>,<span class="keyword">true</span>,<span class="number">2</span>,<span class="number">328</span>,<span class="number">428</span>,<span class="keyword">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否是第二关</span></span><br><span class="line">        <span class="keyword">if</span> (sort == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="comment">// 绘制第二关地面</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">27</span>; i++)&#123;</span><br><span class="line">                ObstacleList.add(<span class="keyword">new</span> Obstacle(i*<span class="number">30</span>,<span class="number">420</span>,<span class="number">1</span>,<span class="keyword">this</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">120</span>; j+= <span class="number">30</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">27</span>; i++)&#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(i*<span class="number">30</span>,<span class="number">570</span>-j,<span class="number">2</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制水管和第一关一样只需要修改坐标</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i =  <span class="number">360</span>; i &lt;= <span class="number">600</span>; i += <span class="number">25</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">360</span>) &#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">60</span>,i,<span class="number">5</span>,<span class="keyword">this</span>));</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">85</span>,i,<span class="number">6</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">60</span>,i,<span class="number">7</span>,<span class="keyword">this</span>));</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">85</span>,i,<span class="number">8</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">330</span>; i &lt;=<span class="number">600</span>; i+= <span class="number">25</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">330</span>) &#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">620</span>,i,<span class="number">5</span>,<span class="keyword">this</span>));</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">645</span>,i,<span class="number">6</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">620</span>,i,<span class="number">7</span>,<span class="keyword">this</span>));</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">645</span>,i,<span class="number">8</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制砖块 C</span></span><br><span class="line">            ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">300</span>,<span class="number">330</span>,<span class="number">0</span>,<span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制砖块 B E G</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">270</span>; i &lt;= <span class="number">330</span>; i+=<span class="number">30</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">270</span> || i == <span class="number">330</span>) &#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(i,<span class="number">360</span>,<span class="number">0</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(i,<span class="number">360</span>,<span class="number">3</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制砖块 A D F H I</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">240</span>; i &lt;= <span class="number">360</span>; i += <span class="number">30</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">240</span> || i == <span class="number">360</span>)&#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(i,<span class="number">390</span>,<span class="number">0</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(i,<span class="number">390</span>,<span class="number">3</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制妨碍 1 砖块</span></span><br><span class="line">            ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">240</span>,<span class="number">300</span>,<span class="number">0</span>,<span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制 空 1 - 4 砖块</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">360</span>; i &lt;= <span class="number">540</span>; i += <span class="number">60</span>) &#123;</span><br><span class="line">                ObstacleList.add(<span class="keyword">new</span> Obstacle(i,<span class="number">270</span>,<span class="number">3</span>,<span class="keyword">this</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制第二关第一个食人花敌人</span></span><br><span class="line">            enemyList.add(<span class="keyword">new</span> Enemy(<span class="number">75</span>,<span class="number">420</span>,<span class="keyword">true</span>,<span class="number">2</span>,<span class="number">328</span>,<span class="number">418</span>,<span class="keyword">this</span>));</span><br><span class="line">            <span class="comment">// 绘制第二关第二个食人花敌人</span></span><br><span class="line">            enemyList.add(<span class="keyword">new</span> Enemy(<span class="number">635</span>,<span class="number">420</span>,<span class="keyword">true</span>,<span class="number">2</span>,<span class="number">298</span>,<span class="number">388</span>,<span class="keyword">this</span>));</span><br><span class="line">            <span class="comment">// 绘制第二关第一个蘑菇敌人</span></span><br><span class="line">            enemyList.add(<span class="keyword">new</span> Enemy(<span class="number">200</span>,<span class="number">385</span>,<span class="keyword">true</span>,<span class="number">1</span>,<span class="keyword">this</span>));</span><br><span class="line">            <span class="comment">// 绘制第二关第二个蘑菇敌人</span></span><br><span class="line">            enemyList.add(<span class="keyword">new</span> Enemy(<span class="number">500</span>,<span class="number">385</span>,<span class="keyword">true</span>,<span class="number">1</span>,<span class="keyword">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否是第三关</span></span><br><span class="line">        <span class="keyword">if</span> (sort == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">// 绘制第三关地面</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">27</span>; i++)&#123;</span><br><span class="line">                ObstacleList.add(<span class="keyword">new</span> Obstacle(i*<span class="number">30</span>,<span class="number">420</span>,<span class="number">1</span>,<span class="keyword">this</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">120</span>; j+= <span class="number">30</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">27</span>; i++)&#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(i*<span class="number">30</span>,<span class="number">570</span>-j,<span class="number">2</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制 A - O 砖块</span></span><br><span class="line">            <span class="keyword">int</span> temp = <span class="number">290</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">390</span>; i &gt;= <span class="number">270</span>; i -= <span class="number">30</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = temp; j &lt;= <span class="number">410</span>; j += <span class="number">30</span>) &#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(j,i,<span class="number">3</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                temp += <span class="number">30</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制 P - R 砖块</span></span><br><span class="line">            temp = <span class="number">60</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">390</span>; i &gt;= <span class="number">360</span>; i -= <span class="number">30</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = temp; j &lt;= <span class="number">90</span>; j += <span class="number">30</span>) &#123;</span><br><span class="line">                    ObstacleList.add(<span class="keyword">new</span> Obstacle(j,i,<span class="number">3</span>,<span class="keyword">this</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                temp += <span class="number">30</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制旗杆</span></span><br><span class="line">            Gan = StaticValue.Gan;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//绘制城堡</span></span><br><span class="line">            Tower = StaticValue.Tower;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 添加旗子到旗杆上 旗子的坐标 x515 y220</span></span><br><span class="line">            ObstacleList.add(<span class="keyword">new</span> Obstacle(<span class="number">515</span>,<span class="number">220</span>,<span class="number">4</span>,<span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绘制第三关蘑菇敌人</span></span><br><span class="line">            enemyList.add(<span class="keyword">new</span> Enemy(<span class="number">150</span>,<span class="number">385</span>,<span class="keyword">true</span>,<span class="number">1</span>,<span class="keyword">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 生成上面函数的 Get 方法 */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">getBgImage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bgImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sort;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成 ObstacleList 的 Get 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Obstacle&gt; <span class="title">getObstacleList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ObstacleList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成 城堡和旗杆的 Get 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">getGan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Gan;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">getTower</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Tower;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成 判断是否到达旗杆位置的 Set Get 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isReach</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isReach;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setReach</span><span class="params">(<span class="keyword">boolean</span> reach)</span> </span>&#123;</span><br><span class="line">        isReach = reach;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成 判断旗子是否落地 Set Get 方法</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isBase</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isBase;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBase</span><span class="params">(<span class="keyword">boolean</span> base)</span> </span>&#123;</span><br><span class="line">        isBase = base;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于存放我们所有的敌人 的 Get 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Enemy&gt; <span class="title">getEnemyList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> enemyList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeGame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft 类游戏地形生成算法</title>
      <link href="/2021/11/07/CodeGame_Technology_Minecratf_Terrain01/"/>
      <url>/2021/11/07/CodeGame_Technology_Minecratf_Terrain01/</url>
      
        <content type="html"><![CDATA[<h3 id="Minecraft-类游戏地形生成算法"><a href="#Minecraft-类游戏地形生成算法" class="headerlink" title="Minecraft 类游戏地形生成算法"></a>Minecraft 类游戏地形生成算法</h3><h4 id="噪声算法"><a href="#噪声算法" class="headerlink" title="噪声算法"></a>噪声算法</h4><blockquote><p><strong>为什么要有噪声？</strong></p><p> 随机数 <strong>VS</strong> 噪声</p></blockquote><p><strong>随机数</strong>：随机生成一个噪点不一的黑白图，但因为过于随机生成的图看起来特别不舒服。</p><p><img src="https://z3.ax1x.com/2021/11/07/IlB9QH.png"><br><img src="https://z3.ax1x.com/2021/11/07/IlBkwt.png"></p><hr><p> <strong>噪声</strong>：具有随机性、可哈希的、<strong>平滑性</strong>。</p><p> <img src="https://z3.ax1x.com/2021/11/07/IlBCyd.png"><br> <img src="https://z3.ax1x.com/2021/11/07/IlBVFf.png"></p><hr><h5 id="Value-噪声算法"><a href="#Value-噪声算法" class="headerlink" title="Value 噪声算法"></a>Value 噪声算法</h5><p><img src="https://z3.ax1x.com/2021/11/07/IlBZY8.png"></p><blockquote><p>Noise2D(pos) = lerp(顶点A,顶点B,s(t)),t∈[0,1]</p></blockquote><p><img src="https://z3.ax1x.com/2021/11/07/IlBa6J.png"></p><blockquote><ul><li>定义若干个顶点，且每个顶点含有一个<strong>随机值</strong>（以顶点坐标为参数，通过 Hash 运算得到）</li><li>顶点会对周围坐标产生影响，<strong>越靠近顶点，则越容易受该顶点的随机值影响</strong></li><li>某个坐标的噪声值 = 该坐标附近的所有顶点所造成的影响之和</li></ul></blockquote><hr><h5 id="Perlin-噪声-柏林噪声"><a href="#Perlin-噪声-柏林噪声" class="headerlink" title="Perlin 噪声 (柏林噪声)"></a>Perlin 噪声 (柏林噪声)</h5><p><img src="https://z3.ax1x.com/2021/11/07/IlBoAP.png"></p><p><img src="https://z3.ax1x.com/2021/11/07/IlBjns.png"></p><blockquote><ul><li>定义若干个顶点，且每个顶点含有一个<strong>随机向量</strong>（以顶点坐标作为参数，通过 Hash 运算）</li><li>顶点会对周围坐标产生影响，<strong>和顶点随机向量的夹角越小，则得到的值越大</strong></li><li>某个坐标的噪声值 = 该坐标附近的所有顶点所造成的影响值之和</li></ul></blockquote><hr><h5 id="Simplex-噪声-（高维制作常用）"><a href="#Simplex-噪声-（高维制作常用）" class="headerlink" title="Simplex 噪声 （高维制作常用）"></a>Simplex 噪声 （高维制作常用）</h5><p><img src="https://z3.ax1x.com/2021/11/07/IlDQ3D.png"></p><p><img src="https://z3.ax1x.com/2021/11/07/IlDlge.png"></p><blockquote><ul><li>Perlin 噪声在晶格结构上是正多胞，在 N 维下有 2^N 个顶点，一次噪声计算需要计算 2^N 个顶点的势能影响</li><li>Simplex 噪声在晶格结构上是单形，在 N 维下有 n+1 个顶点，一次噪声计算需要计算 n+1 个顶点的势能影响</li></ul></blockquote><p><img src="https://z3.ax1x.com/2021/11/07/IlDtEt.png"></p><hr><h4 id="地形生成流程"><a href="#地形生成流程" class="headerlink" title="地形生成流程"></a>地形生成流程</h4><p><img src="https://z3.ax1x.com/2021/11/07/IlDNUP.png"><br><img src="https://z3.ax1x.com/2021/11/07/IlDnN6.png"></p><hr><h5 id="生成地形高度图"><a href="#生成地形高度图" class="headerlink" title="生成地形高度图"></a>生成地形高度图</h5><p><img src="https://z3.ax1x.com/2021/11/07/IlD0gg.png"></p><blockquote><p>一般的地形生成中，地形高度场都是通过2D噪声（输入一个二维坐标，输出一个高度值）来生成的，但是一层噪声往往具有单调的特性（单一的频率Frequenccies 和 振幅Amplitudes），不能满足复杂的自然地形高度：地形可能会有大段连绵、高耸山地，也会有丘陵和蚀坑，更小点的有岩石块，甚至更小的鹅卵石块。</p><p> 为了模拟出这样的自然噪声特性，我们可以借鉴 分形噪声 的思想，通过使用不同的参数进行多几次不同参数的噪声计算，然后将结果叠加在一起。</p></blockquote><p><img src="https://z3.ax1x.com/2021/11/07/IlDsDs.png"><br><img src="https://z3.ax1x.com/2021/11/07/IlDybn.png"></p><p><strong>在程序的高度生成中，将使用三层2D噪声进行叠加，其中：</strong></p><blockquote><ul><li>第一层：振幅大，频率小，用于模拟平坦大陆的效果</li><li>第二层：振幅一般，频率一般，用于模拟山脉群的效果</li><li>第三层：振幅小，频率大，用于模拟小山丘、地面小凹凸的效果</li></ul><p><strong>Height(x,y)=128∗Noise2D(4x,4y)+64∗Noise2D(8x,8y)+32∗Noise2D(16x,16y)</strong></p></blockquote><hr><h5 id="生成生物群落"><a href="#生成生物群落" class="headerlink" title="生成生物群落"></a>生成生物群落</h5><p><img src="https://z3.ax1x.com/2021/11/07/IlD25V.png"></p><p><strong>生物群落（Biome）</strong>:</p><blockquote><p>实际上相当于一个区域的基本地形面貌，例如可分为草地、高原、雪原、沙漠、热带雨林等。影响生物群落的因素可以有很多，包含但不限于：温度、湿度、高度、距离大海的距离、魔力值。如何定义影响因素，完全取决于你的建模。</p><p>程序中的生物群落属性只取决于 温度（Temperature）、湿度（Humidity）两个因素，而这两个因素又是分别由不同种子设置的噪声计算得出：</p><hr><p>Temperature(x,y)=Noise2D(8x,8y)</p><p>Humidity(x,y)=Noise2D(8x,8y)</p><hr><p>程序将温度（Temperature）粗略分为热带、温带、寒带，湿度（Humidity）粗略分为干燥、湿润；然后也相应提供了六种不同的生物群落类型：草地、雪地、沙漠、热带雨林、温带树林、寒带针叶林。</p></blockquote><hr><h5 id="模拟雨水侵蚀、生成河流"><a href="#模拟雨水侵蚀、生成河流" class="headerlink" title="模拟雨水侵蚀、生成河流"></a>模拟雨水侵蚀、生成河流</h5><blockquote><p>DFS思想解决，模拟大雨滴落在地面上砸出一个个小坑的效果。</p><p>1.模拟一个雨滴，先定义雨滴的质量（比如5000）</p><p>2.随机砸下来在某个位置，并计算它周边的梯度（下降最急的地方）</p><p>3.沿着梯度移动雨滴，同时在原位置留下一定质量的水</p><p>4.继续追踪雨滴进行计算，当雨滴质量衰减到0时或者流进海平面时视为终止</p></blockquote><p><strong>对一定范围内随机模拟多个雨滴，得到的结果将是一个有侵蚀，甚至形成河流的地形</strong></p><p><img src="https://z3.ax1x.com/2021/11/07/IlDIKJ.png"></p><hr><h5 id="生成洞穴、裂谷"><a href="#生成洞穴、裂谷" class="headerlink" title="生成洞穴、裂谷"></a>生成洞穴、裂谷</h5><p><img src="https://z3.ax1x.com/2021/11/07/IlDor9.png"></p><p><strong>洞穴生成，实际上基于一层3D噪声（输入一个三维坐标，输出一个噪声值）来完成：</strong></p><blockquote><p>Cave(x,y,z)=Noise3D(16x,16y,16z)</p></blockquote><p><strong>然后再给定一个阈值，做如下判断：</strong></p><blockquote><ul><li>若噪声值高于阈值，则三维坐标对应方块挖空</li><li>若噪声值低于阈值，则三维坐标对应方块保留</li></ul></blockquote><p><strong>当阈值越小，那么更加容易产生洞穴且洞穴规模越来越大</strong><br><img src="https://z3.ax1x.com/2021/11/07/IlDq56.png"></p><blockquote><p>然而这种洞穴往往是不规则的，显然是不符合裂谷、峡谷这种带有狭长特点的中空地形，对于这类地形可另外使用伸缩变换后的3D坐标参数，此外还应当加入高度因素的影响（例如高度越低，意味着越接近地底，因此赋予更低的阈值），这样也可以形成具有一定深度的裂谷。</p></blockquote><hr><h5 id="生成植被"><a href="#生成植被" class="headerlink" title="生成植被"></a>生成植被</h5><p><img src="https://z3.ax1x.com/2021/11/07/IlDX8O.png"></p><p><strong>植被生成，则主要是在计算生成概率，它在DEMO程序中依赖四个因素（温度、湿度、噪声值、随机值）：</strong><br><img src="https://z3.ax1x.com/2021/11/07/IlDvxe.png"></p><p>其中，C1、C2、C3、C4 分别代表四个因素的权重，四个权重之和为1。</p><p><strong>植物生成概率依赖湿度、温度因素很合理，为什么要依赖噪声值、随机值呢？</strong></p><blockquote><ul><li>噪声值：让某些区域的植物分布足够密集，而另一些区域的植物分布可以稀疏甚至无分布，这些区域之间又可以做到植物密度的平滑衔接。</li><li>随机值：密集分布区域的植物几乎每一格都会满足生成概率条件，为了避免过于密集，融入一些随机值因素，让分布的树木之间至少有一定的间距。</li></ul></blockquote><hr><h5 id="放置树木（Bezier曲线）"><a href="#放置树木（Bezier曲线）" class="headerlink" title="放置树木（Bezier曲线）"></a>放置树木（Bezier曲线）</h5><blockquote><p>一旦满足生成概率条件，我们就可以根据当前方块的生物群落属性来决定放置什么样的植物（温带草、寒带草、蘑菇、花、寒带树、温带树、热带树…）。</p></blockquote><p><strong>其中树木的放置稍微复杂些，DEMO程序采取了程序化生成而非模板生成的方式来放置树木：</strong> </p><blockquote><p>1.用一个随机数给出树木的最大高度 hmax</p><p>2.还需要计算树干每层的树叶半径，这一步主要通过三阶Bezier曲线来计算。三阶Bezier曲线拥有4个控制点（2D坐标），将控制点的 x 视为树叶半径长，而 y 视为所处在的树干高度。由于树叶在最底层和最顶层都应该是没有树叶的，这样就可以将第一个控制点和最后一个控制点固定在 (0,0) 和 (hmax,0) ；而中间两个控制点则可以利用两个随机数作为不同的随机半径r1、r2，分别设置位于 (13hmax,r1) 和 (23hmax,r2)。</p><p>3.在每个单位高度上对贝塞尔曲线上一次采样，从而得到每层树叶的半径值（采样后四舍五入）。</p><hr><p>如图所示，当计算出一棵树的随机高度为5时，用于生成树叶的贝塞尔曲线的第一个控制点和第四个控制点分别为(0,0)和(5,0)。接着，中间两个控制点，通过随机数4.5、2.5确定坐标分别为(1.66667,4.5)、(3.33333,2.5)。当树需要计算每层树叶半径时，就可以逐层对该贝塞尔曲线进行采样，共采样6次，对应6层树叶半径，分别为(0,0)、(1,2.2)、(2,2.6)、(3,2.4)、(4,1.6)、(5,0)，四舍五入后即为 (0,0)、(1,2)、(2,3)、(3,2)、(4,2)、(5,0)。</p></blockquote><p><img src="https://z3.ax1x.com/2021/11/07/IlrpqA.png"></p><hr><h6 id="生成建筑"><a href="#生成建筑" class="headerlink" title="生成建筑"></a>生成建筑</h6><h6 id="生成发展域（元胞自动机模型）"><a href="#生成发展域（元胞自动机模型）" class="headerlink" title="生成发展域（元胞自动机模型）"></a>生成发展域（元胞自动机模型）</h6><p>基于元胞自动机模型。<br><strong>发展域可以理解成一个聚落的势力范围。而生成发展域的大概做法是：</strong></p><blockquote><p>1.在某个方块设置聚落的源点</p><p>2.进行若干轮迭代演化，来演绎聚落的发展（扩展势力范围），其中每轮发展需要根据温度、湿度、崎岖度（周围若干方块高低差）等因素来影响发展域的扩展方向，而且只扩张在势力范围邻接的方块。</p><hr><p>温度、湿度越适中、崎岖度越小的方块的代价更低，从而也更容易让聚落范围往这种方块的方向去扩展。</p></blockquote><p><strong>而在DEMO程序实现中，有以下细节：</strong></p><blockquote><ul><li>需要设置一个最高发展度（迭代次数）。</li><li>一个发展块设置为3<em>3个方块，这是因为相同大小的势力范围下，一次添加3</em>3个方块相比1个方块有着更少的迭代次数。</li><li>每一轮迭代都从评估队列里将代价最低的发展块加入聚落的势力范围，然后将与该发展块相邻的发展块加入队列中，并分别进行代价评估（即温度、湿度、崎岖度的综合考量）。</li></ul></blockquote><hr><blockquote><p>在《DwarfCorp》中，这种元胞自动机模型又可以用于模拟各文明在地图上的势力范围，让文明源点尽可能往条件宜人、土地肥沃且少冲突的区域扩张，通过若干轮迭代后，就能得出一条合理的文明势力边界</p></blockquote><p><img src="https://z3.ax1x.com/2021/11/07/IlrCVI.png"></p><hr><h6 id="放置建筑（DFS）"><a href="#放置建筑（DFS）" class="headerlink" title="放置建筑（DFS）"></a>放置建筑（DFS）</h6><blockquote><p>放置建筑，主要是基于DFS算法（在某种意义上，用高大上的名词来讲就是波函数坍缩），在前面生成好的发展域内通过DFS算法随机尝试放置预制建筑。</p></blockquote><p><strong>程序的大致实现：</strong></p><blockquote><p>1.在待放置位置队列添加源点位置</p><p>2.进行若干次循环，每次循环从队列中取出一个位置（以该位置为建筑中心点）尝试放置预制建筑。</p><p>  -若建筑即将放置的区域并不是发展域的子集，则尝试放置失败。</p><p>  -若建筑即将放置的区域是发展域的子集，则尝试放置成功，需将地形进行平整化后再放置建筑。接着，将该位置上下左右四个方向一定offset（需要融入一定的随机数，这样得到的建筑分布就不会过于工整）的位置添加进待放置位置队列。最后，移除发展域相应的区域方块记录（避免重复放置建筑）。</p></blockquote><p><img src="https://z3.ax1x.com/2021/11/07/IlrPat.png"></p><hr><h6 id="连接道路（A-寻路）"><a href="#连接道路（A-寻路）" class="headerlink" title="连接道路（A*寻路）"></a>连接道路（A*寻路）</h6><blockquote><p>连接道路，主要是基于A*寻路算法，将每个建筑的门口视为目标点，通过寻路算法对所有目标点两两连成一条道路。然而问题在于，道路连接不是简单的寻找最短路，还得模拟出人类聚落主干道、分支路的特性。</p></blockquote><p><img src="https://z3.ax1x.com/2021/11/07/IlriIP.png"></p><p><strong>程序的解决方式：</strong></p><blockquote><ul><li>只需简单地修改代价函数，使结点在道路上的开销降低</li></ul><hr><p>每次生成完一条道路，需记录道路位置信息，以方便下次寻路查询某个坐标是否位于道路中。</p><hr><p>这样，第一条道路虽然总是最短路，但是往后每次连接新道路时，这些寻路算法会相当大可能贴近或者连进原有道路，而不是直接连成最短路。若干条道路生成完毕后，就会显而易见看到干道、分支路的现象了。</p></blockquote><h5 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h5><p>######地形加载&amp;渲染</p><blockquote><p>有时候可能加载方块太多导致内存不足，需要实现实时自动加载周围区域和卸载过远的区域。</p></blockquote><p><strong>其次，Minecraft类地形中往往有大量方块被其它（上下左右前后共6个）方块所包围，从而不可视。而最初的渲染中，需要把所有存在的方块都渲染出来：</strong></p><p><img src="https://z3.ax1x.com/2021/11/07/IlrkPf.png"></p><p><strong>如果对每个方块做可视测试（即检测其上下左右前后是否满足至少有一处无方块），通过测试的才提交渲染队列，于是便有了下图：</strong></p><p><img src="https://z3.ax1x.com/2021/11/07/IlrAG8.png"></p><p><strong>为了解决边界问题（最外面的渲染边界的方块无法得知界外的方块信息），于是就采取了加载范围大于渲染范围的方案：</strong></p><blockquote><ul><li>块区（Chunk）：基本的地形加载/卸载单位，在X轴、Y轴长度为16，在Z轴（高度轴）长度为256，可容纳16<em>16</em>256共65536个方块</li><li>加载块区：计算出该块区每个位置的方块属性并存于内存</li><li>渲染块区：将该块区里所有应该渲染的方块提交渲染队列</li></ul><hr><p>以摄像机的位置为中心，将周围6<em>6个的块区作为需要加载的块区，而周围5</em>5个块区作为需要渲染的块区。这样渲染边界的方块也能得知界外方块（因为相邻的块区总是会被加载）的方块信息。</p></blockquote><p><img src="https://z3.ax1x.com/2021/11/07/IlrERS.png"></p><h6 id="数据存储-amp-查询"><a href="#数据存储-amp-查询" class="headerlink" title="数据存储&amp;查询"></a>数据存储&amp;查询</h6><blockquote><p>一般来说，存储Minecraft类地形数据并不需要记录太多信息，得益于噪声算法的可哈希性，几乎仅需要一个种子，因为绝大部分方块（正常方块）都可以通过地形生成算法流程便能计算得出方块ID属性，即 F(seed,position)=blockID。</p><p>然而对于被玩家破坏、修改、新增而导致的方块ID属性产生变化，这时候就需要特别额外存储了。</p><p>此外，在查询时可以对坐标压缩/解压：Vector3D &lt;=&gt; uint64 (28 bit,28 bit,8 bit)，Z轴高度由于最高为256，因此最多占8位。</p></blockquote><h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><blockquote><p> MC生物群落的生成用的是分层采样的算法，可以精确的知道每一个方块的生物群落类型。在分层采样过程中还会决定河流一些特殊地形的生成。</p><p> MC地形的生成是用到了噪声，而且不止有柏林噪声，但不是直接用噪声去生成高度的，而是生物群落决定了基础高度，而噪声只是进行平滑的作用。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CodeGame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 超级玛丽常量类</title>
      <link href="/2021/11/06/CodeGame_Java_SuperMary_Test02/"/>
      <url>/2021/11/06/CodeGame_Java_SuperMary_Test02/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.arvin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  常量类 (初始化图片)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticValue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  定义所需的所有变量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage BackgroundImage_Noe = <span class="keyword">null</span>; <span class="comment">// 背景 1</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage BackgroundImage_Two = <span class="keyword">null</span>; <span class="comment">// 背景 2</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage Jump_Left = <span class="keyword">null</span>;   <span class="comment">// 马里奥向左跳</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage Jump_Right = <span class="keyword">null</span>; <span class="comment">// 马里奥向右跳</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage Stand_Left = <span class="keyword">null</span>;  <span class="comment">// 马里奥向左站立</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage Stand_Right = <span class="keyword">null</span>; <span class="comment">// 马里奥向右站立</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage Tower = <span class="keyword">null</span>;   <span class="comment">// 城堡</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BufferedImage Gan = <span class="keyword">null</span>; <span class="comment">// 旗杆</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 障碍物 因为障碍物很多 所以我们要创建一个列表 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;BufferedImage&gt; Obstacle = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 马里奥向左跑 是两张图片所以也要创建一个列表 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;BufferedImage&gt; Run_Left = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;BufferedImage&gt; Run_Right = <span class="keyword">new</span> ArrayList&lt;&gt;(); <span class="comment">// 马里奥向右边跑</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 蘑菇敌人 两张行动图像一张死亡图像所以也要创建一个列表 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;BufferedImage&gt; Mogu = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 食人花敌人 两种图片一个张嘴图一个闭嘴图所以也要创建一个列表 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;BufferedImage&gt; Flower = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 路径的前缀 方便后续调用 定义一个Path 我们通过绝对路径来获取图片的路径我们除了名称外前缀都是一样的所以我们把它定义成一个变量 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String Path = System.getProperty(<span class="string">&quot;user.dir&quot;</span>) + <span class="string">&quot;/src/images/&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 初始化方法 */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加载背景图片 try捕获 read 异常</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BackgroundImage_Noe = ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;bg.png&quot;</span>));      <span class="comment">//  背景 1</span></span><br><span class="line">            BackgroundImage_Two = ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;bg2.png&quot;</span>));     <span class="comment">//  背景 2、</span></span><br><span class="line">            Jump_Left = ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;s_mario_jump1_L.png&quot;</span>));   <span class="comment">//  马里奥向左跳跃</span></span><br><span class="line">            Jump_Right = ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;s_mario_jump1_R.png&quot;</span>));  <span class="comment">//  马里奥向右跳跃</span></span><br><span class="line">            Stand_Left = ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;s_mario_stand_L.png&quot;</span>));  <span class="comment">//  马里奥向左站立</span></span><br><span class="line">            Stand_Right = ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;s_mario_stand_R.png&quot;</span>)); <span class="comment">//  马里奥向右站立</span></span><br><span class="line">            Tower = ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;tower.png&quot;</span>));                 <span class="comment">//  加载城堡</span></span><br><span class="line">            Gan = ImageIO.read(<span class="keyword">new</span> File(Path +<span class="string">&quot;gan.png&quot;</span>));                      <span class="comment">//  加载旗杆</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line">            exception.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 加载障碍物 try捕获 read 异常 */</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Obstacle.add(ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;brick.png&quot;</span>)));       <span class="comment">// 首先加载砖块一种是可破坏的一种是不可破坏的</span></span><br><span class="line">            Obstacle.add(ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;soil_up.png&quot;</span>)));     <span class="comment">// 加载地面(上地面) 分为两种一个是我们的上地面一个是我们的下地面</span></span><br><span class="line">            Obstacle.add(ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;soil_base.png&quot;</span>)));   <span class="comment">// 加载下地面</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line">            exception.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 加载不可破坏的砖块和旗子 try捕获 read 异常 */</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Obstacle.add(ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;brick2.png&quot;</span>)));  <span class="comment">//  不可破坏砖块</span></span><br><span class="line">            Obstacle.add(ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;flag.png&quot;</span>)));    <span class="comment">//  旗子障碍物</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line">            exception.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 加载水管 因为是四个图像所以我们采用 For 循环处理 try捕获 read 异常 */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Obstacle.add(ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;pipe&quot;</span> + i + <span class="string">&quot;.png&quot;</span>)));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 加载马里奥向左跑图片 因为有两张所以我们要采用 For 循环 try捕获 read 异常 */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Run_Left.add(ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;s_mario_run&quot;</span> + i + <span class="string">&quot;_L.png&quot;</span>)));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 加载马里奥向右跑图片 因为有两张所以我们和加载马里奥向左跑图片一样 */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Run_Right.add(ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;s_mario_run&quot;</span> + i + <span class="string">&quot;_R.png&quot;</span>)));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 加载蘑菇敌人 因为是三张图片所以我们仍然通过一个 For 循环 */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Mogu.add(ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;fungus&quot;</span> + i + <span class="string">&quot;.png&quot;</span>)));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 加载食人花敌人 因为是两张图片所以我们仍然通过一个 For 循环 加载*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Flower.add(ImageIO.read(<span class="keyword">new</span> File(Path + <span class="string">&quot;flower1.&quot;</span> + i + <span class="string">&quot;.png&quot;</span>)));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException exception) &#123;</span><br><span class="line">                exception.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeGame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 创建窗口</title>
      <link href="/2021/11/05/CodeGame_Java_SuperMary_Test01/"/>
      <url>/2021/11/05/CodeGame_Java_SuperMary_Test01/</url>
      
        <content type="html"><![CDATA[<h2 id="Java-窗口绘制"><a href="#Java-窗口绘制" class="headerlink" title="Java 窗口绘制"></a>Java 窗口绘制</h2><blockquote><p>创建窗口我们需要继承 JFrame 类</p><p>向窗口对象添加键盘监听器 需要该类实现 KeyListener 接口 并重写抽象方法</p></blockquote><h3 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.arvin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  窗口框架类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WindowsFrame</span>  <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">KeyListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 空参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WindowsFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口的大小为 800 * 600</span></span><br><span class="line">        <span class="keyword">this</span>.setSize(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口居中显示</span></span><br><span class="line">        <span class="keyword">this</span>.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口的可见性</span></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建点击窗口上的关闭键，结束程序</span></span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口大小不可变</span></span><br><span class="line">        <span class="keyword">this</span>.setResizable(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向窗口对象添加键盘监听器 需要该类实现 KeyListener 接口 并重写抽象方法</span></span><br><span class="line">        <span class="keyword">this</span>.addKeyListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口名称</span></span><br><span class="line">        <span class="keyword">this</span>.setTitle(<span class="string">&quot;超级玛丽&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  Main 主函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 WindowsFrame 的对象</span></span><br><span class="line">        WindowsFrame windowsFrame = <span class="keyword">new</span> WindowsFrame();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  KeyListener并重写抽象方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeGame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Login Page 设计演示01</title>
      <link href="/2021/11/01/design_LoginPage_2021_11_01/"/>
      <url>/2021/11/01/design_LoginPage_2021_11_01/</url>
      
        <content type="html"><![CDATA[<p><strong>分享大家一个好看的 Login Page 代码</strong></p><hr><h3 id="演示图"><a href="#演示图" class="headerlink" title="演示图"></a>演示图</h3><p><img src="https://z3.ax1x.com/2021/11/01/IpzNu9.jpg"><br><img src="https://z3.ax1x.com/2021/11/01/IpzUBR.jpg"></p><h3 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    Developer: @Arvin</span></span><br><span class="line"><span class="comment">    Explain: Login Page</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#A7CFFF</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">H1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">38px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">H1</span>,<span class="selector-tag">H2</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#1F2029</span>;</span></span><br><span class="line"><span class="css">            user-select: none;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.switch</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#FCFBFA</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">170px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: -<span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">73%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 选择同级后最近元素 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="selector-id">#change</span><span class="selector-pseudo">:checked</span>+<span class="selector-tag">label</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#change</span><span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:checked</span>)+<span class="selector-tag">label</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#ff5f99</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#FCFBFA</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">0</span>; <span class="comment">/* Padding 方便文字垂直居中显示 @Arvin */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: -<span class="number">140px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">82%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 页面旋转模块 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.turn</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">450px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">8%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">perspective</span>: <span class="number">800px</span>; <span class="comment">/* 旋转时候的透视效果 @Arvin */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: -<span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.over</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transition</span>: all <span class="number">1.6s</span> ease; <span class="comment">/* 旋转的持续时间 ease 是慢快慢 @Arvin */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#change</span><span class="selector-pseudo">:checked</span></span></span><br><span class="line"><span class="css">        ~</span></span><br><span class="line"><span class="css">        <span class="selector-class">.turn</span> <span class="selector-class">.over</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">form</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#FCFBFA</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.sign</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#4E495D</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">70%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">500</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#ff5f99</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">78</span>, <span class="number">73</span>, <span class="number">79</span>, .<span class="number">5</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1px</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 选择 Class 为 Login 的子元素中的前三个 input @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.login</span> <span class="selector-tag">input</span><span class="selector-pseudo">:nth-child</span>(-n+<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.btn</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#981E61</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#FCFBFA</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 旋转开关 @Arvin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;switch&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">H2</span>&gt;</span>没有/已有账户？<span class="tag">&lt;/<span class="name">H2</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;change&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切 换<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;turn&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;over&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">H1</span>&gt;</span>欢迎回来（＾－＾）<span class="tag">&lt;/<span class="name">H1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;passwirld&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登 录&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sign&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">H1</span>&gt;</span>加入我们（＾－＾）<span class="tag">&lt;/<span class="name">H1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;邮箱&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;passwirld&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;passwirld&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;确认密码&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 樱花效果 来源于网上开源代码 @Arvin --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- partial:index.partial.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;sakura&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- sakura shader --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;sakura_point_vsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_vertex&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  uniform mat4 uProjection;</span></span><br><span class="line"><span class="javascript">  uniform mat4 uModelview;</span></span><br><span class="line"><span class="javascript">  uniform vec3 uResolution;</span></span><br><span class="line"><span class="javascript">  uniform vec3 uOffset;</span></span><br><span class="line"><span class="javascript">  uniform vec3 uDOF;  <span class="comment">//x:focus distance, y:focus radius, z:max radius</span></span></span><br><span class="line"><span class="javascript">  uniform vec3 uFade; <span class="comment">//x:start distance, y:half distance, z:near fade start</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  attribute vec3 aPosition;</span></span><br><span class="line"><span class="javascript">  attribute vec3 aEuler;</span></span><br><span class="line"><span class="javascript">  attribute vec2 aMisc; <span class="comment">//x:size, y:fade</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec3 pposition;</span></span><br><span class="line"><span class="javascript">  varying float psize;</span></span><br><span class="line"><span class="javascript">  varying float palpha;</span></span><br><span class="line"><span class="javascript">  varying float pdist;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="comment">//varying mat3 rotMat;</span></span></span><br><span class="line"><span class="javascript">  varying vec3 normX;</span></span><br><span class="line"><span class="javascript">  varying vec3 normY;</span></span><br><span class="line"><span class="javascript">  varying vec3 normZ;</span></span><br><span class="line"><span class="javascript">  varying vec3 normal;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying float diffuse;</span></span><br><span class="line"><span class="javascript">  varying float specular;</span></span><br><span class="line"><span class="javascript">  varying float rstop;</span></span><br><span class="line"><span class="javascript">  varying float distancefade;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// Projection is based on vertical angle</span></span></span><br><span class="line"><span class="javascript">      vec4 pos = uModelview * vec4(aPosition + uOffset, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      gl_Position = uProjection * pos;</span></span><br><span class="line"><span class="javascript">      gl_PointSize = aMisc.x * uProjection[<span class="number">1</span>][<span class="number">1</span>] / -pos.z * uResolution.y * <span class="number">0.5</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      pposition = pos.xyz;</span></span><br><span class="line"><span class="javascript">      psize = aMisc.x;</span></span><br><span class="line"><span class="javascript">      pdist = length(pos.xyz);</span></span><br><span class="line"><span class="javascript">      palpha = smoothstep(<span class="number">0.0</span>, <span class="number">1.0</span>, (pdist - <span class="number">0.1</span>) / uFade.z);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      vec3 elrsn = sin(aEuler);</span></span><br><span class="line"><span class="javascript">      vec3 elrcs = cos(aEuler);</span></span><br><span class="line"><span class="javascript">      mat3 rotx = mat3(</span></span><br><span class="line"><span class="javascript">          <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="javascript">          <span class="number">0.0</span>, elrcs.x, elrsn.x,</span></span><br><span class="line"><span class="javascript">          <span class="number">0.0</span>, -elrsn.x, elrcs.x</span></span><br><span class="line"><span class="javascript">      );</span></span><br><span class="line"><span class="javascript">      mat3 roty = mat3(</span></span><br><span class="line"><span class="javascript">          elrcs.y, <span class="number">0.0</span>, -elrsn.y,</span></span><br><span class="line"><span class="javascript">          <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="javascript">          elrsn.y, <span class="number">0.0</span>, elrcs.y</span></span><br><span class="line"><span class="javascript">      );</span></span><br><span class="line"><span class="javascript">      mat3 rotz = mat3(</span></span><br><span class="line"><span class="javascript">          elrcs.z, elrsn.z, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="javascript">          -elrsn.z, elrcs.z, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="javascript">          <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span></span></span><br><span class="line"><span class="javascript">      );</span></span><br><span class="line"><span class="javascript">      mat3 rotmat = rotx * roty * rotz;</span></span><br><span class="line"><span class="javascript">      normal = rotmat[<span class="number">2</span>];</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      mat3 trrotm = mat3(</span></span><br><span class="line"><span class="javascript">          rotmat[<span class="number">0</span>][<span class="number">0</span>], rotmat[<span class="number">1</span>][<span class="number">0</span>], rotmat[<span class="number">2</span>][<span class="number">0</span>],</span></span><br><span class="line"><span class="javascript">          rotmat[<span class="number">0</span>][<span class="number">1</span>], rotmat[<span class="number">1</span>][<span class="number">1</span>], rotmat[<span class="number">2</span>][<span class="number">1</span>],</span></span><br><span class="line"><span class="javascript">          rotmat[<span class="number">0</span>][<span class="number">2</span>], rotmat[<span class="number">1</span>][<span class="number">2</span>], rotmat[<span class="number">2</span>][<span class="number">2</span>]</span></span><br><span class="line"><span class="javascript">      );</span></span><br><span class="line"><span class="javascript">      normX = trrotm[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">      normY = trrotm[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">      normZ = trrotm[<span class="number">2</span>];</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> vec3 lit = vec3(<span class="number">0.6917144638660746</span>, <span class="number">0.6917144638660746</span>, -<span class="number">0.20751433915982237</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      float tmpdfs = dot(lit, normal);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(tmpdfs &lt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="javascript">          normal = -normal;</span></span><br><span class="line"><span class="javascript">          tmpdfs = dot(lit, normal);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">      diffuse = <span class="number">0.4</span> + tmpdfs;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      vec3 eyev = normalize(-pos.xyz);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(dot(eyev, normal) &gt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="javascript">          vec3 hv = normalize(eyev + lit);</span></span><br><span class="line"><span class="javascript">          specular = pow(max(dot(hv, normal), <span class="number">0.0</span>), <span class="number">20.0</span>);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          specular = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, <span class="number">0.0</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      rstop = pow(rstop, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">//-0.69315 = ln(0.5)</span></span></span><br><span class="line"><span class="javascript">      distancefade = min(<span class="number">1.0</span>, exp((uFade.x - pdist) * <span class="number">0.69315</span> / uFade.y));</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;sakura_point_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  uniform vec3 uDOF;  <span class="comment">//x:focus distance, y:focus radius, z:max radius</span></span></span><br><span class="line"><span class="javascript">  uniform vec3 uFade; <span class="comment">//x:start distance, y:half distance, z:near fade start</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> vec3 fadeCol = vec3(<span class="number">0.08</span>, <span class="number">0.03</span>, <span class="number">0.06</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec3 pposition;</span></span><br><span class="line"><span class="javascript">  varying float psize;</span></span><br><span class="line"><span class="javascript">  varying float palpha;</span></span><br><span class="line"><span class="javascript">  varying float pdist;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="comment">//varying mat3 rotMat;</span></span></span><br><span class="line"><span class="javascript">  varying vec3 normX;</span></span><br><span class="line"><span class="javascript">  varying vec3 normY;</span></span><br><span class="line"><span class="javascript">  varying vec3 normZ;</span></span><br><span class="line"><span class="javascript">  varying vec3 normal;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying float diffuse;</span></span><br><span class="line"><span class="javascript">  varying float specular;</span></span><br><span class="line"><span class="javascript">  varying float rstop;</span></span><br><span class="line"><span class="javascript">  varying float distancefade;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  float <span class="function"><span class="title">ellipse</span>(<span class="params">vec2 p, vec2 o, vec2 r</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec2 lp = (p - o) / r;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> length(lp) - <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec3 p = vec3(gl_PointCoord - vec2(<span class="number">0.5</span>, <span class="number">0.5</span>), <span class="number">0.0</span>) * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">      vec3 d = vec3(<span class="number">0.0</span>, <span class="number">0.0</span>, -<span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      float nd = normZ.z; <span class="comment">//dot(-normZ, d);</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(abs(nd) &lt; <span class="number">0.0001</span>) discard;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      float np = dot(normZ, p);</span></span><br><span class="line"><span class="javascript">      vec3 tp = p + d * np / nd;</span></span><br><span class="line"><span class="javascript">      vec2 coord = vec2(dot(normX, tp), dot(normY, tp));</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="comment">//angle = 15 degree</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> float flwrsn = <span class="number">0.258819045102521</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> float flwrcs = <span class="number">0.965925826289068</span>;</span></span><br><span class="line"><span class="javascript">      mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);</span></span><br><span class="line"><span class="javascript">      vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      float r;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(flwrp.x &lt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="javascript">          r = ellipse(flwrp, vec2(<span class="number">0.065</span>, <span class="number">0.024</span>) * <span class="number">0.5</span>, vec2(<span class="number">0.36</span>, <span class="number">0.96</span>) * <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          r = ellipse(flwrp, vec2(<span class="number">0.065</span>, <span class="number">0.024</span>) * <span class="number">0.5</span>, vec2(<span class="number">0.58</span>, <span class="number">0.96</span>) * <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(r &gt; rstop) discard;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      vec3 col = mix(vec3(<span class="number">1.0</span>, <span class="number">0.8</span>, <span class="number">0.75</span>), vec3(<span class="number">1.0</span>, <span class="number">0.9</span>, <span class="number">0.87</span>), r);</span></span><br><span class="line"><span class="javascript">      float grady = mix(<span class="number">0.0</span>, <span class="number">1.0</span>, pow(coord.y * <span class="number">0.5</span> + <span class="number">0.5</span>, <span class="number">0.35</span>));</span></span><br><span class="line"><span class="javascript">      col *= vec3(<span class="number">1.0</span>, grady, grady);</span></span><br><span class="line"><span class="javascript">      col *= mix(<span class="number">0.8</span>, <span class="number">1.0</span>, pow(abs(coord.x), <span class="number">0.3</span>));</span></span><br><span class="line"><span class="javascript">      col = col * diffuse + specular;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      col = mix(fadeCol, col, distancefade);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      float alpha = (rstop &gt; <span class="number">0.001</span>)? (<span class="number">0.5</span> - r / (rstop * <span class="number">2.0</span>)) : <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">      alpha = smoothstep(<span class="number">0.0</span>, <span class="number">1.0</span>, alpha) * palpha;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      gl_FragColor = vec4(col * <span class="number">0.5</span>, alpha);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- effects --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_common_vsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_vertex&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  uniform vec3 uResolution;</span></span><br><span class="line"><span class="javascript">  attribute vec2 aPosition;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      gl_Position = vec4(aPosition, <span class="number">0.0</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      texCoord = aPosition.xy * <span class="number">0.5</span> + vec2(<span class="number">0.5</span>, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      screenCoord = aPosition.xy * vec2(uResolution.z, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;bg_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  uniform vec2 uTimes;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec3 col;</span></span><br><span class="line"><span class="javascript">      float c;</span></span><br><span class="line"><span class="javascript">      vec2 tmpv = texCoord * vec2(<span class="number">0.8</span>, <span class="number">1.0</span>) - vec2(<span class="number">0.95</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      c = exp(-pow(length(tmpv) * <span class="number">1.8</span>, <span class="number">2.0</span>));</span></span><br><span class="line"><span class="javascript">      col = mix(vec3(<span class="number">0.02</span>, <span class="number">0.0</span>, <span class="number">0.03</span>), vec3(<span class="number">0.96</span>, <span class="number">0.98</span>, <span class="number">1.0</span>) * <span class="number">1.5</span>, c);</span></span><br><span class="line"><span class="javascript">      gl_FragColor = vec4(col * <span class="number">0.5</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_brightbuf_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript">  uniform sampler2D uSrc;</span></span><br><span class="line"><span class="javascript">  uniform vec2 uDelta;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec4 col = texture2D(uSrc, texCoord);</span></span><br><span class="line"><span class="javascript">      gl_FragColor = vec4(col.rgb * <span class="number">2.0</span> - vec3(<span class="number">0.5</span>), <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_dirblur_r4_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript">  uniform sampler2D uSrc;</span></span><br><span class="line"><span class="javascript">  uniform vec2 uDelta;</span></span><br><span class="line"><span class="javascript">  uniform vec4 uBlurDir; <span class="comment">//dir(x, y), stride(z, w)</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec4 col = texture2D(uSrc, texCoord);</span></span><br><span class="line"><span class="javascript">      col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);</span></span><br><span class="line"><span class="javascript">      col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);</span></span><br><span class="line"><span class="javascript">      col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);</span></span><br><span class="line"><span class="javascript">      col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);</span></span><br><span class="line"><span class="javascript">      gl_FragColor = col / <span class="number">5.0</span>;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- effect fragment shader template --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_common_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript">  uniform sampler2D uSrc;</span></span><br><span class="line"><span class="javascript">  uniform vec2 uDelta;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      gl_FragColor = texture2D(uSrc, texCoord);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- post processing --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;pp_final_vsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_vertex&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  uniform vec3 uResolution;</span></span><br><span class="line"><span class="javascript">  attribute vec2 aPosition;</span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      gl_Position = vec4(aPosition, <span class="number">0.0</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      texCoord = aPosition.xy * <span class="number">0.5</span> + vec2(<span class="number">0.5</span>, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      screenCoord = aPosition.xy * vec2(uResolution.z, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;pp_final_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript">  uniform sampler2D uSrc;</span></span><br><span class="line"><span class="javascript">  uniform sampler2D uBloom;</span></span><br><span class="line"><span class="javascript">  uniform vec2 uDelta;</span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec4 srccol = texture2D(uSrc, texCoord) * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">      vec4 bloomcol = texture2D(uBloom, texCoord);</span></span><br><span class="line"><span class="javascript">      vec4 col;</span></span><br><span class="line"><span class="javascript">      col = srccol + bloomcol * (vec4(<span class="number">1.0</span>) + srccol);</span></span><br><span class="line"><span class="javascript">      col *= smoothstep(<span class="number">1.0</span>, <span class="number">0.0</span>, pow(length((texCoord - vec2(<span class="number">0.5</span>)) * <span class="number">2.0</span>), <span class="number">1.2</span>) * <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      col = pow(col, vec4(<span class="number">0.45454545454545</span>)); <span class="comment">//(1.0 / 2.2)</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      gl_FragColor = vec4(col.rgb, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      gl_FragColor.a = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- partial --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// Utilities</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> Vector3 = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> Matrix44 = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    Vector3.create = <span class="function"><span class="keyword">function</span>(<span class="params">x, y, z</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;<span class="string">&#x27;x&#x27;</span>:x, <span class="string">&#x27;y&#x27;</span>:y, <span class="string">&#x27;z&#x27;</span>:z&#125;;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Vector3.dot = <span class="function"><span class="keyword">function</span> (<span class="params">v0, v1</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Vector3.cross = <span class="function"><span class="keyword">function</span> (<span class="params">v, v0, v1</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        v.x = v0.y * v1.z - v0.z * v1.y;</span></span><br><span class="line"><span class="javascript">        v.y = v0.z * v1.x - v0.x * v1.z;</span></span><br><span class="line"><span class="javascript">        v.z = v0.x * v1.y - v0.y * v1.x;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Vector3.normalize = <span class="function"><span class="keyword">function</span> (<span class="params">v</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> l = v.x * v.x + v.y * v.y + v.z * v.z;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(l &gt; <span class="number">0.00001</span>) &#123;</span></span><br><span class="line"><span class="javascript">            l = <span class="number">1.0</span> / <span class="built_in">Math</span>.sqrt(l);</span></span><br><span class="line"><span class="javascript">            v.x *= l;</span></span><br><span class="line"><span class="javascript">            v.y *= l;</span></span><br><span class="line"><span class="javascript">            v.z *= l;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Vector3.arrayForm = <span class="function"><span class="keyword">function</span>(<span class="params">v</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(v.array) &#123;</span></span><br><span class="line"><span class="javascript">            v.array[<span class="number">0</span>] = v.x;</span></span><br><span class="line"><span class="javascript">            v.array[<span class="number">1</span>] = v.y;</span></span><br><span class="line"><span class="javascript">            v.array[<span class="number">2</span>] = v.z;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            v.array = <span class="keyword">new</span> <span class="built_in">Float32Array</span>([v.x, v.y, v.z]);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v.array;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Matrix44.createIdentity = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Float32Array</span>([<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>]);</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Matrix44.loadProjection = <span class="function"><span class="keyword">function</span> (<span class="params">m, aspect, vdeg, near, far</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> h = near * <span class="built_in">Math</span>.tan(vdeg * <span class="built_in">Math</span>.PI / <span class="number">180.0</span> * <span class="number">0.5</span>) * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> w = h * aspect;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">0</span>] = <span class="number">2.0</span> * near / w;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">1</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">2</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">3</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">4</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">5</span>] = <span class="number">2.0</span> * near / h;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">6</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">7</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">8</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">9</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">10</span>] = -(far + near) / (far - near);</span></span><br><span class="line"><span class="javascript">        m[<span class="number">11</span>] = -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">12</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">13</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">14</span>] = -<span class="number">2.0</span> * far * near / (far - near);</span></span><br><span class="line"><span class="javascript">        m[<span class="number">15</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Matrix44.loadLookAt = <span class="function"><span class="keyword">function</span> (<span class="params">m, vpos, vlook, vup</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);</span></span><br><span class="line"><span class="javascript">        Vector3.normalize(frontv);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> sidev = Vector3.create(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="javascript">        Vector3.cross(sidev, vup, frontv);</span></span><br><span class="line"><span class="javascript">        Vector3.normalize(sidev);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> topv = Vector3.create(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="javascript">        Vector3.cross(topv, frontv, sidev);</span></span><br><span class="line"><span class="javascript">        Vector3.normalize(topv);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">0</span>] = sidev.x;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">1</span>] = topv.x;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">2</span>] = frontv.x;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">3</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">4</span>] = sidev.y;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">5</span>] = topv.y;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">6</span>] = frontv.y;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">7</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">8</span>] = sidev.z;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">9</span>] = topv.z;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">10</span>] = frontv.z;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">11</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">12</span>] = -(vpos.x * m[<span class="number">0</span>] + vpos.y * m[<span class="number">4</span>] + vpos.z * m[<span class="number">8</span>]);</span></span><br><span class="line"><span class="javascript">        m[<span class="number">13</span>] = -(vpos.x * m[<span class="number">1</span>] + vpos.y * m[<span class="number">5</span>] + vpos.z * m[<span class="number">9</span>]);</span></span><br><span class="line"><span class="javascript">        m[<span class="number">14</span>] = -(vpos.x * m[<span class="number">2</span>] + vpos.y * m[<span class="number">6</span>] + vpos.z * m[<span class="number">10</span>]);</span></span><br><span class="line"><span class="javascript">        m[<span class="number">15</span>] = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> timeInfo = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;start&#x27;</span>:<span class="number">0</span>, <span class="string">&#x27;prev&#x27;</span>:<span class="number">0</span>, <span class="comment">// Date</span></span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;delta&#x27;</span>:<span class="number">0</span>, <span class="string">&#x27;elapsed&#x27;</span>:<span class="number">0</span> <span class="comment">// Number(sec)</span></span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> gl;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> renderSpec = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;width&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;height&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;aspect&#x27;</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;array&#x27;</span>:<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">3</span>),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;halfWidth&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;halfHeight&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;halfArray&#x27;</span>:<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">3</span>)</span></span><br><span class="line"><span class="javascript">        <span class="comment">// and some render targets. see setViewport()</span></span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    renderSpec.setSize = <span class="function"><span class="keyword">function</span>(<span class="params">w, h</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        renderSpec.width = w;</span></span><br><span class="line"><span class="javascript">        renderSpec.height = h;</span></span><br><span class="line"><span class="javascript">        renderSpec.aspect = renderSpec.width / renderSpec.height;</span></span><br><span class="line"><span class="javascript">        renderSpec.array[<span class="number">0</span>] = renderSpec.width;</span></span><br><span class="line"><span class="javascript">        renderSpec.array[<span class="number">1</span>] = renderSpec.height;</span></span><br><span class="line"><span class="javascript">        renderSpec.array[<span class="number">2</span>] = renderSpec.aspect;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        renderSpec.halfWidth = <span class="built_in">Math</span>.floor(w / <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">        renderSpec.halfHeight = <span class="built_in">Math</span>.floor(h / <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">        renderSpec.halfArray[<span class="number">0</span>] = renderSpec.halfWidth;</span></span><br><span class="line"><span class="javascript">        renderSpec.halfArray[<span class="number">1</span>] = renderSpec.halfHeight;</span></span><br><span class="line"><span class="javascript">        renderSpec.halfArray[<span class="number">2</span>] = renderSpec.halfWidth / renderSpec.halfHeight;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">deleteRenderTarget</span>(<span class="params">rt</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        gl.deleteFramebuffer(rt.frameBuffer);</span></span><br><span class="line"><span class="javascript">        gl.deleteRenderbuffer(rt.renderBuffer);</span></span><br><span class="line"><span class="javascript">        gl.deleteTexture(rt.texture);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createRenderTarget</span>(<span class="params">w, h</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ret = &#123;</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;width&#x27;</span>:w,</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;height&#x27;</span>:h,</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;sizeArray&#x27;</span>:<span class="keyword">new</span> <span class="built_in">Float32Array</span>([w, h, w / h]),</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;dtxArray&#x27;</span>:<span class="keyword">new</span> <span class="built_in">Float32Array</span>([<span class="number">1.0</span> / w, <span class="number">1.0</span> / h])</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">        ret.frameBuffer = gl.createFramebuffer();</span></span><br><span class="line"><span class="javascript">        ret.renderBuffer = gl.createRenderbuffer();</span></span><br><span class="line"><span class="javascript">        ret.texture = gl.createTexture();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindTexture(gl.TEXTURE_2D, ret.texture);</span></span><br><span class="line"><span class="javascript">        gl.texImage2D(gl.TEXTURE_2D, <span class="number">0</span>, gl.RGBA, w, h, <span class="number">0</span>, gl.RGBA, gl.UNSIGNED_BYTE, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);</span></span><br><span class="line"><span class="javascript">        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);</span></span><br><span class="line"><span class="javascript">        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);</span></span><br><span class="line"><span class="javascript">        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);</span></span><br><span class="line"><span class="javascript">        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);</span></span><br><span class="line"><span class="javascript">        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);</span></span><br><span class="line"><span class="javascript">        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindTexture(gl.TEXTURE_2D, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        gl.bindRenderbuffer(gl.RENDERBUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        gl.bindFramebuffer(gl.FRAMEBUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> ret;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">compileShader</span>(<span class="params">shtype, shsrc</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> retsh = gl.createShader(shtype);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.shaderSource(retsh, shsrc);</span></span><br><span class="line"><span class="javascript">        gl.compileShader(retsh);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> errlog = gl.getShaderInfoLog(retsh);</span></span><br><span class="line"><span class="javascript">            gl.deleteShader(retsh);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.error(errlog);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> retsh;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createShader</span>(<span class="params">vtxsrc, frgsrc, uniformlist, attrlist</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(vsh == <span class="literal">null</span> || fsh == <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> prog = gl.createProgram();</span></span><br><span class="line"><span class="javascript">        gl.attachShader(prog, vsh);</span></span><br><span class="line"><span class="javascript">        gl.attachShader(prog, fsh);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.deleteShader(vsh);</span></span><br><span class="line"><span class="javascript">        gl.deleteShader(fsh);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.linkProgram(prog);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (!gl.getProgramParameter(prog, gl.LINK_STATUS)) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> errlog = gl.getProgramInfoLog(prog);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.error(errlog);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(uniformlist) &#123;</span></span><br><span class="line"><span class="javascript">            prog.uniforms = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; uniformlist.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(attrlist) &#123;</span></span><br><span class="line"><span class="javascript">            prog.attributes = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; attrlist.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> attr = attrlist[i];</span></span><br><span class="line"><span class="javascript">                prog.attributes[attr] = gl.getAttribLocation(prog, attr);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> prog;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">useShader</span>(<span class="params">prog</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        gl.useProgram(prog);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> prog.attributes) &#123;</span></span><br><span class="line"><span class="javascript">            gl.enableVertexAttribArray(prog.attributes[attr]);;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">unuseShader</span>(<span class="params">prog</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> prog.attributes) &#123;</span></span><br><span class="line"><span class="javascript">            gl.disableVertexAttribArray(prog.attributes[attr]);;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        gl.useProgram(<span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/////</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> projection = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;angle&#x27;</span>:<span class="number">60</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;nearfar&#x27;</span>:<span class="keyword">new</span> <span class="built_in">Float32Array</span>([<span class="number">0.1</span>, <span class="number">100.0</span>]),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;matrix&#x27;</span>:Matrix44.createIdentity()</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> camera = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;position&#x27;</span>:Vector3.create(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;lookat&#x27;</span>:Vector3.create(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;up&#x27;</span>:Vector3.create(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;dof&#x27;</span>:Vector3.create(<span class="number">10.0</span>, <span class="number">4.0</span>, <span class="number">8.0</span>),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;matrix&#x27;</span>:Matrix44.createIdentity()</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> pointFlower = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> meshFlower = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> sceneStandBy = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> BlossomParticle = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.velocity = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.rotation = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.size = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.alpha = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.zkey = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.setVelocity = <span class="function"><span class="keyword">function</span> (<span class="params">vx, vy, vz</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.velocity[<span class="number">0</span>] = vx;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.velocity[<span class="number">1</span>] = vy;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.velocity[<span class="number">2</span>] = vz;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.setRotation = <span class="function"><span class="keyword">function</span> (<span class="params">rx, ry, rz</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.rotation[<span class="number">0</span>] = rx;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.rotation[<span class="number">1</span>] = ry;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.rotation[<span class="number">2</span>] = rz;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.setPosition = <span class="function"><span class="keyword">function</span> (<span class="params">nx, ny, nz</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">0</span>] = nx;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">1</span>] = ny;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">2</span>] = nz;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.setEulerAngles = <span class="function"><span class="keyword">function</span> (<span class="params">rx, ry, rz</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">0</span>] = rx;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">1</span>] = ry;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">2</span>] = rz;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.setSize = <span class="function"><span class="keyword">function</span> (<span class="params">s</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.size = s;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.update = <span class="function"><span class="keyword">function</span> (<span class="params">dt, et</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">0</span>] += <span class="built_in">this</span>.velocity[<span class="number">0</span>] * dt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">1</span>] += <span class="built_in">this</span>.velocity[<span class="number">1</span>] * dt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">2</span>] += <span class="built_in">this</span>.velocity[<span class="number">2</span>] * dt;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">0</span>] += <span class="built_in">this</span>.rotation[<span class="number">0</span>] * dt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">1</span>] += <span class="built_in">this</span>.rotation[<span class="number">1</span>] * dt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">2</span>] += <span class="built_in">this</span>.rotation[<span class="number">2</span>] * dt;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createPointFlowers</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// get point sizes</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);</span></span><br><span class="line"><span class="javascript">        renderSpec.pointSize = &#123;<span class="string">&#x27;min&#x27;</span>:prm[<span class="number">0</span>], <span class="string">&#x27;max&#x27;</span>:prm[<span class="number">1</span>]&#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vtxsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;sakura_point_vsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> frgsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;sakura_point_fsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        pointFlower.program = createShader(</span></span><br><span class="line"><span class="javascript">            vtxsrc, frgsrc,</span></span><br><span class="line"><span class="javascript">            [<span class="string">&#x27;uProjection&#x27;</span>, <span class="string">&#x27;uModelview&#x27;</span>, <span class="string">&#x27;uResolution&#x27;</span>, <span class="string">&#x27;uOffset&#x27;</span>, <span class="string">&#x27;uDOF&#x27;</span>, <span class="string">&#x27;uFade&#x27;</span>],</span></span><br><span class="line"><span class="javascript">            [<span class="string">&#x27;aPosition&#x27;</span>, <span class="string">&#x27;aEuler&#x27;</span>, <span class="string">&#x27;aMisc&#x27;</span>]</span></span><br><span class="line"><span class="javascript">        );</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        useShader(pointFlower.program);</span></span><br><span class="line"><span class="javascript">        pointFlower.offset = <span class="keyword">new</span> <span class="built_in">Float32Array</span>([<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>]);</span></span><br><span class="line"><span class="javascript">        pointFlower.fader = Vector3.create(<span class="number">0.0</span>, <span class="number">10.0</span>, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// paramerters: velocity[3], rotate[3]</span></span></span><br><span class="line"><span class="javascript">        pointFlower.numFlowers = <span class="number">1600</span>;</span></span><br><span class="line"><span class="javascript">        pointFlower.particles = <span class="keyword">new</span> <span class="built_in">Array</span>(pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// vertex attributes &#123;position[3], euler_xyz[3], size[1]&#125;</span></span></span><br><span class="line"><span class="javascript">        pointFlower.dataArray = <span class="keyword">new</span> <span class="built_in">Float32Array</span>(pointFlower.numFlowers * (<span class="number">3</span> + <span class="number">3</span> + <span class="number">2</span>));</span></span><br><span class="line"><span class="javascript">        pointFlower.positionArrayOffset = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        pointFlower.eulerArrayOffset = pointFlower.numFlowers * <span class="number">3</span>;</span></span><br><span class="line"><span class="javascript">        pointFlower.miscArrayOffset = pointFlower.numFlowers * <span class="number">6</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        pointFlower.buffer = gl.createBuffer();</span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);</span></span><br><span class="line"><span class="javascript">        gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);</span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        unuseShader(pointFlower.program);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.numFlowers; i++) &#123;</span></span><br><span class="line"><span class="javascript">            pointFlower.particles[i] = <span class="keyword">new</span> BlossomParticle();</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">initPointFlowers</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//area</span></span></span><br><span class="line"><span class="javascript">        pointFlower.area = Vector3.create(<span class="number">20.0</span>, <span class="number">20.0</span>, <span class="number">20.0</span>);</span></span><br><span class="line"><span class="javascript">        pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        pointFlower.fader.x = <span class="number">10.0</span>; <span class="comment">//env fade start</span></span></span><br><span class="line"><span class="javascript">        pointFlower.fader.y = pointFlower.area.z; <span class="comment">//env fade half</span></span></span><br><span class="line"><span class="javascript">        pointFlower.fader.z = <span class="number">0.1</span>;  <span class="comment">//near fade start</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//particles</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> PI2 = <span class="built_in">Math</span>.PI * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tmpv3 = Vector3.create(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tmpv = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> symmetryrand = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="keyword">return</span> (<span class="built_in">Math</span>.random() * <span class="number">2.0</span> - <span class="number">1.0</span>);&#125;;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.numFlowers; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> tmpprtcl = pointFlower.particles[i];</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//velocity</span></span></span><br><span class="line"><span class="javascript">            tmpv3.x = symmetryrand() * <span class="number">0.3</span> + <span class="number">0.8</span>;</span></span><br><span class="line"><span class="javascript">            tmpv3.y = symmetryrand() * <span class="number">0.2</span> - <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            tmpv3.z = symmetryrand() * <span class="number">0.3</span> + <span class="number">0.5</span>;</span></span><br><span class="line"><span class="javascript">            Vector3.normalize(tmpv3);</span></span><br><span class="line"><span class="javascript">            tmpv = <span class="number">2.0</span> + <span class="built_in">Math</span>.random() * <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//rotation</span></span></span><br><span class="line"><span class="javascript">            tmpprtcl.setRotation(</span></span><br><span class="line"><span class="javascript">                symmetryrand() * PI2 * <span class="number">0.5</span>,</span></span><br><span class="line"><span class="javascript">                symmetryrand() * PI2 * <span class="number">0.5</span>,</span></span><br><span class="line"><span class="javascript">                symmetryrand() * PI2 * <span class="number">0.5</span></span></span><br><span class="line"><span class="javascript">            );</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//position</span></span></span><br><span class="line"><span class="javascript">            tmpprtcl.setPosition(</span></span><br><span class="line"><span class="javascript">                symmetryrand() * pointFlower.area.x,</span></span><br><span class="line"><span class="javascript">                symmetryrand() * pointFlower.area.y,</span></span><br><span class="line"><span class="javascript">                symmetryrand() * pointFlower.area.z</span></span><br><span class="line"><span class="javascript">            );</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//euler</span></span></span><br><span class="line"><span class="javascript">            tmpprtcl.setEulerAngles(</span></span><br><span class="line"><span class="javascript">                <span class="built_in">Math</span>.random() * <span class="built_in">Math</span>.PI * <span class="number">2.0</span>,</span></span><br><span class="line"><span class="javascript">                <span class="built_in">Math</span>.random() * <span class="built_in">Math</span>.PI * <span class="number">2.0</span>,</span></span><br><span class="line"><span class="javascript">                <span class="built_in">Math</span>.random() * <span class="built_in">Math</span>.PI * <span class="number">2.0</span></span></span><br><span class="line"><span class="javascript">            );</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//size</span></span></span><br><span class="line"><span class="javascript">            tmpprtcl.setSize(<span class="number">0.9</span> + <span class="built_in">Math</span>.random() * <span class="number">0.1</span>);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">renderPointFlowers</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//update</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> PI2 = <span class="built_in">Math</span>.PI * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> repeatPos = <span class="function"><span class="keyword">function</span> (<span class="params">prt, cmp, limit</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(prt.position[cmp]) - prt.size * <span class="number">0.5</span> &gt; limit) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//out of area</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(prt.position[cmp] &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    prt.position[cmp] -= limit * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    prt.position[cmp] += limit * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> repeatEuler = <span class="function"><span class="keyword">function</span> (<span class="params">prt, cmp</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            prt.euler[cmp] = prt.euler[cmp] % PI2;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(prt.euler[cmp] &lt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                prt.euler[cmp] += PI2;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.numFlowers; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> prtcl = pointFlower.particles[i];</span></span><br><span class="line"><span class="javascript">            prtcl.update(timeInfo.delta, timeInfo.elapsed);</span></span><br><span class="line"><span class="javascript">            repeatPos(prtcl, <span class="number">0</span>, pointFlower.area.x);</span></span><br><span class="line"><span class="javascript">            repeatPos(prtcl, <span class="number">1</span>, pointFlower.area.y);</span></span><br><span class="line"><span class="javascript">            repeatPos(prtcl, <span class="number">2</span>, pointFlower.area.z);</span></span><br><span class="line"><span class="javascript">            repeatEuler(prtcl, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">            repeatEuler(prtcl, <span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">            repeatEuler(prtcl, <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            prtcl.alpha = <span class="number">1.0</span>;<span class="comment">//(pointFlower.area.z - prtcl.position[2]) * 0.5;</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            prtcl.zkey = (camera.matrix[<span class="number">2</span>] * prtcl.position[<span class="number">0</span>]</span></span><br><span class="line"><span class="javascript">                + camera.matrix[<span class="number">6</span>] * prtcl.position[<span class="number">1</span>]</span></span><br><span class="line"><span class="javascript">                + camera.matrix[<span class="number">10</span>] * prtcl.position[<span class="number">2</span>]</span></span><br><span class="line"><span class="javascript">                + camera.matrix[<span class="number">14</span>]);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// sort</span></span></span><br><span class="line"><span class="javascript">        pointFlower.particles.sort(<span class="function"><span class="keyword">function</span>(<span class="params">p0, p1</span>)</span>&#123;<span class="keyword">return</span> p0.zkey - p1.zkey;&#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// update data</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ipos = pointFlower.positionArrayOffset;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ieuler = pointFlower.eulerArrayOffset;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> imisc = pointFlower.miscArrayOffset;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.numFlowers; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> prtcl = pointFlower.particles[i];</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ipos] = prtcl.position[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ipos + <span class="number">1</span>] = prtcl.position[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ipos + <span class="number">2</span>] = prtcl.position[<span class="number">2</span>];</span></span><br><span class="line"><span class="javascript">            ipos += <span class="number">3</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ieuler] = prtcl.euler[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ieuler + <span class="number">1</span>] = prtcl.euler[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ieuler + <span class="number">2</span>] = prtcl.euler[<span class="number">2</span>];</span></span><br><span class="line"><span class="javascript">            ieuler += <span class="number">3</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[imisc] = prtcl.size;</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[imisc + <span class="number">1</span>] = prtcl.alpha;</span></span><br><span class="line"><span class="javascript">            imisc += <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//draw</span></span></span><br><span class="line"><span class="javascript">        gl.enable(gl.BLEND);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//gl.disable(gl.DEPTH_TEST);</span></span></span><br><span class="line"><span class="javascript">        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> prog = pointFlower.program;</span></span><br><span class="line"><span class="javascript">        useShader(prog);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.uniformMatrix4fv(prog.uniforms.uProjection, <span class="literal">false</span>, projection.matrix);</span></span><br><span class="line"><span class="javascript">        gl.uniformMatrix4fv(prog.uniforms.uModelview, <span class="literal">false</span>, camera.matrix);</span></span><br><span class="line"><span class="javascript">        gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);</span></span><br><span class="line"><span class="javascript">        gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));</span></span><br><span class="line"><span class="javascript">        gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);</span></span><br><span class="line"><span class="javascript">        gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.vertexAttribPointer(prog.attributes.aPosition, <span class="number">3</span>, gl.FLOAT, <span class="literal">false</span>, <span class="number">0</span>, pointFlower.positionArrayOffset * <span class="built_in">Float32Array</span>.BYTES_PER_ELEMENT);</span></span><br><span class="line"><span class="javascript">        gl.vertexAttribPointer(prog.attributes.aEuler, <span class="number">3</span>, gl.FLOAT, <span class="literal">false</span>, <span class="number">0</span>, pointFlower.eulerArrayOffset * <span class="built_in">Float32Array</span>.BYTES_PER_ELEMENT);</span></span><br><span class="line"><span class="javascript">        gl.vertexAttribPointer(prog.attributes.aMisc, <span class="number">2</span>, gl.FLOAT, <span class="literal">false</span>, <span class="number">0</span>, pointFlower.miscArrayOffset * <span class="built_in">Float32Array</span>.BYTES_PER_ELEMENT);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// doubler</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">2</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> zpos = i * -<span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">0</span>] = pointFlower.area.x * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">1</span>] = pointFlower.area.y * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">2</span>] = pointFlower.area.z * zpos;</span></span><br><span class="line"><span class="javascript">            gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);</span></span><br><span class="line"><span class="javascript">            gl.drawArrays(gl.POINT, <span class="number">0</span>, pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">0</span>] = pointFlower.area.x * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">1</span>] = pointFlower.area.y *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">2</span>] = pointFlower.area.z * zpos;</span></span><br><span class="line"><span class="javascript">            gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);</span></span><br><span class="line"><span class="javascript">            gl.drawArrays(gl.POINT, <span class="number">0</span>, pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">0</span>] = pointFlower.area.x *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">1</span>] = pointFlower.area.y * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">2</span>] = pointFlower.area.z * zpos;</span></span><br><span class="line"><span class="javascript">            gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);</span></span><br><span class="line"><span class="javascript">            gl.drawArrays(gl.POINT, <span class="number">0</span>, pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">0</span>] = pointFlower.area.x *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">1</span>] = pointFlower.area.y *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">2</span>] = pointFlower.area.z * zpos;</span></span><br><span class="line"><span class="javascript">            gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);</span></span><br><span class="line"><span class="javascript">            gl.drawArrays(gl.POINT, <span class="number">0</span>, pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//main</span></span></span><br><span class="line"><span class="javascript">        pointFlower.offset[<span class="number">0</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        pointFlower.offset[<span class="number">1</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        pointFlower.offset[<span class="number">2</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);</span></span><br><span class="line"><span class="javascript">        gl.drawArrays(gl.POINT, <span class="number">0</span>, pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        unuseShader(prog);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.enable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript">        gl.disable(gl.BLEND);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// effects</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//common util</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createEffectProgram</span>(<span class="params">vtxsrc, frgsrc, exunifs, exattrs</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ret = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> unifs = [<span class="string">&#x27;uResolution&#x27;</span>, <span class="string">&#x27;uSrc&#x27;</span>, <span class="string">&#x27;uDelta&#x27;</span>];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(exunifs) &#123;</span></span><br><span class="line"><span class="javascript">            unifs = unifs.concat(exunifs);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> attrs = [<span class="string">&#x27;aPosition&#x27;</span>];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(exattrs) &#123;</span></span><br><span class="line"><span class="javascript">            attrs = attrs.concat(exattrs);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);</span></span><br><span class="line"><span class="javascript">        useShader(ret.program);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        ret.dataArray = <span class="keyword">new</span> <span class="built_in">Float32Array</span>([</span></span><br><span class="line"><span class="javascript">            -<span class="number">1.0</span>, -<span class="number">1.0</span>,</span></span><br><span class="line"><span class="javascript">            <span class="number">1.0</span>, -<span class="number">1.0</span>,</span></span><br><span class="line"><span class="javascript">            -<span class="number">1.0</span>,  <span class="number">1.0</span>,</span></span><br><span class="line"><span class="javascript">            <span class="number">1.0</span>,  <span class="number">1.0</span></span></span><br><span class="line"><span class="javascript">        ]);</span></span><br><span class="line"><span class="javascript">        ret.buffer = gl.createBuffer();</span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);</span></span><br><span class="line"><span class="javascript">        gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        unuseShader(ret.program);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> ret;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// basic usage</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// useEffect(prog, srctex(&#123;&#x27;texture&#x27;:texid, &#x27;dtxArray&#x27;:(f32)[dtx, dty]&#125;)); //basic initialize</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// gl.uniform**(...); //additional uniforms</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// drawEffect()</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// unuseEffect(prog)</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// TEXTURE0 makes src</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">useEffect</span>(<span class="params">fxobj, srctex</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> prog = fxobj.program;</span></span><br><span class="line"><span class="javascript">        useShader(prog);</span></span><br><span class="line"><span class="javascript">        gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(srctex != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">            gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);</span></span><br><span class="line"><span class="javascript">            gl.uniform1i(prog.uniforms.uSrc, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            gl.activeTexture(gl.TEXTURE0);</span></span><br><span class="line"><span class="javascript">            gl.bindTexture(gl.TEXTURE_2D, srctex.texture);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">drawEffect</span>(<span class="params">fxobj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);</span></span><br><span class="line"><span class="javascript">        gl.vertexAttribPointer(fxobj.program.attributes.aPosition, <span class="number">2</span>, gl.FLOAT, <span class="literal">false</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">        gl.drawArrays(gl.TRIANGLE_STRIP, <span class="number">0</span>, <span class="number">4</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">unuseEffect</span>(<span class="params">fxobj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        unuseShader(fxobj.program);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> effectLib = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createEffectLib</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vtxsrc, frgsrc;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//common</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cmnvtxsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;fx_common_vsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//background</span></span></span><br><span class="line"><span class="javascript">        frgsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;bg_fsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, [<span class="string">&#x27;uTimes&#x27;</span>], <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// make brightpixels buffer</span></span></span><br><span class="line"><span class="javascript">        frgsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;fx_brightbuf_fsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, <span class="literal">null</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// direction blur</span></span></span><br><span class="line"><span class="javascript">        frgsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;fx_dirblur_r4_fsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, [<span class="string">&#x27;uBlurDir&#x27;</span>], <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//final composite</span></span></span><br><span class="line"><span class="javascript">        vtxsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;pp_final_vsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        frgsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;pp_final_fsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, [<span class="string">&#x27;uBloom&#x27;</span>], <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// background</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createBackground</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//console.log(&quot;create background&quot;);</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">initBackground</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//console.log(&quot;init background&quot;);</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">renderBackground</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        gl.disable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        useEffect(effectLib.sceneBg, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);</span></span><br><span class="line"><span class="javascript">        drawEffect(effectLib.sceneBg);</span></span><br><span class="line"><span class="javascript">        unuseEffect(effectLib.sceneBg);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.enable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// post process</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> postProcess = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createPostProcess</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//console.log(&quot;create post process&quot;);</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">initPostProcess</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//console.log(&quot;init post process&quot;);</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">renderPostProcess</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        gl.enable(gl.TEXTURE_2D);</span></span><br><span class="line"><span class="javascript">        gl.disable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bindRT = <span class="function"><span class="keyword">function</span> (<span class="params">rt, isclear</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);</span></span><br><span class="line"><span class="javascript">            gl.viewport(<span class="number">0</span>, <span class="number">0</span>, rt.width, rt.height);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(isclear) &#123;</span></span><br><span class="line"><span class="javascript">                gl.clearColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//make bright buff</span></span></span><br><span class="line"><span class="javascript">        bindRT(renderSpec.wHalfRT0, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">        useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);</span></span><br><span class="line"><span class="javascript">        drawEffect(effectLib.mkBrightBuf);</span></span><br><span class="line"><span class="javascript">        unuseEffect(effectLib.mkBrightBuf);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// make bloom</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> p = <span class="number">1.5</span> + <span class="number">1</span> * i;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> s = <span class="number">2.0</span> + <span class="number">1</span> * i;</span></span><br><span class="line"><span class="javascript">            bindRT(renderSpec.wHalfRT1, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">            useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);</span></span><br><span class="line"><span class="javascript">            gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, <span class="number">0.0</span>, s, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="javascript">            drawEffect(effectLib.dirBlur);</span></span><br><span class="line"><span class="javascript">            unuseEffect(effectLib.dirBlur);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            bindRT(renderSpec.wHalfRT0, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">            useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);</span></span><br><span class="line"><span class="javascript">            gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, <span class="number">0.0</span>, p, <span class="number">0.0</span>, s);</span></span><br><span class="line"><span class="javascript">            drawEffect(effectLib.dirBlur);</span></span><br><span class="line"><span class="javascript">            unuseEffect(effectLib.dirBlur);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//display</span></span></span><br><span class="line"><span class="javascript">        gl.bindFramebuffer(gl.FRAMEBUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        gl.viewport(<span class="number">0</span>, <span class="number">0</span>, renderSpec.width, renderSpec.height);</span></span><br><span class="line"><span class="javascript">        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        useEffect(effectLib.finalComp, renderSpec.mainRT);</span></span><br><span class="line"><span class="javascript">        gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, <span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">        gl.activeTexture(gl.TEXTURE1);</span></span><br><span class="line"><span class="javascript">        gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);</span></span><br><span class="line"><span class="javascript">        drawEffect(effectLib.finalComp);</span></span><br><span class="line"><span class="javascript">        unuseEffect(effectLib.finalComp);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.enable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/////</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> SceneEnv = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createScene</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        createEffectLib();</span></span><br><span class="line"><span class="javascript">        createBackground();</span></span><br><span class="line"><span class="javascript">        createPointFlowers();</span></span><br><span class="line"><span class="javascript">        createPostProcess();</span></span><br><span class="line"><span class="javascript">        sceneStandBy = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">initScene</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        initBackground();</span></span><br><span class="line"><span class="javascript">        initPointFlowers();</span></span><br><span class="line"><span class="javascript">        initPostProcess();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//camera.position.z = 17.320508;</span></span></span><br><span class="line"><span class="javascript">        camera.position.z = pointFlower.area.z + projection.nearfar[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">        projection.angle = <span class="built_in">Math</span>.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * <span class="number">180.0</span> / <span class="built_in">Math</span>.PI * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">        Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[<span class="number">0</span>], projection.nearfar[<span class="number">1</span>]);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">renderScene</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//draw</span></span></span><br><span class="line"><span class="javascript">        Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.enable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//gl.bindFramebuffer(gl.FRAMEBUFFER, null);</span></span></span><br><span class="line"><span class="javascript">        gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);</span></span><br><span class="line"><span class="javascript">        gl.viewport(<span class="number">0</span>, <span class="number">0</span>, renderSpec.mainRT.width, renderSpec.mainRT.height);</span></span><br><span class="line"><span class="javascript">        gl.clearColor(<span class="number">0.005</span>, <span class="number">0</span>, <span class="number">0.05</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        renderBackground();</span></span><br><span class="line"><span class="javascript">        renderPointFlowers();</span></span><br><span class="line"><span class="javascript">        renderPostProcess();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">onResize</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        makeCanvasFullScreen(<span class="built_in">document</span>.getElementById(<span class="string">&quot;sakura&quot;</span>));</span></span><br><span class="line"><span class="javascript">        setViewports();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(sceneStandBy) &#123;</span></span><br><span class="line"><span class="javascript">            initScene();</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">setViewports</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        renderSpec.setSize(gl.canvas.width, gl.canvas.height);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.clearColor(<span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">0.5</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">        gl.viewport(<span class="number">0</span>, <span class="number">0</span>, renderSpec.width, renderSpec.height);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> rtfunc = <span class="function"><span class="keyword">function</span> (<span class="params">rtname, rtw, rth</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> rt = renderSpec[rtname];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(rt) deleteRenderTarget(rt);</span></span><br><span class="line"><span class="javascript">            renderSpec[rtname] = createRenderTarget(rtw, rth);</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">        rtfunc(<span class="string">&#x27;mainRT&#x27;</span>, renderSpec.width, renderSpec.height);</span></span><br><span class="line"><span class="javascript">        rtfunc(<span class="string">&#x27;wFullRT0&#x27;</span>, renderSpec.width, renderSpec.height);</span></span><br><span class="line"><span class="javascript">        rtfunc(<span class="string">&#x27;wFullRT1&#x27;</span>, renderSpec.width, renderSpec.height);</span></span><br><span class="line"><span class="javascript">        rtfunc(<span class="string">&#x27;wHalfRT0&#x27;</span>, renderSpec.halfWidth, renderSpec.halfHeight);</span></span><br><span class="line"><span class="javascript">        rtfunc(<span class="string">&#x27;wHalfRT1&#x27;</span>, renderSpec.halfWidth, renderSpec.halfHeight);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        renderScene();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> animating = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">stepAnimation</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(!animating) animate();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> curdate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">        timeInfo.elapsed = (curdate - timeInfo.start) / <span class="number">1000.0</span>;</span></span><br><span class="line"><span class="javascript">        timeInfo.delta = (curdate - timeInfo.prev) / <span class="number">1000.0</span>;</span></span><br><span class="line"><span class="javascript">        timeInfo.prev = curdate;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(animating) requestAnimationFrame(animate);</span></span><br><span class="line"><span class="javascript">        render();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">makeCanvasFullScreen</span>(<span class="params">canvas</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> b = <span class="built_in">document</span>.body;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> d = <span class="built_in">document</span>.documentElement;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> fullw = <span class="built_in">Math</span>.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> fullh = <span class="built_in">Math</span>.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);</span></span><br><span class="line"><span class="javascript">        canvas.width = fullw;</span></span><br><span class="line"><span class="javascript">        canvas.height = fullh;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&quot;sakura&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">            makeCanvasFullScreen(canvas);</span></span><br><span class="line"><span class="javascript">            gl = canvas.getContext(<span class="string">&#x27;experimental-webgl&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">catch</span>(e) &#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">&quot;WebGL not supported.&quot;</span> + e);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.error(e);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;resize&#x27;</span>, onResize);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        setViewports();</span></span><br><span class="line"><span class="javascript">        createScene();</span></span><br><span class="line"><span class="javascript">        initScene();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        timeInfo.start = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">        timeInfo.prev = timeInfo.start;</span></span><br><span class="line"><span class="javascript">        animate();</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//set window.requestAnimationFrame</span></span></span><br><span class="line"><span class="javascript">    (<span class="function"><span class="keyword">function</span> (<span class="params">w, r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        w[<span class="string">&#x27;r&#x27;</span>+r] = w[<span class="string">&#x27;r&#x27;</span>+r] || w[<span class="string">&#x27;webkitR&#x27;</span>+r] || w[<span class="string">&#x27;mozR&#x27;</span>+r] || w[<span class="string">&#x27;msR&#x27;</span>+r] || w[<span class="string">&#x27;oR&#x27;</span>+r] || <span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123; w.setTimeout(c, <span class="number">1000</span> / <span class="number">60</span>); &#125;;</span></span><br><span class="line"><span class="javascript">    &#125;)(<span class="built_in">window</span>, <span class="string">&#x27;requestAnimationFrame&#x27;</span>);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web Page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Error Page 设计演示01</title>
      <link href="/2021/10/31/design_ErrorPage_2021_10_31/"/>
      <url>/2021/10/31/design_ErrorPage_2021_10_31/</url>
      
        <content type="html"><![CDATA[<p><strong>分享大家一个好看的 Error Page 代码</strong></p><hr><h3 id="演示图"><a href="#演示图" class="headerlink" title="演示图"></a>演示图</h3><p><img src="https://z3.ax1x.com/2021/10/31/5z70Rx.png"></p><h3 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    Developer: @Arvin</span></span><br><span class="line"><span class="comment">    Explain: Error Page</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Error Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 导入字体 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Bowlby+One+SC&amp;display=swap&quot;</span>);</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-pseudo">:root</span> &#123;</span></span><br><span class="line"><span class="css">            --<span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="css">            --<span class="attribute">border-color</span>    : <span class="number">#7591AD</span>;</span></span><br><span class="line"><span class="css">            --text-<span class="attribute">color</span>      : <span class="number">#34495e</span>;</span></span><br><span class="line"><span class="css">            --color1          : <span class="number">#EC3E27</span>;</span></span><br><span class="line"><span class="css">            --color2          : <span class="number">#f01d67</span>;</span></span><br><span class="line"><span class="css">            --color3          : <span class="number">#1474bd</span>;</span></span><br><span class="line"><span class="css">            --color4          : <span class="number">#04ffcd</span>;</span></span><br><span class="line"><span class="css">            --color5          : <span class="number">#fdcb6e</span>;</span></span><br><span class="line"><span class="css">            --color6          : <span class="number">#e056fd</span>;</span></span><br><span class="line"><span class="css">            --color7          : <span class="number">#F97F51</span>;</span></span><br><span class="line"><span class="css">            --color8          : <span class="number">#BDC581</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        * &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span> : <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">html</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>           : <span class="number">100vw</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>          : <span class="number">100vh</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="built_in">var</span>(--background-color);</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>         : flex;</span></span><br><span class="line"><span class="css">            <span class="attribute">justify-content</span> : center;</span></span><br><span class="line"><span class="css">            <span class="attribute">align-items</span>     : center;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-family</span>     : <span class="string">&#x27;Montserrat&#x27;</span>, sans-serif, Arial, <span class="string">&#x27;Microsoft Yahei&#x27;</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.channel</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>   : absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>      : <span class="number">80%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span> : center;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>        : <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>       : <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>  : <span class="built_in">translate</span>(-<span class="number">45%</span>, -<span class="number">200px</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>  : <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>      : <span class="number">#fff</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>              : <span class="number">350px</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/* background-color: #fff; */</span></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>        : flex;</span></span><br><span class="line"><span class="css">            <span class="attribute">justify-content</span>: space-around;</span></span><br><span class="line"><span class="css">            <span class="attribute">align-items</span>    : center;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>        : relative;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>       : <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-family</span>     : <span class="string">&#x27;Bowlby One SC&#x27;</span>, Arial, Helvetica, sans-serif;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>           : <span class="number">#FFF</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>       : <span class="built_in">scale</span>(<span class="number">0.9</span>, <span class="number">1</span>) <span class="built_in">rotateY</span>(-<span class="number">45deg</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">transform-origin</span>: bottom center;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation</span>       : animate <span class="number">2.5s</span> ease-in-out infinite;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation-delay</span>: <span class="built_in">calc</span>(<span class="built_in">var</span>(--i) * <span class="number">100ms</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> animate &#123;</span></span><br><span class="line"><span class="css">            <span class="number">20%</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.9</span>, <span class="number">1</span>) <span class="built_in">rotateY</span>(-<span class="number">45deg</span>);</span></span><br><span class="line"><span class="css">                <span class="attribute">text-shadow</span>:</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color2),</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color3),</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color4);</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="number">40%</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.9</span>, <span class="number">2</span>) <span class="built_in">translateY</span>(<span class="number">16px</span>);</span></span><br><span class="line"><span class="css">                <span class="attribute">text-shadow</span>:</span></span><br><span class="line"><span class="css">                        -<span class="number">10px</span> -<span class="number">2px</span> <span class="built_in">var</span>(--color2),</span></span><br><span class="line"><span class="css">                        -<span class="number">20px</span> -<span class="number">3px</span> <span class="built_in">var</span>(--color3),</span></span><br><span class="line"><span class="css">                        -<span class="number">30px</span> -<span class="number">4px</span> <span class="built_in">var</span>(--color4);</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="number">60%</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.9</span>, <span class="number">1</span>) <span class="built_in">rotateY</span>(<span class="number">45deg</span>);</span></span><br><span class="line"><span class="css">                <span class="attribute">text-shadow</span>:</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color2),</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color3),</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color4);</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="number">80%</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.9</span>, <span class="number">2</span>) <span class="built_in">translateY</span>(<span class="number">16px</span>);</span></span><br><span class="line"><span class="css">                <span class="attribute">text-shadow</span>:</span></span><br><span class="line"><span class="css">                        <span class="number">10px</span> -<span class="number">2px</span> <span class="built_in">var</span>(--color2),</span></span><br><span class="line"><span class="css">                        <span class="number">20px</span> -<span class="number">3px</span> <span class="built_in">var</span>(--color3),</span></span><br><span class="line"><span class="css">                        <span class="number">30px</span> -<span class="number">4px</span> <span class="built_in">var</span>(--color4);</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">H1</span>&gt;</span>Error Page<span class="tag">&lt;/<span class="name">H1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;channel&quot;</span>&gt;</span></span><br><span class="line">    TCT 呼叫程序猿大大 ＞﹏＜</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;--i:1&quot;</span>&gt;</span>E<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;--i:2&quot;</span>&gt;</span>R<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;--i:3&quot;</span>&gt;</span>R<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;--i:4&quot;</span>&gt;</span>O<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;--i:5&quot;</span>&gt;</span>R<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:Utext</span>=<span class="string">&quot;&#x27;<span class="symbol">&amp;lt;</span>!--&#x27;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;Failed Request URL : &#x27; + $&#123;url&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;Expiration message : &#x27; + $&#123;exception.message&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;st : $&#123;exception.stackTrace&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:utext</span>=<span class="string">&quot;$&#123;st&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;--<span class="symbol">&amp;gt;</span>&#x27;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web Page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>404 Page 设计演示01</title>
      <link href="/2021/10/31/design_404Page_2021_10_31/"/>
      <url>/2021/10/31/design_404Page_2021_10_31/</url>
      
        <content type="html"><![CDATA[<p><strong>分享大家一个好看的 404 Page 代码</strong></p><hr><h3 id="演示图"><a href="#演示图" class="headerlink" title="演示图"></a>演示图</h3><p><img src="https://z3.ax1x.com/2021/10/31/5zTL26.png"></p><hr><h3 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    Developer: @Arvin</span></span><br><span class="line"><span class="comment">    Explain: 404 Page</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>休息一下吧&lt;( ￣^￣)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-pseudo">:root</span> &#123;</span></span><br><span class="line"><span class="css">            --<span class="attribute">background-color</span>: <span class="number">#2c3e50</span>;</span></span><br><span class="line"><span class="css">            --<span class="attribute">border-color</span>: <span class="number">#7591AD</span>;</span></span><br><span class="line"><span class="css">            --text-<span class="attribute">color</span>: <span class="number">#34495e</span>;</span></span><br><span class="line"><span class="css">            --color1: <span class="number">#EC3E27</span>;</span></span><br><span class="line"><span class="css">            --color2: <span class="number">#FD79A8</span>;</span></span><br><span class="line"><span class="css">            --color3: <span class="number">#0984E3</span>;</span></span><br><span class="line"><span class="css">            --color4: <span class="number">#00B894</span>;</span></span><br><span class="line"><span class="css">            --color5: <span class="number">#FDCB6E</span>;</span></span><br><span class="line"><span class="css">            --color6: <span class="number">#E056FD</span>;</span></span><br><span class="line"><span class="css">            --color7: <span class="number">#F97F51</span>;</span></span><br><span class="line"><span class="css">            --color8: <span class="number">#BDC581</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        * &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">html</span> &#123;<span class="attribute">font-size</span>: <span class="number">14px</span>;&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100vw</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="built_in">var</span>(--background-color);</span></span><br><span class="line"><span class="css">            <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right bottom, <span class="built_in">var</span>(--color_left), <span class="built_in">var</span>(--color_leftcolor_right));</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Montserrat&#x27;</span>, sans-serif, Arial, <span class="string">&#x27;Microsoft Yahei&#x27;</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.channel</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">80%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">200px</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="css">            <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #ff5f99;*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">800</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-family</span>: arial, helvetica, sans-serif;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-class">.middle</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #d0ffc6;*/</span></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-class">.middle</span><span class="selector-pseudo">::before</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-class">.middle</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #ffbd98;*/</span></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="comment">/* 效果实现: 内阴影 透明度66(十六进制) &lt;左上右下&gt; @Arvin */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">            inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#FD79A8</span>66,</span></span><br><span class="line"><span class="css">            inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#0984E3</span>66,</span></span><br><span class="line"><span class="css">            inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#EC3E27</span>66,</span></span><br><span class="line"><span class="css">            inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation</span>: animate_before <span class="number">5s</span> linear infinite;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-class">.middle</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 动画效果: 分成四次顺时针切换四个阴影颜色 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> animate_before&#123;</span></span><br><span class="line"><span class="css">            <span class="number">0%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">                        inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#FD79A8</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#0984E3</span>66,</span></span><br><span class="line"><span class="css">                        inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#EC3E27</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">25%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">                        inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#0984E3</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#EC3E27</span>66,</span></span><br><span class="line"><span class="css">                        inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#FD79A8</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">50%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">                        inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#EC3E27</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66,</span></span><br><span class="line"><span class="css">                        inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#FD79A8</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#0984E3</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">75%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">                        inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#FD79A8</span>66,</span></span><br><span class="line"><span class="css">                        inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#0984E3</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#EC3E27</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">100%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">                        inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#FD79A8</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#0984E3</span>66,</span></span><br><span class="line"><span class="css">                        inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#EC3E27</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 左侧文字效果：分四次将当前文字颜色变换为 左侧内阴影的颜色 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation</span>: animate_span_1 <span class="number">5s</span> linear infinite;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*动画 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> animate_span_1&#123;</span></span><br><span class="line"><span class="css">            <span class="number">0%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#FD79A8</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">25%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#0984E3</span>66</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">50%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#EC3E27</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">75%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#D0FFc6</span>66</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">100%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#FD79A8</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 右侧文字效果：分四次将当前文字颜色变换为 右侧内阴影的颜色 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation</span>: animate_span_3 <span class="number">5s</span> linear infinite;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*动画 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> animate_span_3&#123;</span></span><br><span class="line"><span class="css">            <span class="number">0%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#FD79A8</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">25%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#D0FFc6</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">50%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#EC3E27</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">75%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#0984E3</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">100%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#FD79A8</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;channel&quot;</span>&gt;</span></span><br><span class="line">    TCT 代码中遇见二次元 🤍</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;middle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web Page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.10.08日本记</title>
      <link href="/2021/10/08/img_rb_xiaoj_2021.10.08.01/"/>
      <url>/2021/10/08/img_rb_xiaoj_2021.10.08.01/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>东皇将逝，我已寻她千百度，蓦然回首，向黄昏许愿，等风起，等花开，等我们相遇</strong></p></blockquote><hr><p><img src="https://z3.ax1x.com/2021/10/08/5P0oNt.jpg" alt="山林小街"><br><img src="https://z3.ax1x.com/2021/10/08/5P0IAI.jpg" alt="京都盛景"><br><img src="https://z3.ax1x.com/2021/10/08/5P04HA.jpg" alt="夜池孤影"><br><img src="https://z3.ax1x.com/2021/10/08/5P0fnH.jpg" alt="世隐谷亭"><br><img src="https://z3.ax1x.com/2021/10/08/5P0Rje.jpg" alt="孤月"><br><img src="https://z3.ax1x.com/2021/10/08/5P0Ljg.jpg" alt="闪耀"><br><img src="https://z3.ax1x.com/2021/10/08/5P0qgS.jpg" alt="东京塔"><br><img src="https://z3.ax1x.com/2021/10/08/5P0b38.jpg" alt="仙珠"><br><img src="https://z3.ax1x.com/2021/10/08/5P0XuQ.jpg" alt="清雅"></p>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本风景 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】致未来的你，情书Ⅲ</title>
      <link href="/2021/10/08/epistle.2021.10.08.01/"/>
      <url>/2021/10/08/epistle.2021.10.08.01/</url>
      
        <content type="html"><![CDATA[<p>夜已深，心却一点都不静。如果是你，我就和你说说话，唠唠嗑，聊聊天。因为，除了你，没有人会在意也没有人会关心，心，怎么了。也没有人会了解。和大部分人说话，是一件很浪费心力和时间的事情，因为他们的眼里，是看不见别人的。沟通，聊天，但是不会产生了解。他不知道你说这件事情，究竟在说什么，他不了解，你内心的情绪和想法。如果是你，就会很不一样吧。我应该会很喜欢和你说话，大大小小的事情，芝麻绿豆的事情，说着说着，或者没说，看见你，就哭花了脸，你也不会慌张，也不会问我怎么了，你只要温柔的看着我哭，陪着我就好了。</p><p>我醒来，我就觉得好难受。我也不知道为什么。我不知道是心里有什么东西在消融，冰冻的部分在一点点融化，还是发生了什么，我不知道发生了什么，但是我会觉得心绪很不安宁，也或者大姨妈要来了。不过对我来说，这种不正常和波动，是一种正常。我时常这样抽风一下，莫名的就觉得烦躁，不不舒服，什么都不想做，这是一种病。如果是你，你大概会说，没关系呀，你有病，我有药。哈哈。是呀，你可以像撸猫咪一样，撸我，我们就这样静静的待着，坐着，靠着，或躺着。我相信，如果是你，待在你身边，就会觉得很安宁。</p><p>干儿子生日，闺蜜张罗了一个专业拍照的，喊着一些邻居的小朋友，同学。在楼下小区的花园里，草地上，准备切蛋糕。我儿子一个人上楼打游戏。闺蜜问他怎么了。闺蜜总是觉得我对孩子没有约束，没有规矩，太过宠溺。我跟前夫关于孩子的教育也有很多不同的意见。我内心深知，这孩子携带的家族能量有多负面，脾气有多大，我不愿意强迫孩子做什么，我希望给他尽可能多的空间，他们都觉得我没有底线，或者说我的底线太底线。呵呵。。。当周围的人，不断质疑你的时候，你会怀疑吗，你会犹豫吗。我知道，如果是你，你不会的。你内心是有力量的，只要是你认定的，只要是你心里笃信的，别人或周围的任何，都不可能产生什么影响的。我重来不会抗拒和否认他们任何人的观念和想法，我总是表示，你们可以用任何你们觉得对的方式对待孩子，为什么不可以呢，为什么总是要分出个是非对错呢，如果我们无法在某些认知上达成共识，为什么我们不可以用彼此觉得合适的方式，各自去做呢。有时候我会觉得委屈，我也会很傲娇，我觉得我能看到他们看不到的未来，尽管有时候，我也会觉得很烦，不愿意解释，不愿意争论争辩，但是我心里也是清楚的，我知道要怎样对待孩子。我也知道我自己的做法，在更长远的未来，对孩子是有帮助的。你呢，我知道，你不会参与这些，你甚至也不会教导我应该如何，不应该如何。你大概只会很笃定的告诉我，你信任我，也让我信任我自己。</p><p>我感受不到快乐。我和他们在一起，我跟家人在一起，我觉得有点别扭。我特别想要逃离，我想一个人待着。我刚才突然在想，如果你一直都不出现，也许某天，我可能真的找个深山啥的去待待吧。哈哈。虽然我很渴望，和人，和别人有很深的连接，有很深的关系。可是我没有那种感觉。闺蜜的奶奶去世了，我去陪夜，去参加葬礼，我YY着，我身边最亲近的人去世，我没有什么感觉。我也不知道，那种感觉是冻住了，还是我真的少一些什么。我有时候会觉得很累。因为他们都有他们对世界的认知，应该怎样应该怎样。。。所有的言行都会包含这样的控制的能量，这让我觉得不放松，不舒服。我显得如此格格不入。因为我不在他们所有的应该之中。哈哈。。。活了那么久，我仿佛离他们越来越远。可是，这样会离你更近吗？</p><p>我又暴饮暴食，我觉得我又胖了。一直都没有瘦。回国之后，就没瘦。时常暴饮暴食。我知道，我是不愿意面对自己的，我总觉得我还没有做好准备。面对自己，真的需要很多能量呀，我有时候什么都不想做，也不愿意做。阿卡西记录的课程上完都有两个月了，我也没怎么做练习。我知道我有一切的资源和方法和工具，去解决我自己的问题，我就是不愿意面对，我觉得我还没有准备好，我不敢，我没有勇气，我也没有能量。你看，我什么都没有做，我只是做了一点点，前段时间多做了几次能量疗愈，做了几次舞动静心，我还是能感觉到身体的动荡和释放，我还是会觉得好困难，我觉得面对自己，拆解自己，真的，没人知道，但是内心就是波澜壮阔，波涛汹涌，不会游泳，分分钟钟，时常被呛水被淹没，越挣扎还越下沉。我知道，把现在的一切敲碎，剥离，会很不一样，我会遇见也许我从未遇见过从未了解过的自己，可是这个过程真的好难，迈出第一步都好难。我甚至有时候在想，上帝是不是把你安排在这些关卡之后呢，我是不是要通关这个部分，才会遇见你呢。我身边没有什么长久的关系，也没有什么深入的关系，很多人，都像过客，来来去去。是不是因为我自己也没有什么耐心，我对待自己也没有足够的耐心。上帝一定觉得，现在的我，还不到时间遇见你吧，因为遇见了，以我们现在的能力，也无法长久的彼此陪伴吧。可是，坦白说，如果真的是这样，我也生不起，为了遇见你，而让自己快速的变得更好的欲望。哈哈。。。我没有那样的欲望，我会想要让自己好一点，更好一点，不要暴饮暴食，好好关照身体，但是也只是我有这样的念头，这种念头都时常在飘忽，都没有什么稳固，也谈不上非要如此。刚才洗澡的时候，还在想，如果余生，只做一件事，就是把身体这座庙宇好好修缮，估计也是很有意思的，我也可以成为某个匠人，在这件事上，成为专家。可我也就这样想想。你说，为什么我那么没有行动力。你会告诉我，不用担心这个，不是所有人都需要有行动力的，没有就没有，做好眼前每一件事就可以了。你一定会告诉我，如果你在，你就会安顿好我的心，心安定了，然后就享受每一件事就可以，就那么简单，没有那么复杂的。你一定会告诉我，让我的脑子里，想着你就可以了，不用想其他乱七八糟的事情。这个对白好熟悉呀，我曾经梦到过。你呢，你梦到过吗？你还会跟我说，如果下次再想乱吃东西，就找你说话吧。食物只是情绪的安慰剂，而如果有你，我大概就不需要别的安慰剂了，你就是最好的药了。</p><p>嗯，吃一颗，YY你的药。然后乖乖睡觉。</p><p>不管怎样，我都要自己生长出一点能量，关照好自己的身体，起码要等到，遇见你的那天。</p><p>你会不会，有一天，看完我写给你的情书，</p><p>然后跟我说，傻瓜，我来了，虽然晚了一点，人间交通太拥挤，不过，我还是来了。而且，我知道，你等的就是我。因为我来自我们的未来。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序结构目录</title>
      <link href="/2021/10/08/wx_AppletsStructureDirectory/"/>
      <url>/2021/10/08/wx_AppletsStructureDirectory/</url>
      
        <content type="html"><![CDATA[<h2 id="微信小程序结构目录"><a href="#微信小程序结构目录" class="headerlink" title="微信小程序结构目录"></a>微信小程序结构目录</h2><blockquote><p><strong>微信小程序框架</strong>的目标是通过尽可能简单、高效的方式让开发者可以在微信中开发具有原生 App 的体验的服务。</p><p>小程序框架提供了自己的视图层描述语言 <strong>WXML</strong> 和 <strong>WXSS</strong> ,以及 <strong>JavaScript</strong> ，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。</p></blockquote><hr><h3 id="小程序文件结构和传统-Web-对比"><a href="#小程序文件结构和传统-Web-对比" class="headerlink" title="小程序文件结构和传统 Web 对比"></a>小程序文件结构和传统 Web 对比</h3><table><thead><tr><th align="center">结构</th><th align="center">传统 Web</th><th align="center">微信小程序</th></tr></thead><tbody><tr><td align="center">结构</td><td align="center">HTML</td><td align="center">WXML</td></tr><tr><td align="center">样式</td><td align="center">CSS</td><td align="center">WXSS</td></tr><tr><td align="center">逻辑</td><td align="center">JavaScript</td><td align="center">Java script</td></tr><tr><td align="center">配置</td><td align="center">无</td><td align="center">JSON</td></tr></tbody></table><p>通过以上对比得出，<strong>传统 Web</strong> 是三层结构。而微信小程序是四层结构，多了一层 <strong>配置.json</strong></p><hr><h3 id="基本的项目目录"><a href="#基本的项目目录" class="headerlink" title="基本的项目目录"></a>基本的项目目录</h3><p><img src="https://z3.ax1x.com/2021/10/08/5P3C9A.png" alt="微信小程序结构目录"></p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 目录扫描 Dirbuster</title>
      <link href="/2021/10/05/kali-LinuxDirectoryscan_Dirbuster/"/>
      <url>/2021/10/05/kali-LinuxDirectoryscan_Dirbuster/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-目录扫描-Dirbuster"><a href="#Kali-Linux-目录扫描-Dirbuster" class="headerlink" title="Kali Linux 目录扫描 Dirbuster"></a>Kali Linux 目录扫描 Dirbuster</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><p><code>Lali Linux 系列第四篇信息收集第四章 目录扫描 Dirbuster</code></p><h3 id="目录扫描的作用"><a href="#目录扫描的作用" class="headerlink" title="目录扫描的作用"></a>目录扫描的作用</h3><p><strong>文件目录</strong></p><blockquote><p>文件目录是指：为实现 “按名存取”，必须建立文件名与辅存空间中物理地址的对应关系，体现这种对应关系的数据结构称为文件目录。</p></blockquote><p><strong>目录扫描</strong></p><blockquote><p>目录扫描可以让我们发现这个网站存在多少个目录，多少个页面，探索出网站的整体结构。</p><p>通过目录扫描我们还可以扫描敏感文件，后台文件，数据文件，和信息泄露文件等等</p><p><strong>目录扫描是信息收集技术的重要部分</strong></p></blockquote><hr><h3 id="常见的目录信息泄露"><a href="#常见的目录信息泄露" class="headerlink" title="常见的目录信息泄露"></a>常见的目录信息泄露</h3><p><strong>目录遍历漏洞</strong></p><blockquote><p>目录遍历（路径遍历）是由于 Web 服务器或者 Web 应用程序对用户输入的文件名称的安全验证不足而导致的一种安全漏洞，使得攻击者可以通过利用一些特殊字符就可以绕过服务器的安全限制，访问任意的文件（可以使 Web 根目录以外的文件），甚至执行系统命令。</p></blockquote><p><strong>目录遍历漏洞原理</strong></p><blockquote><p>程序在实现上没有充分过滤用户输入的 ../ 之类的目录跳转符，导致恶意用户可以通过提交目录跳转来遍历服务器上的任意文件。</p></blockquote><hr><p><strong>敏感信息泄露</strong></p><blockquote><p><strong><code>由于后台人员的疏忽或者不当的设计，导致不应该被前端用户看到的数据被轻易访问到</code></strong></p></blockquote><p><strong>例如</strong>：</p><blockquote><ul><li>通过访问 url 下的目录，直接可以列出目录下的文件列表；</li><li>输入错误的 url 参数后报错信息里面包含操作系统、中间件、开发语言的版本或者其他信息（SQL 注入）；</li><li>前端的源码（html 、Css 、Js）里面包含了敏感信息，比如后台登录地址、内网接口信息、甚至账户密码等；</li></ul></blockquote><hr><h3 id="常见的源码泄露案例"><a href="#常见的源码泄露案例" class="headerlink" title="常见的源码泄露案例"></a>常见的源码泄露案例</h3><p><strong>目录遍历</strong></p><blockquote><p>当没有默认网页时，在网站上显示 WEB 服务器显示用户列表中的文件和目录，在 apahce 服务器上面默认文化名为 Index.php，当没有上传 index.php 时，服务器就会将文件夹中的内容全部展示出来。</p></blockquote><p><strong>实例</strong></p><blockquote><p><strong><code>攻击者浏览目录并访问 Web 应用程序的源代码，备份和可能的数据库文件。</code></strong></p></blockquote><p><strong>源码泄露案例</strong>：<a href="http://www.sohu.com/a/192064346_653604">链接</a></p><hr><p><strong>Git 源码泄露</strong></p><blockquote><p><strong>漏洞成因</strong>：<br>在允许 Git init 初始化代码库的时候，会在当前目录下面产生一个 Git 的隐藏文件，用来记录代码的变更记录等。在发布代码的时候，把这个 Git 目录没有删除，直接发布了。使用这个文件，可以用来回复源代码。</p><hr><p><strong>漏洞利用</strong>：</p><p>工具：GitHack</p></blockquote><p><strong>DS_Store 文件泄露</strong></p><blockquote><p><strong>漏洞成因</strong>：</p><p>在发布代码时未删除文件夹中隐藏的 DS_Store，被发现后，获取了敏感的文件名等信息。</p><hr><p><strong>漏洞利用</strong>：</p><p><a href="http://example.com/ds_store">实例网址</a></p></blockquote><p><strong>网站备份压缩文件</strong></p><blockquote><p>在网站的使用过程中，往往需要对网站中的文件进行修改、升级。此时就需要对网站整站或者某一页面进行备份。当备份文件或者修改过程中的缓存文件因为各种原因而被留在网站 Web 目录下，该目录又没有设置访问权限时，便有可能导致备份文件或者编辑器的缓存文件被下载，导致敏感信息泄露，给服务器的安全埋下隐患。</p><p><strong>该漏洞的成因主要有以下两种</strong>：</p><ul><li>服务器管理员错误的将网站或者网页备份文件放置到服务器 Web 目录下</li><li>编辑器在使用过程中自动保存的备份文件或者临时文件因为各种原因没有被删除而保存在 Web 目录下。</li></ul></blockquote><hr><h3 id="常见的目录扫描方式"><a href="#常见的目录扫描方式" class="headerlink" title="常见的目录扫描方式"></a>常见的目录扫描方式</h3><ul><li><strong>Robots.txt</strong></li></ul><blockquote><p>网站内的 Robtos 文件</p></blockquote><ul><li><strong>目录爆破</strong></li></ul><blockquote><p>御剑</p><p>Nikto</p><p>Dirbuster （推荐）</p><p>Webdirscan</p><p>自制字典</p><p>等工具</p><p><strong>都是通过字典、枚举进行爆破</strong></p></blockquote><ul><li><strong>第三方资源引用</strong></li></ul><blockquote><p>JS</p><p>外部链接</p><p>内部链接</p><p>SDK （第三方软件开发工具包）</p></blockquote><h3 id="目录扫描工具-Dirbuster"><a href="#目录扫描工具-Dirbuster" class="headerlink" title="目录扫描工具 - Dirbuster"></a>目录扫描工具 - Dirbuster</h3><p><strong>工具说明</strong>：</p><blockquote><p><strong>Owasp 项目</strong></p><hr><p><strong>DirBuster</strong> 是一个多线程的基于 <strong>Java</strong> 的应用程序设计用于暴力破解 <strong>Web</strong> 应用服务器上的目录名和文件的工具</p><p><strong>工作原理</strong></p><hr><p><strong>DirBuster</strong> 是一种履带式（遍历）和粗暴式（爆破）的混合物；</p><p>它遵循它找到的页面中的所有链接，但也为可能的文件尝试不同的名称。这些名称可能位于与我们使用的文件类型的文件中，也可能由 <strong>Dirbuster</strong> 使用 <strong>Pure Brute Force</strong> 选项自动生成（暴力破解），并设置字符集以及生成的单词的最小和最大长度（撞库字典）。</p><p>为确定文件是否存在，<strong>DirBuster</strong> 使用服务器的响应代码。最常见的响应如下：</p><ul><li>200 ok ：文件存在</li><li>404 找不到 404 文件 ：服务器中不存在该文件</li><li>301 301永久移动 ：这是重定向到给定的 URL</li><li>302 302永久移动 ：这是重定向到给定的 URL</li><li>401 Unauthorized ：访问此文件需要身份验证</li><li>403 Forbidden ：请求有效但服务器拒绝响应</li><li>5 开头表示服务器存在问题</li></ul><p><strong><code>DirBuster，它是用来探测 Web 目录结构和隐藏的敏感文件的</code></strong></p></blockquote><hr><p><strong>环境配置</strong>：</p><blockquote><p><strong>使用需求</strong>：</p><p><strong>DirBuster</strong> 是基于 <strong>Java</strong> 的应用程序需要 <strong>Jre</strong> 环境</p><p>Java环境下载：<a href="https://www.java.com/zh_Cn">加载器</a></p><p><code>安装过程中一定要勾选 &quot;add to path&quot; (添加环境变量)</code> </p><hr><p><strong>DirBuster</strong> 下载地址：<a href="https://sourceforge.net./projects/dirbuster/files/">下载地址</a></p><p><strong>安装</strong>：</p><p>Windows 双击 DirBuster.jar 启动软件</p><p>Linux 用户在命令行运行：./DirBustet-1.0-RC1.sh</p><p>Linux 若脚本无执行权限使用：chmod + x./Dirbuster-1.0-RC1.sh 添加权限</p></blockquote><p><strong>工具使用介绍</strong>:</p><p><img src="https://z3.ax1x.com/2021/10/05/4jPnpT.png" alt="DirBustet"></p><p><strong>具体操作步骤</strong>：</p><ul><li>URL 设置</li><li>线程数设置</li><li>选择爆破字典</li><li>取消选择递归查询</li><li>开始运行</li></ul><hr><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p><strong>如果你担心工具有病毒可以采用腾讯的一些工具进行检测</strong></p><p>腾讯检测工具链接：<a href="https://habo.qq.com/tool/index/">链接</a><br>SHODAN ：摄像头监控工具</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】致未来的你，情书Ⅱ</title>
      <link href="/2021/10/02/epistle.2021.10.02.01/"/>
      <url>/2021/10/02/epistle.2021.10.02.01/</url>
      
        <content type="html"><![CDATA[<p>最近一直有这样的念头，要写这样一封情书，给你。</p><p>我也不知道为什么，难道你在某个未知的地方，等着我的这些信息，然后终于寻到，等到彼此吗？</p><p>只是，这个念头，出现了好些日子，一直都没有消散，于是，我想，那就写写吧，毕竟也是一种能量的流动。能量，也没有什么时间和空间，也会反作用在我自己的身上。</p><p>打下这个标题的时候，我是真的写了又删，删了又写。最后还是不免俗套的，起了个很俗很接地气的标题。哈哈。情书是个多美好的字眼。</p><p>其实我知道，你并不在未来，我原本用的是未知，我想你一定是存在的，只是我还不知道。曾经，或者现在，或者未来，如果我们能认出彼此，就一定会知道，我们之间的缘分，一定不是只有这一世那么单薄。所以我想你不仅仅只是未来的。可是我不知道，这一世，你是什么样子，好像未来这个词更可以靠近你。更可以宣示一种，当下没有的状态。哈哈。。</p><p>我是特别的，所以我想，你也一定是独特的。而这样与众不同的气息，在对的人那里，是不是一眼就可以认出，就可以嗅到。我相信，”你给的，正好是我想要的；你说的，恰好我懂”这种默契和灵犀，是写好的剧本，只是我们需要合适的契机，来遇见罢了。</p><p>我有过一段将近十年的婚姻，我知道，这是我必须要经历的剧情。</p><p>而如果是你，你会知道，这个姑娘，原来还一直未长大。你会愿意看着她，陪着她，把那些没有做完的事情，统统做一遍，把那些遗留下来的坑，一个一个填上。在你眼里，只有了解之后的疼惜吧。所以，这是你和别人不同的地方吧。</p><p>我遇见过很有爱的人，内心是善良的，不会吝啬表达爱，也总是会说要相互了解，要共同成长，要一起学习。可是当我望向他的时候，他的眼里没有对于一个人的探索的兴趣，也没有写满的欣赏。我知道，他不是你。</p><p>我遇见过有很深很深的伤痕的人，他们陷在自己的伤痛中，甚至可能都看不见自己的伤痕，在自己的世界里，自己出不来，别人也进不去。这样的人，其实很有生命力，也很有能量，甚至很有爱。但是这些都仿佛冰冻住一样，需要合适的人，来溶解。如果不是我，那么我想，他也不是你。</p><p>我遇见过内心对于爱还有期待，还有幻想的人，但是由于惯性，他们有太多的不安和恐惧。习惯了一个人的生活，一个人的日子，开始觉得恋爱也是麻烦的。渴望被了解，渴望被懂得，却未必渴望相爱。哈哈。。想要开始一段新的感情，又会觉得各种麻烦，各种不安，缩回自己的壳里。习惯是容易的，改变总是困难的。我也不愿意改变这种从形式到内心都是单身的状态，我也觉得恋爱是一件很麻烦的事情，我也知道，关系，亲密关系总是会牵扯出太多的动荡和功课，可是，如果真的是你，我想，我还是会愿意去面对的。</p><p>我不会跟你说，我要怎样怎样。。。让自己成为更好的自己，然后遇见你的时候就怎样怎样，哈哈。。我不是那种妹子。我们可以不用更好，但是需要更真实。我们可以不用追逐任何外在的一切，但是需要内心更有力量。当我自己的能量不足以安定自己的时候，我会觉得，想到你，想到有一个你，一定在某个地方，可以借你的能量来用用。</p><p>为了讨你欢心，做你喜欢的事情；为了你的爱，成为你想要的样子；为了在一起，模糊了自己；这些都不是我们之间的关系和爱情。</p><p>你是你的样子，我是我的样子，看见或知晓，就足够欢喜。</p><p>我们会支持彼此，成为彼此应该是的样子。</p><p>我们会了解和懂得，彼此说了或没有说的言语和情感。</p><p>我们会一起成长，成为真正的成年人。我们也会一直宠溺彼此内心的孩子和童真。</p><p>你懂得，需求的爱与存在的爱，是不同的。</p><p>我们会愿意也会慢慢有能力给予彼此存在的爱与陪伴。</p><p>关系是一场未知的冒险，我们会有足够的耐心，勇气，陪伴和支持彼此，穿越过往，再次生长。</p><p>我不知道，你在哪里，何时会示现。</p><p>我只是相信，你在的吧。</p><p>我也相信，如果是你，来了，就不会走。</p><p>我只是愿意，如果是你，我们再谈一场恋爱。爱情多美好~</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 暴力破解WiFi密码</title>
      <link href="/2021/09/28/kaliLinux_bursting-wifi/"/>
      <url>/2021/09/28/kaliLinux_bursting-wifi/</url>
      
        <content type="html"><![CDATA[<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p><strong>硬件设备</strong>：</p><blockquote><p>操作机器<br>无线渗透网卡 | 有线渗透网卡</p></blockquote><p><strong>软件</strong>：</p><blockquote><p>Kali Linux 系统 （我版本是 2021.1）<br>Aircrack-NG<br>爆破字典 （可以是 Kali Linux 自带的）<br>有 wifi 环境下</p></blockquote><hr><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><p><strong>首先我们要建立监听热点环境机制</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 检查网卡是否连接成功,成功会看到 wlan0 出现</span></span><br><span class="line">ifconfig -a</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">  <span class="built_in">kill</span> 一切干扰无线网卡监听热点的信号</span></span><br><span class="line">airmon-ngcheck kill</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> wlan0是无线网卡的名称,载入网卡开启网络监听</span></span><br><span class="line">airmon-ng start wlan0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此时无线网卡的名称将变成 wlan0mon ,表示开启网络监听</span></span><br><span class="line">ifconfig -a</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 该操作是开始监听周围WiFi热点, 显示各个WiFi热点（ctrl C停止监听）</span></span><br><span class="line">airodump-ng wlan0mon</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 选取WiFi热点进行攻击, 该操作是抓包,当新建一个终端去攻击连接WiFi的设备掉线后，我们抓到的tcp包就是存储在/root/桌面这个路径上</span></span><br><span class="line">airodump-ng -c 频道(ch) --bssid bssid -w /root/桌面 (用来存储抓包的目录) 网卡名</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建一个终端：键入下面代码</span></span><br><span class="line">aireplay-ng -0 0 -c 客户端MAX(STATION) -a bssid 网卡名 (一般为wlan0mon)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此时返回前一个终端,可看到抓到的tcp包,在头部位置</span></span><br><span class="line">WPA handshake :  bssid </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 暴力破解, 解压kali自带的字典文件  路径：/usr/share/wordlists/rockyou.txt.gz</span></span><br><span class="line">gzip -d/usr/share/wordlists/rockyou.txt.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开始爆破 aircrack-ng -w 字典路径（kali有自带的字典文件，解压路径为:/usr/share/wordlists/rockyou.txt） /root/桌面/桌面-01.cap（握手包）</span></span><br><span class="line">aircrack-ng -w /usr/share/wordlists/rockyou.txt /root/桌面-0.1.cap</span><br><span class="line">aircrack-ng -w /usr/share/wordlists/rockyou.txt -b 88:C3:97:31:E8:9D test-01.cap</span><br><span class="line">aircrack-ng -w &lt;指定字典&gt; -b &lt;目的路由MAC地址&gt; &lt;抓到的握手包&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭网络监听</span></span><br><span class="line">airmon-ng stop wlan0mon</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用 crunch</span> </span><br><span class="line">crunch</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 10 10表示制作一个10位数的密码， 012表示密码中包含数字012xy这些元素，/root/12345.txt表示密码文本储存的路径以及名字</span></span><br><span class="line">crunch 10 10 012 xy&gt;&gt;/root/12345.txt</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用aircrack-ng -w /root/12345.txt /root/<span class="built_in">cap</span>/er8-01.cap（ircrack-ng -w 字典路径 握手包路径） 进行wifi密码破解</span></span><br></pre></td></tr></table></figure><h3 id="原理流程介绍"><a href="#原理流程介绍" class="headerlink" title="原理流程介绍"></a>原理流程介绍</h3><p><strong>airepaly-ng -0 0 -c 客户端MAX(STATION) -a bssid 网卡名 (一般为wlan0mon) 代码解释</strong>:</p><blockquote><p>0为用deauth洪水攻击WiFi设备的次数，0为无限，-0 5则攻击5次。攻击原理是：先让设备掉线，设备会再自动连接，并发这个自动连接过程会进行三次握手，会发送tcp包（里面包含加密的密码数据），我方伪装成WiFi热点去窃取该数据包。我方窃取后即可用字典穷举法暴力破解加密的WiFi密码<br>为什么要穷举，而不是直接从数据包里面获取密码？因为数据包里面的密码是哈希加密的，哈希加密只能正向，不能反向推导，所以需要一个个正向推导，直到找到正确的密码。</p></blockquote><blockquote><p>暴力破解就是穷举法，将密码字典中每一个密码依次去与握手包中的密码进行匹配，直到匹配成功。能否成功破解wifi密码取决于密码字典本身是否包含了这个密码。破解的时间取决于CPU的运算速度以及wifi密码本身的复杂程度。如果WiFi密码设得足够复杂，即使有一个好的密码字典，破解成功也可能要数小时甚至数天。</p></blockquote><p><strong>暴力破解思路</strong>:</p><blockquote><p>kali系统接入无线网卡，并通过里面的aircrack程序开始监听周围热点，选择一个WiFi热点，用aircrack去攻击一台连接了该WiFi热点的设备，使其掉线，之后这台设备（手机/电脑）肯定会再次自动来连接，我方利用伪装的挂载设备去接受设备（电脑/手机）发送的tcp三次握手数据包(里面包含了加密的WiFi密码)。此时我们只要用kali里面自带的密码字典文件去穷举该数据包，直到找到WiFi密码为止就成功了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 子域名 Sublist3r</title>
      <link href="/2021/09/25/kaliLinux-Subdomain-Sublist3r/"/>
      <url>/2021/09/25/kaliLinux-Subdomain-Sublist3r/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-子域名-Sublist3r"><a href="#Kali-Linux-子域名-Sublist3r" class="headerlink" title="Kali Linux 子域名 Sublist3r"></a>Kali Linux 子域名 Sublist3r</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><p><code>Lali Linux 系列第四篇信息收集第三章 子域名 Sublist3r</code></p><blockquote><p><strong><code>从几个维度来收集子域名，使用软件进行目录扫描</code></strong></p></blockquote><h3 id="子域名收集的作用"><a href="#子域名收集的作用" class="headerlink" title="子域名收集的作用"></a>子域名收集的作用</h3><blockquote><ul><li>扩大渗透测试范围</li><li>找到目标站点突破口</li><li>业务边界安全</li></ul><p>当然泛解析域名是没有利用价值的</p></blockquote><p><strong>常见子域盲区</strong></p><blockquote><p><code>子域名打开就是404页面、403页面怎么做</code></p><p>案例：<strong>我们如何发现 ucweb.com 的两个 XSS</strong></p><p>示例：<a href="https://nosec.org/home/detail/2011.html">链接</a></p></blockquote><h3 id="收集子域名的方法"><a href="#收集子域名的方法" class="headerlink" title="收集子域名的方法"></a>收集子域名的方法</h3><ul><li><strong>在线收集子域名</strong></li></ul><blockquote><ul><li><strong>谷歌语法</strong></li></ul><p>通过特定站点的范围查询子域：site：baidu.com</p><ul><li><strong>在线爆破</strong></li></ul><p>在线枚举爆破：<a href="http://phpinfo.me/domain/">在线枚举爆破链接</a></p><ul><li><strong>证书搜索</strong></li></ul><p>基于 SSL 证书查询子域：<a href="https://crt.sh/">基于 SSL 证书查询链接</a></p><ul><li><strong>DNS 搜索</strong>（比较精准）</li></ul><p>基于 DNS 记录查询子域：<a href="https://dns.bufferover.run/dns?q=">基于 DNS 记录查询子域链接</a></p></blockquote><ul><li><strong>Fuzzdomain 工具</strong></li></ul><blockquote><p>使用 GitHub 下载相应的子域发现工具（根据文档记得安装依赖）</p></blockquote><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/aboul3la/Sublist3r</span></span><br><span class="line"></span><br><span class="line"># 安装模块（当然它还有一些 DNS 的工具包，可以在说明文档看）</span><br><span class="line">sudo pip3 install -r requirements<span class="variable">.txt</span></span><br><span class="line"></span><br><span class="line"># 枚举目标子域</span><br><span class="line">python sublist3r<span class="variable">.py</span> -d aqlab<span class="variable">.cn</span></span><br><span class="line"></span><br><span class="line"># 枚举子域并且显示开发 <span class="number">80</span> 和 <span class="number">443</span> 端口的子域</span><br><span class="line">python sublist3r<span class="variable">.py</span> -d aqlab<span class="variable">.cn</span> -p <span class="number">80</span>,<span class="number">443</span></span><br><span class="line"></span><br><span class="line"># 枚举目标子域并保存</span><br><span class="line">python shublist3r<span class="variable">.py</span> -d aqlab<span class="variable">.cn</span> -o aqlab<span class="variable">.txt</span></span><br></pre></td></tr></table></figure><ul><li><strong>用户事件</strong></li></ul><blockquote><ul><li><strong>历史漏洞</strong></li></ul><p>乌云镜像：<a href="http://www.anquan.us/">乌云镜像链接</a></p><ul><li><strong>使用手册、通知</strong></li></ul><p>学院通知：<a href="http://dwz.cn/OOWeYYy6">示例链接</a></p></blockquote><hr><h3 id="使用御剑扫描敏感目录"><a href="#使用御剑扫描敏感目录" class="headerlink" title="使用御剑扫描敏感目录"></a>使用御剑扫描敏感目录</h3><blockquote><p><strong><code>御剑是一款很好用的网站后台扫描工具，图形化页面，使用起来简单上手</code></strong></p><p>下载：<a href="https://pan.baidu.com/s/1vkwZ390yS0yS2V07MhgECw">字典链接</a><br>下载：<a href="https://pan.baidu.com/s/1FAmb9EnuuJm2ogJ6BdYkTg">御剑系列链接</a><br>提取码：YJXZ</p></blockquote><p><strong>字典查询</strong></p><blockquote><p>弱口令100</p><p>Web目录字典  - 域名字典</p></blockquote><h3 id="robots-txt-文件的作用"><a href="#robots-txt-文件的作用" class="headerlink" title="robots.txt 文件的作用"></a>robots.txt 文件的作用</h3><blockquote><p><strong>Robits协议</strong></p><p>（也叫爬虫协议、机器人协议等）全称是 “ 网络爬虫排除标准 ” （Robots Exclusion Protocol）,网站通过 Robots 协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取。</p></blockquote><blockquote><p><strong>Robots.txt 文件的重要性</strong></p><p>Robots.txt 是搜索引擎蜘蛛访问网站时要查看的第一个文件，并且会根据 Robots.txt 文件的内容来爬行网站。在某种意义上说，它的一个任务就是指导蜘蛛爬行，减少搜索引擎蜘蛛的工作量。</p></blockquote><blockquote><p><strong>Robots.txt 文件的存放位置</strong></p><p>网站根目录下，通过 “ 域名/robots.txt0 ” 能正常访问即可，如：http://域名/robots.txt</p></blockquote><p><strong>Robots写法</strong>：<a href="https://baijiahao.baidu.com/s?id=1616368344109675728&wfr=spider&for=pc">链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】那些片段里的心绪与渴望</title>
      <link href="/2021/09/22/epistle.2021.9.22.01/"/>
      <url>/2021/09/22/epistle.2021.9.22.01/</url>
      
        <content type="html"><![CDATA[<p>紫霞说，她在等她的齐天大圣，踩着七彩祥云，从天而降。</p><p>我有一个片段，某个人，从天而降，有没有七彩祥云不重要，重要的是，他的眼里有我，望着我，目光温柔而笃定，然后冲我勾勾手指，笃定的吐出三个字“跟我走”，没有勉强，也不容抗拒。哈哈。。。曾经我有一个心理咨询师，在跟他简短的聊了几句之后，我就决定找他做咨询了，他的声音里藏着这样的气质“跟我走”，适合我这样的没有方向的人，哈哈。</p><p>后来的后来，我一直在想，我该自己找到自己的方向，即便没有方向，也需要自己上路。</p><p>突然想起一个记忆的片段，我已经忘记了那个男人的名字，样貌，但是我记得，他牵着我的手，走在我的前面，提着我的行李，带我穿过拥挤的人群。一个属羊的温柔的男人，那个瞬间，我是喜欢他的。</p><p>我时常“看见”这样一个画面，在一片绿油油的草地上，一个蹒跚走路的小女孩，顾自在玩儿，那是她对世界的一种探索吧，也许偶然之间，她发现了一片特别的叶子，一块可爱的石头，然后她拿着自己的胜利品，回头，望向她的爸爸，爸爸宠溺的看着他，目光温柔，满眼都是赞许和鼓励，在这样的眼神和笑容里，小姑娘满足的顾自继续玩耍。</p><p>类似的情景，现在时常发现在我和儿子的场景中，他会跟我炫耀他的游戏成果，他的作品，有时候会希望我看他打游戏。在小孩子的世界中，他自己是很厉害的。</p><p>只是我发现，这对我来说，也是困难的。我们要从一个我们从未习得的部分，去习得爱与温柔，坚定与力量。</p><p>曾经我遇到过一个人类图的解读师，我是只有1%人群的反映者，是很好的管道特质，她带我去认识了她背后的“组织”，我在某个场域中，深深的感受到一种更宏大的力量，有一种眼泪是饱含故乡、回家。 不过他们的领导人表示，我和他们不是一路人。</p><p>我们总是会有机缘，遇见各种各样的人，圈子，人的社会化属性，对于同类总是会有深深的渴望。</p><p>也许意识上，已经知晓天人本一，也已经知晓我们本无任何差别，宇宙与我们，不过是人体与头发丝的关系，每一根头发丝都携带着人体全部的DNA信息。所有的不同的人，仿佛都来自同一个父母的基因，我们都是近亲。我们也深刻的知晓，我们都是有“父母”生养的人，但是我依然会有一种从未见过“父母”的样貌的孤儿的感觉。在这虚空之中，有时候我们可以感受到那种全然的爱，来自“父母”这宇宙之爱。</p><p>我总是“看见”各种战争的画面，遍地残骸，尸横遍野，有一些战争在人类的战场，有一些战争并不在地球之上。</p><p>总有一个虚空的存在，如同宇宙的深处，无穷尽的黑暗，无穷尽的空间，只是在那样的空间飘荡，全然的放松与存在，我享受那样纯粹的存在。那样的感觉一点也不恐怖，而是熟悉的安心的，仿佛我们就来自这样的虚空，又归于这样的虚无。</p><p>男人在性爱之中，总是想要去征服，进入女人的身体，仿佛就是一种征服，在意识被生理接管的时候，头脑和内心被征服的胜利的满足感，成就感充斥。在意识模糊的时候，总有一些言语，会直接通往潜意识的深处。每个人，不同。有些人，需要胜利，需要征服；有些人需要爱；有些人需要某些特殊的关系；有些人需要其他。你需要什么？</p><p>我时常陷入“要我”的迷思，我时常被“我要你”俘虏。这种要和被要，通向潜意识的什么意图？我一直知道，那里还有一座未探索的迷宫。</p><p>你有什么理想？</p><p>有人告诉我，有一份安稳的工作，有不错的收入，结婚，生孩子，然后就像王子和公主一样过着幸福的生活。</p><p>为你的理想干杯，致敬你的理想。理想没有什么好不好，高尚不高尚，只要它会成为某种方向，在召唤你，在让你为之而努力，就很好。</p><p>我很仔细的想了想，我的理想是什么。我以前很喜欢看超女，看最强大脑，我觉得他们有理想，有追求。我没有那种东西。</p><p>我想了想，我唯一可以称之为理想的念头，种子，大概就是，我本来想说普度众生，哈哈，可是没有什么人是需要度的呀，我们唯一需要度的只有自己，所有的人都是来度我们自己的。所以我的理想，大概就只是度我自己吧。可是我的理想，并没有为我带来方向和动力，所以我想，我的理想，还不足以称为理想吧，大概只是一颗还没有种下去的种子，还没有发芽。</p><p>这是一个值得探索和研究的问题，我已经探索了很久很久。</p><p>曾经我以为，我应该要找到某个地方，然后去远行。走了很久很久之后，才知道，我们要找的东西，根本不在一个叫远方的地方，也没有什么别的东西需要去寻找，也没有什么别的东西，需要去求索。如果本自具足，我们就根本不缺什么，也没有什么需要寻找和求索的。</p><p>难道，我们缺的就只是信任？全然的相信？</p><p>应该不是的。</p><p>我们像积满了厚厚的灰尘的钻石，使它看起来一点都不像钻石。我们除了相信它原本就是钻石，还需要一点点把那些灰尘拭去，然后某天终于会印证这本就是钻石吗。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 攻击路线图</title>
      <link href="/2021/09/21/kali-LinuxAttacks01/"/>
      <url>/2021/09/21/kali-LinuxAttacks01/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-攻击路线图"><a href="#Kali-Linux-攻击路线图" class="headerlink" title="Kali Linux 攻击路线图"></a>Kali Linux 攻击路线图</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><h3 id="Web-应用服务"><a href="#Web-应用服务" class="headerlink" title="Web 应用服务"></a>Web 应用服务</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>80 / 443 / 8080</td><td>常见 Web 服务端口</td><td>Web 攻击、爆破、对应服务器版本漏洞</td></tr><tr><td>7001 / 7002</td><td>Weblogic 控制台</td><td>Java 反序列化 、弱口令</td></tr><tr><td>8080 / 8089</td><td>Jboss / Resin?Jetty / Jenkins</td><td>反序列化、控制台弱口令</td></tr><tr><td>9090</td><td>WebShphere 控制台</td><td>Java反序列化、弱口令</td></tr><tr><td>4848</td><td>GlassFish 控制台</td><td>弱口令</td></tr><tr><td>1352</td><td>Lotus domino 邮件服务</td><td>弱口令、信息泄露、爆破</td></tr><tr><td>10000</td><td>Webmin-Web 控制面板</td><td>弱口令</td></tr></tbody></table><h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>22</td><td>SSH 远程连接</td><td>爆破、SSH 隧道及内网代理转发、文件传输</td></tr><tr><td>23</td><td>Teinet 远程连接</td><td>爆破、嗅探、弱口令</td></tr><tr><td>3389</td><td>Rdp 远程桌面连接</td><td>Shift 后门（Win server 2003 以下系统）、爆破</td></tr><tr><td>5900</td><td>VNC</td><td>弱口令爆破</td></tr><tr><td>5632</td><td>PyAnywhere 服务</td><td>抓密码、代码执行</td></tr></tbody></table><h3 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>21 / 22 / 69</td><td>Ftp/TFtp 文件传输协议</td><td>匿名上传、下载、爆破和嗅探</td></tr><tr><td>2049</td><td>NFS 服务</td><td>配置不当</td></tr><tr><td>139</td><td>Samba 服务</td><td>爆破、未授权访问、远程代码执行</td></tr><tr><td>389</td><td>Ldap 目录访问协议</td><td>注入允许、匿名访问、弱口令</td></tr></tbody></table><h3 id="数据库服务"><a href="#数据库服务" class="headerlink" title="数据库服务"></a>数据库服务</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>3306</td><td>MySQL</td><td>注入、提权、爆破</td></tr><tr><td>1433</td><td>MsSQL 数据库</td><td>注入、提权、SA 弱口令、爆破</td></tr><tr><td>1521</td><td>Oracle 数据库</td><td>TNS 爆破、注入、反弹 Shell</td></tr><tr><td>5432</td><td>PostgreSQL</td><td>爆破、注入、弱口令</td></tr><tr><td>27017 / 27018</td><td>MongoDB</td><td>爆破、未授权访问</td></tr><tr><td>6379</td><td>Redis 数据库</td><td>可尝试未授权访问、弱口令、爆破</td></tr><tr><td>5000</td><td>SysBase / DB2 数据库</td><td>爆破、注入</td></tr></tbody></table><h3 id="邮件服务"><a href="#邮件服务" class="headerlink" title="邮件服务"></a>邮件服务</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>25</td><td>SMTP 邮件服务</td><td>邮件伪造</td></tr><tr><td>110</td><td>POP3 协议</td><td>爆破、嗅探</td></tr><tr><td>143</td><td>IMAP 协议</td><td>爆破</td></tr></tbody></table><h3 id="网络常见协议"><a href="#网络常见协议" class="headerlink" title="网络常见协议"></a>网络常见协议</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>53</td><td>DNS 域名系统</td><td>允许区域传送、DNS 劫持、缓存投毒、欺骗</td></tr><tr><td>67 / 68</td><td>DHCP 服务</td><td>劫持、欺骗</td></tr><tr><td>161</td><td>SNMP 协议</td><td>爆破、搜集目标内网信息</td></tr></tbody></table><h3 id="特殊服务端口"><a href="#特殊服务端口" class="headerlink" title="特殊服务端口"></a>特殊服务端口</h3><table><thead><tr><th><strong>端口</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>2181</td><td>Zookeeper 服务</td><td>未授权访问</td></tr><tr><td>8069</td><td>Zabbix 服务</td><td>远程执行、SQL 注入</td></tr><tr><td>9200 / 9300</td><td>Elastcsearch 服务</td><td>远程执行</td></tr><tr><td>11211</td><td>Memcache 服务</td><td>未授权访问</td></tr><tr><td>512 / 513 / 514</td><td>Linux Rexec 服务</td><td>爆破、Rlogin 登陆</td></tr><tr><td>873</td><td>Rsync 服务</td><td>匿名访问、文件上传</td></tr><tr><td>6390</td><td>Svn 服务</td><td>Svn 泄露、未授权访问</td></tr><tr><td>50000</td><td>SAPManagement Console</td><td>远程代码执行</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 网安知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux Nmap 端口扫描</title>
      <link href="/2021/09/21/kali-LinuxPortScanning-Nmap/"/>
      <url>/2021/09/21/kali-LinuxPortScanning-Nmap/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-Nmap-端口扫描"><a href="#Kali-Linux-Nmap-端口扫描" class="headerlink" title="Kali Linux Nmap - 端口扫描"></a>Kali Linux Nmap - 端口扫描</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><p><code>Lali Linux 系列第四篇信息收集第二章 Nmap 端口扫描</code></p><h3 id="Nmap-简介"><a href="#Nmap-简介" class="headerlink" title="Nmap 简介"></a>Nmap 简介</h3><hr><blockquote><p>Nmap （” Network Mapper（网络映射器）”）是一款开放源代码的网络探测和安全审核的工具。它的设计目标是快速地扫描大型网络，当然用它扫描单个主机也没有问题。Nmap 以新颖的方式使用原始IP报文来发现网络上有哪些主机，那些主机提供什么服务（应用程序名和版本），那些服务运行在什么操作系统（包括版本信息），它们使用什么类型的报文过滤器 | 防火墙，以及一堆其他功能。虽然 Nmap 通常用于安全审核，许多系统管理员和网络管理员也用它来做一些日常的工作，比如查看整个网络的信息，管理服务升级计划，以及监视主机和服务的运行。</p></blockquote><p><strong>Nmap 官网</strong>：<a href="www.nmap.org">网址</a></p><hr><h4 id="Nmap-的作用"><a href="#Nmap-的作用" class="headerlink" title="Nmap 的作用"></a>Nmap 的作用</h4><blockquote><ul><li>检测存活在网络上的主机（主机发现）</li><li>检测主机上开放的端口（端口发现或枚举）</li><li>检测到相应的端口（服务发现）的软件和版本</li><li>检测操作系统，硬件地址，以及软件版本</li><li>检测脆弱性的漏洞（Nmap 的脚本）</li></ul></blockquote><hr><h3 id="Nmap-常用扫描指令"><a href="#Nmap-常用扫描指令" class="headerlink" title="Nmap 常用扫描指令"></a>Nmap 常用扫描指令</h3><p><strong>常用的端口扫描指令</strong>：</p><blockquote><p>-sS：TCP SYN扫描</p><p>-sU：UDP扫描</p><p>-sT：TCP扫描</p><p>-sV：扫描系统版本和程序版本号检测</p><p>-sn：只进行主机发现，使用ping扫描来侦测存活主机不进行端口扫描</p><p>-sV：扫描版本号侦测，检测开放端口来判断开放服务，并检测其版本</p><p>-sR：RCP扫描 扫描是否为 PRC 端口，存在 PRC 端口则返回程序和版本号</p><p>-sP：Ping 扫描</p><p>-P0；-Pn：无 Ping 扫描</p><p>-PS：TCP SYN Ping 扫描</p><p>-PA：TCP ACK Ping扫描</p><p>-PU：UDP Ping 扫描</p><p>-PE；-PP；-PM：ICMP Ping Types扫描</p><p>-PR：ARP Ping 扫描</p><p>-p：指定端口号扫描</p><p>-PR：ARP ping 扫描 通常在局域网扫描，使用地址解析协议，本地局域网不会禁止 ARP 请求</p><p>-sL：列表扫描，列出指定网络上的每台主机，默认使用域名解析获取他们的名字</p><p>-v：显示扫描过程</p><p>-w：结果的详细输出</p><p>-F：快速扫描</p><p>-n：禁止反向域名解析</p><p>-R：反向域名解析</p><p>-6：启动 IPV6 扫描</p><p>-o：启动系统探测</p><p>-Pn：禁止ping后扫描：跳过主机发现的过程进行端口扫描</p><p>-A：全面的系统扫描：包括打开操作系统探测、版本探测、脚本扫描、路径扫描</p><p>–scrpt=vuln：全面的漏洞扫描</p><p>–allports：全端口版本探测 启用全端口版本扫描，会跳过9100 TCP 段 只有使用 –allports 才能扫描所有的端口</p><p>–version-intensity：扫描强度设置 扫描强度为 0-9 ，默认为7，最低为0，最高为9</p><p>-system-dns：系统域名解析器，通过直接发送查询到主机上自带配置的域名服务器来解析域名</p><p>-traceroute：路由跟踪，帮助用户了解网络情况，可以查出本地计算机到目标之间所经过的网络节点，并可以看到通过各个节点的时间</p><p>-PY：SCTP INIT Ping扫描 通过 STCP 协议进行扫描主机</p><p>–version-trace：获取详细版本信息 对获取目标主机的额外信息有帮助</p><p>–osscan-guess；–fuzzy：探测系统识别 当 nmap 无法准确识别系统时，我们可以用这两个参数进行大胆的尝试猜测系统</p></blockquote><p><strong>扫描指定IP开放端口</strong>：</p><blockquote><p>nmap -sS -p &lt;端口号&gt; -v 192.168.1.2</p><p>使用半开扫描，指定端口号1-65535，显示扫描过程</p></blockquote><p><strong>穿透防火墙扫描</strong>：</p><blockquote><p>nmap -Pn -A 192.168.1.2</p><p>服务器禁止ping命令，试一试 -Pn，nmap参数配合使用</p></blockquote><p><strong>保存结果到文件</strong>：</p><blockquote><p>-Og &lt;文件名&gt;</p></blockquote><p><strong>漏洞扫描</strong>：</p><blockquote><p>nmap -script=vuln 192.168.1.2</p><p>使用 vuln 脚本进行全面的漏洞扫描</p></blockquote><p><strong>指纹识别扫描</strong>：</p><blockquote><p>nmap -sV -v 192.168.1.2</p><p>扫描系统和程序版本号检测，并输出详细信息</p></blockquote><blockquote><p>在 Root 用户下，直接使用 nmap 目标 启用了 -sS 扫描模式</p><p>nmap -p 80-81 192.168.1.2 选择范围扫描</p><p>nmap -p 80-81 -Pn 192.168.1.2 穿透防火墙扫描</p><p>nmap -p 80-81 -Pn -v 192.168.1.2 显示扫描全过程 </p><p>nmap -A -Pn  192.168.1.2 全局扫描</p></blockquote><h3 id="Nmap-扫描状态"><a href="#Nmap-扫描状态" class="headerlink" title="Nmap 扫描状态"></a>Nmap 扫描状态</h3><blockquote><p>Opend：端口开启</p><p>Closed：端口关闭</p><p>Filtered：端口被过滤，数据没有到达主机，返回结果为空，数据被防火墙</p><p>Unfiltered：未被过滤，数据有到达主机，但是不能识别端口的当前状态</p><p>Open | filtered：开放或者被过滤，端口没有返回值，主要发生在UDP、IP、FIN、NULL 和 Xmas 扫描中</p><p>Closed | filtered：关闭或者被过滤，只发生在IP ID idle 扫描</p></blockquote><p><strong>CVE</strong>:</p><blockquote><p><a href="http://cve.scap.org.cn/">http://cve.scap.org.cn/</a></p><p><a href="http://cve.mitre.org/">http://cve.mitre.org/</a></p><p>信息安全漏洞查询库：我们可以将检测的漏洞编号收集在这里去验证</p></blockquote><h3 id="Nmap-漏洞扫描"><a href="#Nmap-漏洞扫描" class="headerlink" title="Nmap 漏洞扫描"></a>Nmap 漏洞扫描</h3><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><blockquote><p>使用 Nmap 中的脚本进行信息收集</p></blockquote><p><strong>whois 信息收集</strong></p><blockquote><p>脚本名称：whois-domain.nse</p><p>使用方法：nmap –script whois-domain.nse &lt;目标&gt;</p><p>查询目标 whois 信息</p></blockquote><p><strong>DNS 解析查询</strong></p><blockquote><p>脚本名称：dns-brute</p><p>使用方法：nmap –script dns-brute &lt;目标&gt;</p><p>通过 DNS 记录进行查询并且进行爆破</p></blockquote><p><strong>扫描 WEB 漏洞</strong></p><blockquote><p>脚本名称：http:stored-xss.nse</p><p>使用方法：nmap –script http:stored-xss.nse &lt;目标&gt;</p><p>扫描目标是否存在 xss 漏洞</p><p>还有很多 web 扫描脚本</p></blockquote><p><strong>检测 MySQL 密码</strong></p><blockquote><p> 脚本名称：mysql-empty-password</p><p>使用方法：nmap –scirpt=mysql-empty-password &lt;目标&gt;</p><p>检测目标是否存在空口令或者密码为Root</p></blockquote><p><strong>FTP 服务认证</strong></p><blockquote><p>脚本名称：ftp-brute</p><p>使用方法：nmap –script ftp-brute -p 21 &lt;目标&gt;</p><p>爆破目标是否存在弱口令</p><p>使用字典：nmap –script ftp-burute –script-args user=user.txt,passdword=passdword.txt &lt;目标&gt;</p></blockquote><p><strong>wordpress认证</strong></p><blockquote><p>脚本名称：http-wordpress-brute</p><p>使用方法：nmap –script http-wordpress-brute</p><p>使用字典：nmap –script http-wordpress-brute –script-args user=user.txt,passdword=passdword.txt &lt;目标&gt;</p></blockquote><p><strong>Nmap 指定脚本扫描</strong>：</p><blockquote><p>nmap –script=&lt;指定脚本名&gt; &lt;域名&gt;</p><p>nmap –script=smb-vuln-ms17-010 &lt;域名&gt;</p></blockquote><h3 id="Nmap报告输出"><a href="#Nmap报告输出" class="headerlink" title="Nmap报告输出"></a>Nmap报告输出</h3><h4 id="一-标准保存"><a href="#一-标准保存" class="headerlink" title="一 . 标准保存"></a>一 . 标准保存</h4><blockquote><p>nmap -oN &lt;文件&gt;.txt &lt;目标域名&gt;</p><p>标准保存会把输出结果保存到指定文件</p></blockquote><h4 id="二-保存为-XML-格式"><a href="#二-保存为-XML-格式" class="headerlink" title="二 . 保存为 XML 格式"></a>二 . 保存为 XML 格式</h4><blockquote><p>nmap -oX &lt;文件&gt;.xml &lt;目标域名&gt;</p><p>保存为 XML 格式需要用浏览器打开，查看结果</p></blockquote><p><strong>社工密码字典在线生成</strong>：<a href="www.coolrano.com/caimima/">字典链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 网安知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 搜索引擎 &amp; Google 语法</title>
      <link href="/2021/09/18/kali-LinuxICSearchEngine_Google/"/>
      <url>/2021/09/18/kali-LinuxICSearchEngine_Google/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-信息收集第一章-搜索引擎-amp-Google-语法"><a href="#Kali-Linux-信息收集第一章-搜索引擎-amp-Google-语法" class="headerlink" title="Kali Linux 信息收集第一章 搜索引擎 &amp; Google 语法"></a>Kali Linux 信息收集第一章 搜索引擎 &amp; Google 语法</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><p><code>Lali Linux 系列第四篇信息收集第一章 搜索引擎 &amp; Google 语法</code></p><blockquote><p>从零开始的信息收集 | <strong>渗透测试的本质就是信息收集也是信息收集的一个过程，以及在过程中我们会使用到的一些技术</strong></p></blockquote><h4 id="信息收集的作用"><a href="#信息收集的作用" class="headerlink" title="信息收集的作用"></a>信息收集的作用</h4><blockquote><p>信息零碎化，收集的工整性（扩大渗透思路）</p><p><strong>最了解你的人，往往都是你的对手。<code>知己知彼、百战不殆</code></strong></p></blockquote><h5 id="收集哪些信息"><a href="#收集哪些信息" class="headerlink" title="收集哪些信息"></a>收集哪些信息</h5><p><strong>针对 WEB 渗透测试我们需要一下信息</strong></p><blockquote><ul><li>网站的架构</li><li>前端</li><li>后端</li><li>关于网站的一切信息等</li></ul></blockquote><h5 id="信息收集的重要性"><a href="#信息收集的重要性" class="headerlink" title="信息收集的重要性"></a>信息收集的重要性</h5><blockquote><p>知己知彼，百战不殆</p><p>观察、无从下手</p><p>开门有锁 | 需要钥匙</p><p>买U盘的性价比</p><ul><li>亏 | 存在信息差</li><li>赚 | 信息充分利用（优惠价 | 有性价比）</li></ul><p>打错人 | 因为错误信息</p><p>不相关事件 | 蝴蝶效应（学会信息存库）</p></blockquote><h5 id="为什么要进行信息收集"><a href="#为什么要进行信息收集" class="headerlink" title="为什么要进行信息收集"></a>为什么要进行信息收集</h5><blockquote><p>获取信息</p><p>了解对方</p><p>掌握情况</p><p>寻找弱点</p><p>安全短板</p></blockquote><h5 id="信息收集的内容"><a href="#信息收集的内容" class="headerlink" title="信息收集的内容"></a>信息收集的内容</h5><blockquote><p>对于 Web 渗透测试而言，针对目标系统所相关的信息</p></blockquote><table><thead><tr><th><strong>框架</strong></th><th>开发人员</th><th>安全人员</th></tr></thead><tbody><tr><td>前端</td><td>HTML | CSS | JS ···</td><td>指纹识别 | GITHUB/源代码泄露 | 敏感文件及地址</td></tr><tr><td>后端</td><td>PHP | ASP .NET | 容器 | 数据库···</td><td>框架识别 | 容器识别</td></tr><tr><td>中间件</td><td>就是中间件</td><td>组件报错</td></tr><tr><td>系统</td><td>Windows Server | Linux | mac Server</td><td>端口 | 系统识别</td></tr><tr><td>网络架构</td><td>OSI 模型</td><td>域名 | Whois | CDN | C段</td></tr></tbody></table><hr><h4 id="传统搜索引擎"><a href="#传统搜索引擎" class="headerlink" title="传统搜索引擎"></a>传统搜索引擎</h4><blockquote><p>主流搜索引擎分为：百度、Google、360、必应。他们的区别在于收录的结果多少不同。</p></blockquote><h5 id="传统搜索引擎作用"><a href="#传统搜索引擎作用" class="headerlink" title="传统搜索引擎作用"></a>传统搜索引擎作用</h5><blockquote><p>传统的搜索引擎能够有效的抓取对方网站页面内容信息</p><p>传统搜索引擎针对网页内容以及网页标题等相关信息进行抓取，提供给我们进行查阅</p></blockquote><p><strong>可能包含数据</strong></p><blockquote><ul><li>公司动态</li><li>组织文档</li><li>用户名 | 密码</li><li>测试文件</li><li>历史文件</li></ul></blockquote><hr><h4 id="Google-hack-语法"><a href="#Google-hack-语法" class="headerlink" title="Google hack 语法"></a>Google hack 语法</h4><blockquote><p>常见的 Google 语法，帮助我们快速缩小目标搜索范围</p></blockquote><p><strong>语法介绍</strong>：</p><blockquote><p>site：搜索范围限制在某个网站或顶级域名中</p><p>inurl：当我们用 inurl 进行查询的时候，Google 会返回那些在 URL（网址）里面包含了我们查询关键字的网页</p><p>intext：当我们用 intext 进行查询的时候，Google 会返回那些在文本正文里包含了我们查询关键字的网页</p><p>intitle：当我们用 intitle 进行查询的时候，Google 会返回那些在网页标题为查询结果</p><p>···</p></blockquote><p><strong>Google 语法例子</strong></p><blockquote><p>intitle : “netbotz app I i ance” “ok”   — 搜索标题</p><p>inurl : /admin/login.php   — 搜索地址</p><p>inurl : qq.txt  — 搜索文件 </p><p>filetype : xls “username | password” — 搜索文件类型</p><p>intext : password “Login Info” filetyoe : txt — 搜索文件</p><p>filetype:xls”身份证” — 搜索文件类型</p></blockquote><p><strong>扩展思路</strong>：<a href="https://www.exploit-db.com/google-hacking-database">扩展</a>（Google 白帽漏洞数据库）</p><p><strong>Google 镜像</strong></p><blockquote><p><a href="https://www.ggjxz.top/">https://www.ggjxz.top/</a></p><p><a href="https://gg456.top/">https://gg456.top/</a></p><p><a href="https://tools.bugscaner.com/google/">https://tools.bugscaner.com/google/</a></p></blockquote><hr><h4 id="网络空间引擎"><a href="#网络空间引擎" class="headerlink" title="网络空间引擎"></a>网络空间引擎</h4><blockquote><p>基于物联网搜索，搜索联网的网络设备（如打印机、摄像头、智能家居）</p><p>扫描在线的暴露的网络设备：路由器、主机、智能电视、联网设备</p></blockquote><p><strong>网络空间搜索引擎</strong></p><blockquote><ul><li>钟馗之眼：<a href="http://www.zoomeye.org/">http://www.zoomeye.org</a></li><li>Shodan：<a href="https://www.shodan.io/">https://www.shodan.io</a></li><li>fofa：<a href="https://fofa.so/">https://fofa.so/</a></li><li>傻蛋：<a href="https://www.oshadan.com/">https://www.oshadan.com/</a></li><li>Dnsdb 搜索：<a href="https://www,dnsdb.io/zh-cn/">https://www,dnsdb.io/zh-cn/</a></li></ul></blockquote><hr><h4 id="精细化搜索"><a href="#精细化搜索" class="headerlink" title="精细化搜索"></a>精细化搜索</h4><blockquote><p>微信公众号：<a href="https://weixin.sogou.com/">https://weixin.sogou.com/</a></p><p>知乎相关：<a href="https://www.zhihu.com/search?q=">https://www.zhihu.com/search?q=</a></p><p>微博相关：<a href="http://s.weibo.com/?Refer=">http://s.weibo.com/?Refer=</a></p><p>购物：<a href="https://search.jd.com/Search?enc=utf-8&amp;keyword">https://search.jd.com/Search?enc=utf-8&amp;keyword</a></p><p>github：<a href="https://github.com/search?q=">https://github.com/search?q=</a></p><p>贴吧：<a href="http://tieba.baidu.com/f/search/res?qw=">http://tieba.baidu.com/f/search/res?qw=</a></p></blockquote><blockquote><p>例如：</p><p>site:tieba.baidu.com “qq号”</p><p>weixin.sougou.com  — 搜狗微信文章，文章有试用的账户密码等</p></blockquote><hr><h4 id="撰写信息收集报告"><a href="#撰写信息收集报告" class="headerlink" title="撰写信息收集报告"></a>撰写信息收集报告</h4><p><strong>整理信息的方式有很多种，我们的最终目标是整理我们收集到的信息进行分析</strong></p><blockquote><p><strong>一 . 信息收集-环境</strong></p><p>域名：</p><p>脚本语言：<br>数据库：</p><p>中间件：</p><p>服务器系统：</p><p>WAF：无</p><p>CMS 或 框架：</p><p>真实 IP：</p><p>开放的敏感端口：</p><p>历史解析 IP：</p><p>注册邮箱：</p><p>Whois：</p><p>安全措施（如：自定义404、伪静态处理、流量防护等）.. 404</p><p>子域名：（如：自定义404、伪静态处理、流量防护等）</p><p>旁站：</p><p>目录信息：</p><p>····</p><p><strong>二 . 信息收集 - 网络架构</strong></p><ol><li><p>搜索引擎收集目标信息（site + 找后台语法）</p><p><code>外围式信息收集，不经过目标。可避免各种环境因素干扰。应当首选。</code></p><p> 1.1 百度</p><p>​    结果：无可利用</p><p>  1.2 Google</p><p>​    结果：无可利用</p><p>  1.3 必应</p><p>​    结果：无可利用</p><p>  1.4 sougou</p><p>   结果：无可利用</p><p>  1.5 360 搜索</p><p>   结果：无可利用</p></li><li><p>目标爬行</p><p><code>爬行相对于暴力扫描来说动静小很多、且对于目标的收集效率高</code></p><p>注：可使用 Burp suite、Awvs</p><p>结果：</p></li><li><p>暴力猜解</p><p> 3.1 基于字典的扫描。</p><p><code>注：可疑目录继续进行子目标扫描..</code></p><p>结果：</p></li></ol><p><strong>三 . 弱点探测</strong></p><ol><li><p>平台漏扫（+蜘蛛 UA）</p><p>Robots.txt</p></li></ol></blockquote><blockquote><p>域名：xxx</p><p>子域名：xxx</p><p>​              xxx</p><p>脚本语言：xxx</p><p>···</p></blockquote><p><code>还可以通过表格,找到适合自己的信息整理方式。我个人喜欢表格</code></p><hr><p><strong>扩展</strong>：</p><blockquote><p>相应工具有相应的功能</p><ul><li>通过端口扫描搜索数据库信息、端口信息</li><li>域名可以查IP、查旁站、查后台</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网安知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 渗透测试流程以及信息收集</title>
      <link href="/2021/09/16/Kali-LinuxPTPAIillustrate/"/>
      <url>/2021/09/16/Kali-LinuxPTPAIillustrate/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-渗透测试流程以及信息收集"><a href="#Kali-Linux-渗透测试流程以及信息收集" class="headerlink" title="Kali Linux 渗透测试流程以及信息收集"></a>Kali Linux 渗透测试流程以及信息收集</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><p><code>Lali Linux 系列第四篇 开篇说明</code></p><blockquote><p><strong>一切从信息收集开始</strong></p></blockquote><h3 id="信息收集的作用"><a href="#信息收集的作用" class="headerlink" title="信息收集的作用"></a>信息收集的作用</h3><blockquote><p>为什么要进行信息收集？<br>答：当我们要对一个目标进行渗透测试的时候为了防止无从下手，我们首先要获取目标的信息，掌握详细的情况，了解目标的<code>弱点</code>和<code>安全短板</code>，知己知彼，才能百战不殆。<strong>在渗透测试时信息收集是我们的第一步，信息收集的全面性对于后期的渗透工作必为重要，甚至关联到能不能挖掘到漏洞</strong></p></blockquote><hr><h3 id="信息收集什么"><a href="#信息收集什么" class="headerlink" title="信息收集什么"></a>信息收集什么</h3><p><strong>信息收集举例小故事</strong>：</p><blockquote><p>哇！女神！！想去搭讪但是不敢！！！</p><p>她是谁？她是哪个班的？她微信是什么？</p><p>舔狗在寻找目标</p><hr><p>姓名、微信号：目标人物</p><p>班级：目标环境</p><p>爱干的事情、喜好：目标事件</p><hr><p>目标人物：电话、邮箱、密码、whois等</p><p>目标环境：域名、脚本语言、数据库、中间件、框架、cms、开放端口等</p><p>目标事件：历史漏洞、使用手册、使用说明、通告、公众号等</p><p><strong><code>总之就是收集一切对我们有帮助的信息</code></strong></p></blockquote><hr><h4 id="常见的端口服务说明"><a href="#常见的端口服务说明" class="headerlink" title="常见的端口服务说明"></a>常见的端口服务说明</h4><ul><li><strong>数据库</strong>：关系型数据库、NOSQL数据库</li></ul><h5 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h5><blockquote><p>Oracle 数据库 端口：1521</p><p>pointbase 端口：9092</p><p>DB2 端口：5000</p><p>Oracle XDB （XML 数据库）端口：8080</p><p>mySQL 端口：3306  管理员账户：root</p><p>mssSQL 端口：1433 | 1434 管理员账户：sa</p></blockquote><h5 id="N0SQL-数据库"><a href="#N0SQL-数据库" class="headerlink" title="N0SQL 数据库"></a>N0SQL 数据库</h5><blockquote><p>MongoDB 端口：27017</p><p>Redis 端口：6379</p><p>memcached 端口：11211</p></blockquote><p><code>端口是可以修改的</code></p><h4 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h4><blockquote><p>端口：21    FTP（文件传输）协议</p><p>端口：23    Telnet（远程登录）协议</p><p>端口：80 / 8080 / 3128 / 8081 / 9080    HTTP协议代理服务器常用端口号</p><p>端口：110    POP3 Post Office Protocol（E-mail）</p><p>端口：22      SSH（安全登录）、SCP（文件传输）、端口重定向</p><p>端口：69      TFTP（Trivial File Transfer Protocol）</p><p>端口：443    HTTPS（securely transferring web pages）</p><p>端口：3389   远程桌面协议（ROP）</p><p>端口：8080    Oracle XDB FTP 服务</p><p>端口：8080    JBOSS</p><p>端口：8080    TOMCAT</p><p>端口：7001    WebLogic</p><p>端口：9090    Webshpere 管理工具</p><p>端口：9080    Webshpere应用程序</p></blockquote><hr><h4 id="攻击路线"><a href="#攻击路线" class="headerlink" title="攻击路线"></a>攻击路线</h4><h5 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h5><h5 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h5><h5 id="Web应用服务"><a href="#Web应用服务" class="headerlink" title="Web应用服务"></a>Web应用服务</h5><h5 id="数据库服务"><a href="#数据库服务" class="headerlink" title="数据库服务"></a>数据库服务</h5><h5 id="邮件服务"><a href="#邮件服务" class="headerlink" title="邮件服务"></a>邮件服务</h5><h5 id="网络常见协议"><a href="#网络常见协议" class="headerlink" title="网络常见协议"></a>网络常见协议</h5><h5 id="特殊服务端口"><a href="#特殊服务端口" class="headerlink" title="特殊服务端口"></a>特殊服务端口</h5><hr><h3 id="通过信息收集可以做什么"><a href="#通过信息收集可以做什么" class="headerlink" title="通过信息收集可以做什么"></a>通过信息收集可以做什么</h3><blockquote><p><strong>渗透测试的灵魂就是信息收集</strong></p><ul><li>CMS 可能存在通杀漏洞，如果使用了CMS建站我们可以用通杀漏洞直接攻击</li><li>这些危险端口开放了我们就可以尝试入侵。例如 <code>445 | 3306 | 22 | 1433 | 6379</code>可以尝试爆破或者是使用某些端口存在漏洞的服务。而且有可能一台服务器上面不同端口代表着不同的Web网站</li></ul></blockquote><h3 id="信息收集报告编写"><a href="#信息收集报告编写" class="headerlink" title="信息收集报告编写"></a>信息收集报告编写</h3><blockquote><p><strong>编写信息收集报告就是记录我们在信息收集时收集到的信息</strong></p><p>目标人物：电话、邮箱、密码、whois等</p><p>目标环境：域名、脚本语言、数据库、中间件、框架、CMS、开放端口等</p><p>目标事件：历史漏洞、使用手册、使用说明、通知、公众号、手机APP</p><p><code>具体文档可在网上查询</code></p></blockquote><hr><p><strong>目标人物</strong></p><blockquote><p>whois</p><p>网站管理员</p><p>邮箱 | 反查</p><p>电话</p><p>···</p></blockquote><p><strong>目标事件</strong></p><blockquote><p>公众号</p><p>小程序</p><p>手机APP</p><p>通知</p><p>使用说明</p><p>使用手册</p><p>历史漏洞</p><p>···</p></blockquote><p><strong>域名</strong></p><blockquote><p>子域名</p><p>子域名的子域名</p><p>证书</p><p>···</p></blockquote><p><strong>脚本语言</strong></p><blockquote><p>PHP</p><p>JSP</p><p>ASP</p><p>ASPX</p><p>···</p></blockquote><p><strong>数据库</strong></p><blockquote><p>MySQL</p><p>MsSQL</p><p>Oracle</p><p>···</p></blockquote><p><strong>目录爬行</strong></p><blockquote><p>目录遍历</p><p>目录文件</p><p>···</p></blockquote><p><strong>目录浏览</strong>（相当于爬虫）</p><blockquote><p>robots.txt    — 爬虫协议，可能会泄露信息给我们</p><p>目录地址 | 登陆</p><p>框架所开发的路由</p><p>···</p></blockquote><p><strong>源码泄露</strong></p><blockquote><p>.svn</p><p>.git</p><p>备份文件</p><p>···</p></blockquote><p><strong>中间件</strong></p><blockquote><p>IIS</p><p>apache</p><p>nginx</p><p>···</p></blockquote><p><strong>服务器系统</strong></p><blockquote><p>windows</p><p>linux</p><p>···</p></blockquote><p><strong>DNS解析</strong></p><blockquote><p>作为域名和IP地址相互映射的一个分布式数据库，DNS协议运行在UDP协议之上，使用端口号<code>53</code>，在 RFC 文档中 RFC 2181 对 DNS 有规范说明，RTC 2136 对 DNS 的动态更新进行说明 RFC 2308 对 DNS 查询的反向缓存进行说明（可以在漏洞人生查看信息）</p></blockquote><blockquote><p>阿里云</p><p>西部数码</p><p>传送域漏洞</p><p>···</p></blockquote><p><strong>CMS</strong></p><blockquote><p>dedecms</p><p>wordperss</p></blockquote><p><strong>框架</strong></p><blockquote><p>thinkphp</p><p>Struts2</p><p>···</p></blockquote><p><strong>开放端口</strong></p><blockquote><p>HTTP：80</p><p>FTP：21</p><p>MySQL：3306</p><p>···</p></blockquote><p><strong>目标IP</strong></p><blockquote><p>阿里云</p><p>历史解析</p><p>超级ping</p><p>···</p></blockquote><p><strong>C 段地址</strong></p><blockquote><p>IP</p><p>域名</p><p>···</p></blockquote><p><strong>IDC</strong></p><blockquote><p>阿里云</p><p>某某互联</p><p>···</p></blockquote><p><strong>WAF</strong></p><blockquote><p>云盾</p><p>云锁</p><p>安全狗</p><p>安全卫士</p><p>···</p></blockquote><p><strong>图床</strong></p><blockquote><p>七牛云</p><p>阿里云</p><p>···</p></blockquote><p><strong>安全措施</strong></p><blockquote><p>自定义404、伪静态处理、流量防护等</p><p><strong>CDN</strong></p><ul><li>百度云加速</li><li>加速乐</li></ul><p>···</p></blockquote><p><strong>第三方资源引入</strong></p><blockquote><p>SDK</p><p>JS</p><p>···</p></blockquote><p><strong>旁站</strong></p><blockquote><p>上面过程再来一遍</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网安知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali-Linux 软件管理</title>
      <link href="/2021/09/16/kali-LinuxSoftwareManagement/"/>
      <url>/2021/09/16/kali-LinuxSoftwareManagement/</url>
      
        <content type="html"><![CDATA[<h2 id="软件管理"><a href="#软件管理" class="headerlink" title="软件管理"></a>软件管理</h2><p><code>Lali Linux 系列第三篇</code></p><h3 id="Dpkg"><a href="#Dpkg" class="headerlink" title="Dpkg"></a>Dpkg</h3><blockquote><p>dpkg 是一个 Debian 的一个命令行工具，它可以用来安装、删除、构建和管理 Debian 的软件包</p></blockquote><p><strong>安装软件</strong></p><blockquote><p>dpkg -i xxx.deb</p></blockquote><p><code>如果安装出错（缺少依赖），我们需要更新Kali的源</code></p><blockquote><p>apt -get upgrade</p></blockquote><blockquote><p>apt –fix-broken install</p></blockquote><p><strong>卸载软件</strong></p><blockquote><p>dpkg -r xxx.deb    — 删除软件包</p><p>dpkg -r –purge xxx.deb    — 连同配置文件一起删除</p></blockquote><h3 id="Gdebi"><a href="#Gdebi" class="headerlink" title="Gdebi"></a>Gdebi</h3><blockquote><p>gdebi 是一个轻量级的 deb 安装工具，它能代替臃肿的 ubuntu软件中心安装 deb</p></blockquote><p><strong>安装gdebi</strong></p><blockquote><p>sudo apt-get update  — 更新系统</p><p>sudo apt-get install gdebi — 安装软件</p></blockquote><p><strong>安装软件</strong></p><blockquote><p>sudo gdebi xxx.deb 选择Y即可 — 这个是命令行，当然还包含图形化安装</p></blockquote><hr><h3 id="压缩命令"><a href="#压缩命令" class="headerlink" title="压缩命令"></a>压缩命令</h3><p><strong>Linux 下常用的压缩文件格式</strong></p><blockquote><p>.zip</p><p>.gz</p><p>.bz2</p><p>.tar.gz</p><p>.tar.bz2</p></blockquote><h3 id="tar-命令"><a href="#tar-命令" class="headerlink" title="tar 命令"></a>tar 命令</h3><p><strong>打包命令</strong></p><blockquote><p>tar -czvf &lt;打包后的文件名&gt; &lt;源文件名&gt;</p></blockquote><p><strong>解包命令</strong></p><blockquote><p>tar -xzvf &lt;指定解包文件&gt;</p></blockquote><p><strong>tar 打包时的选项</strong></p><blockquote><p>-c    — 打包</p><p>-z    — 打包同时进行压缩</p><p>-v    — 打包时显示出详细信息（可选）</p><p>-f    — 指定打包文件名</p></blockquote><p><strong>tar 解包时的选项</strong></p><blockquote><p>-x    — 解包</p><p>-z    — 解包时同时解压</p><p>-v    — 解包时显示出详细信息（可选）</p><p>-f    — 指定解包的文件名</p></blockquote><p><strong>参考</strong>：<a href="https://blog.csdn.net.weixin_38111957/article/details/80210191">参考文件</a></p><hr><h3 id="搜索命令"><a href="#搜索命令" class="headerlink" title="搜索命令"></a>搜索命令</h3><h4 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h4><blockquote><p>find 是通过搜索目录，并输出一个内容</p></blockquote><p><strong>指定目录查找并输出</strong></p><blockquote><p>find ./kali/ -print</p></blockquote><p><strong>指定目录以 Shell 脚本运行并输出</strong></p><blockquote><p>find ./kali/ -exec ls {} ;</p><p>find ./kali/ -exec ls -l {} ;    — -l查看权限信息</p></blockquote><p><strong>参考</strong>：<a href="https://blog.csdn.net/WX_East/article/details/68530883">参考文件</a></p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali-Linux 基础</title>
      <link href="/2021/09/15/kaliLinux_jcjs/"/>
      <url>/2021/09/15/kaliLinux_jcjs/</url>
      
        <content type="html"><![CDATA[<h2 id="kali-Linux基础"><a href="#kali-Linux基础" class="headerlink" title="kali-Linux基础"></a>kali-Linux基础</h2><p><code>Lali Linux 系列第一篇</code></p><p><strong>在线命令查找：<a href="http://linux.51yip.com/">Linux命令参考</a></strong></p><p><strong>实验没用环境情况下可以在网上搜索在线PHP工具来测试</strong><a href="https://tool.lu/coderunner/">在线代码工具</a></p><h3 id="Kali-Linux代码介绍"><a href="#Kali-Linux代码介绍" class="headerlink" title="Kali-Linux代码介绍"></a>Kali-Linux代码介绍</h3><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">su root --- 切换到Root</span><br><span class="line">sudo su --- 注册Root</span><br><span class="line">Passwd root --- 输入新密码并重新输入改密码，注册Root</span><br><span class="line">:w !sudo tee %  --- 管理员身份强制保存只读文件</span><br><span class="line">lastb --- 查看目前与过去登入系统的用户相关信息</span><br><span class="line">users --- 查看在线用户</span><br><span class="line">chmod --- 权限管理</span><br><span class="line">cat /etc/passwd --- 查看用户信息</span><br><span class="line">cat /etc/group --- 查看用户组</span><br><span class="line">id &lt;用户名&gt; --- 查看指定用户信息</span><br><span class="line">id &lt;组名&gt; --- 查看指定用户组信息</span><br><span class="line">useradd -m &lt;用户名&gt;  --- 自动在home文件夹下创建&lt;用户&gt;目录 - 添加用户</span><br><span class="line">useradd -g &lt;组名&gt; &lt;用户名&gt; --- 指定添加在某个组里</span><br><span class="line">passwod &lt;用户名&gt;  --- 修改用户的新密码</span><br><span class="line">userdel -r &lt;用户名&gt;  --- 删除目录以及用户</span><br><span class="line">groups &lt;用户名&gt;      --- 查看用户组归属</span><br><span class="line">usermod -g &lt;组名&gt; &lt;用户名&gt; --- 添加组 直接添加组用用户从原来组</span><br><span class="line">usermod -a-G &lt;组名&gt; &lt;用户名&gt; --- 追加到新的组</span><br><span class="line">groupdel &lt;组名&gt; 删除组</span><br><span class="line"></span><br><span class="line">cat /etc/shells --- 查看它支持哪些Shells</span><br><span class="line">echo $SHELLS --- 查看使用的哪个Shells，$是变量的意思|区分大小写</span><br><span class="line">service ssh status --- 查看SSH服务是否开启（开机必查）</span><br><span class="line">/etc/init<span class="variable">.d</span>/ssh status --- 查看SSH服务是否开启，方式二</span><br><span class="line">service ssh start --- 开启Shells服务，（必须开启）</span><br><span class="line">systemctl status ssh --- 查看运行状态</span><br><span class="line"></span><br><span class="line">ifconfig --- 查询IP地址，远程连接等需要IP使用（不建议使用固定IP地址）</span><br><span class="line">ifconfig eth0 <span class="number">192</span><span class="variable">.168</span><span class="variable">.1</span><span class="variable">.65</span> --- 给eth0配置固定的IP地址，当然可以固定网关、子网掩码。具体看命令参考的介绍</span><br><span class="line">service apache2 start --- 开启阿帕奇服务（自动开启WEB服务，在eth0端口查看）</span><br><span class="line"></span><br><span class="line">clear --- 刷新屏幕</span><br><span class="line">reset --- 完全刷新终端屏幕</span><br><span class="line">ls --- 查看目录下文件和dir命令一样</span><br><span class="line">ls -a --- 查看隐藏文件 -A取消隐藏文件</span><br><span class="line">ls -l --- 查看文件权限划分（查看文件权限）</span><br><span class="line">ls -lt --- 时间排序查看文件</span><br><span class="line">dir --- 查看目录下文件和ls命令一样</span><br><span class="line">&lt;指令&gt; -help --- 查看指令的帮助命令</span><br><span class="line">pwd --- 查看当前目录</span><br><span class="line">cd --- 切换目录，cd ~ 快速进入root目录|cd / 进入根目录</span><br><span class="line">cp &lt;文件名<span class="number">1</span>&gt;<span class="variable">.txt</span> &lt;目录路径&gt; --- 将文件复制粘贴在一个目录里</span><br><span class="line">mv &lt;文件名&gt; &lt;重命名&gt; --- 文件改名</span><br><span class="line">mv &lt;文件名&gt; &lt;目标路径&gt; --- 移动文件</span><br><span class="line">file &lt;文件名&gt; --- 查看文件的类型信息</span><br><span class="line">tar -czvf &lt;文件&gt;<span class="variable">.tar</span> &lt;文件&gt; ---- 打包压缩文件</span><br><span class="line">tar zxvf &lt;文件&gt;<span class="variable">.tar</span> --- 解压文件</span><br><span class="line">zip --- 压缩zip文件（具体请看命令参考的详细信息）</span><br><span class="line">unzip &lt;文件&gt;<span class="variable">.zip</span> --- 解压zip文件（具体请看命令参考的详细信息）</span><br><span class="line">wget --- 下载命令</span><br><span class="line">git clone &lt;地址&gt; --- 下载git项目，clone克隆的意思</span><br><span class="line">wget &lt;图片地址&gt; --- 下载图片</span><br><span class="line">apt-get install &lt;软件名称&gt; --- 下载安装软件、文件</span><br><span class="line">dpkg -i &lt;安装包名称&gt; --- 安装软件（如果报错请下载依赖：debian或ubuntu软件管理包）</span><br><span class="line">sudo apt-get update --- 更新系统</span><br><span class="line">dpkg -r &lt;安装包名称&gt; --- 删除软件包</span><br><span class="line">dpkg -r --purge &lt;安装包名称&gt; --- 连同配置文件一起删除（卸载）</span><br><span class="line"></span><br><span class="line">rm &lt;文件&gt; --- 删除文件</span><br><span class="line">rm -rf --- 强制删除文件目录等 f是强制删除 r是递归删除</span><br><span class="line">mkdir &lt;文件夹名称&gt; --- 创建一个文件夹</span><br><span class="line">touch &lt;文件名称&gt;<span class="variable">.txt</span> --- 创建文件</span><br><span class="line">vim &lt;文件名&gt;<span class="variable">.txt</span> --- 进入文件命令模式，具体参考VM编辑器的使用</span><br><span class="line">cat &lt;文件名&gt;<span class="variable">.txt</span> --- 查看文件内容（少的）</span><br><span class="line">more &lt;文件名&gt;<span class="variable">.txt</span> --- 查看文件内容（多的）</span><br><span class="line">stat &lt;文件名&gt;<span class="variable">.txt</span> --- 查看文件存储、时间信息</span><br><span class="line">wc &lt;文件名&gt;<span class="variable">.txt</span> --- 查看文件的行数、字数、字节数</span><br><span class="line">man nmap --- 帮助我们查看Nmap软件的帮助文件</span><br><span class="line">find &lt;地址文件etc/passwd&gt; --- 根据要求查找文件也可以查找文件内容（具体请看命令参考的详细信息）</span><br><span class="line">man nmap &gt;&gt; &lt;文件名&gt;<span class="variable">.text</span> --- 将Nmap帮助文件内容输入在文件内</span><br><span class="line">touch -c -t <span class="number">09112003</span> &lt;文件名&gt;<span class="variable">.text</span> --- 将文件时间改为，<span class="number">9</span>月<span class="number">11</span>日<span class="number">20</span>点<span class="number">03</span>分 -c 不创建任何文件</span><br><span class="line">touch -d <span class="string">&quot;2 days ago&quot;</span> &lt;文件名&gt;<span class="variable">.text</span> --- 将文件时间修改为<span class="number">2</span>天以前根据系统时间改（具体请看命令参考的详细信息）</span><br><span class="line"></span><br><span class="line">apt update -y &amp;&amp; apt install xfonts-intl-chinese ttf-wqy-microhei --- 安装字体</span><br><span class="line">echo LANG=<span class="string">&quot;zh_CN.UTF-8&quot;</span> &gt; /etc/<span class="keyword">default</span>/locale --- 官方虚拟机包运行可设置系统语言为中文</span><br><span class="line">dpkg-reconfigure locales --- 更换语言</span><br><span class="line">dpkg-reconfigure locales --- 安装字体</span><br><span class="line">apt-get update &amp;&amp; apt-get <span class="keyword">dist</span>-upgrade -y --- 刷新系统更新源</span><br><span class="line"></span><br><span class="line">rm <span class="comment">/* 删除所有文件、文件目录</span></span><br></pre></td></tr></table></figure><hr><h4 id="Linux常用命令介绍"><a href="#Linux常用命令介绍" class="headerlink" title="Linux常用命令介绍"></a>Linux常用命令介绍</h4><ul><li><strong>帮助命令</strong>：在 Linux 环境中，如果遇到困难，可以使用帮助命令来取得帮助</li><li><strong>常用系统工作命令</strong>：Linux 中有一些是常用的系统工作命令</li><li><strong>系统状态检测命令</strong>：在 Linux 有一些可以查看 Linux 配置系统的基本命令</li><li><strong>工作目录切换命令</strong>：在 Linux中，工作目录指的是用户当前在系统中所处的位置</li><li><strong>文本文件编辑命令</strong></li><li><strong>文件目录管理命令</strong></li><li><strong>打包压缩与搜索命令</strong></li><li><strong>文件管理权限命令</strong>（Linux分为用户和组的感念）</li></ul><p><strong>在线命令查找：<a href="http://linux.51yip.com/">Linux命令参考</a></strong></p><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">echon命令</span><br><span class="line">echon命令用于在终端输出字符串或变量提取后的值，格式为<span class="string">&quot;echo[字符串 | $变量] &quot;</span></span><br><span class="line"></span><br><span class="line">date命令</span><br><span class="line">date命令用于显示以及设置系统的时间或日期，格式为<span class="string">&quot;date [选项] [+指定的格式]&quot;</span></span><br><span class="line"></span><br><span class="line">poweroff命令</span><br><span class="line">poweroff命令用于关闭系统，其格式为poweroff</span><br><span class="line"></span><br><span class="line">top命令</span><br><span class="line">显示当前系统正在执行的进程的相关信息，包括进程ID、内存占用率等,格式为<span class="string">&quot;top [参数]&quot;</span></span><br><span class="line"></span><br><span class="line">ifconfig命令</span><br><span class="line">ifconfig命令用于获取网卡配置与网络状态等信息，格式为<span class="string">&quot;ifconfig [网络设备] [参数]&quot;</span></span><br><span class="line"></span><br><span class="line">uname命令</span><br><span class="line">uname命令用于查看系统内核与系统版本等信息，格式为<span class="string">&quot;uname [-a]&quot;</span></span><br><span class="line"></span><br><span class="line">who命令</span><br><span class="line">who命令用于查看当前登入主机的用户终端信息，格式为<span class="string">&quot;who [参数]&quot;</span></span><br><span class="line"></span><br><span class="line">history命令</span><br><span class="line">history命令用于显示历史执行过的命令，格式为<span class="string">&quot;history [-c]&quot;</span></span><br><span class="line"></span><br><span class="line">pwd命令</span><br><span class="line">pwd命令用于显示用户当前所处的工作目录，格式为<span class="string">&quot;pwd [选项]&quot;</span></span><br><span class="line"></span><br><span class="line">cd命令</span><br><span class="line">cd命令用于切换工作路径，格式为<span class="string">&quot;cd [目录名称]&quot;</span></span><br><span class="line"></span><br><span class="line">ls命令</span><br><span class="line">ls命令用于显示目录中的文件信息，格式位<span class="string">&quot;ls [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">cat命令</span><br><span class="line">cat命令用于查看纯文本文件（内容较少的），格式为<span class="string">&quot;cat [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">more命令</span><br><span class="line">more命令用于查看纯文本文件（内容较多的），格式为<span class="string">&quot;more [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">head命令</span><br><span class="line">head命令用于查看纯文本文档的前N行，格式为<span class="string">&quot;head [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">wc命令</span><br><span class="line">wc命令用于统计指定文本的行数、字数、字节数，格式为<span class="string">&quot;wc [参数] 文本&quot;</span></span><br><span class="line"></span><br><span class="line">stat命令</span><br><span class="line">stat命令用于查看文件的具体存储信息和时间等信息，格式为<span class="string">&quot;stat 文件名称&quot;</span></span><br><span class="line"></span><br><span class="line">touch命令</span><br><span class="line">touch命令用于创建空白文件或设置文件的时间信息，格式为<span class="string">&quot;touch [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">mkdir命令</span><br><span class="line">mkdir命令用于创建空白的文件目录，格式为<span class="string">&quot;mkdir [选项] [目录名称]&quot;</span></span><br><span class="line"></span><br><span class="line">cp命令</span><br><span class="line">cp命令用于复制文件或文件目录，格式为<span class="string">&quot;cp [选项] [源文件] [目标文件]&quot;</span></span><br><span class="line"></span><br><span class="line">mv命令</span><br><span class="line">mv命令用于移动文件或将文件重命名，格式为<span class="string">&quot;mv [选项] [源文件] [目标路径|目标文件名]&quot;</span></span><br><span class="line"></span><br><span class="line">file命令</span><br><span class="line">file命令用于查看文件的类型，格式为<span class="string">&quot;file [文件名]&quot;</span></span><br><span class="line"></span><br><span class="line">tar命令</span><br><span class="line">tar命令用于对文件进行打包压缩或解压，格式为<span class="string">&quot;tar [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">find命令</span><br><span class="line">find命令用于按照指定条件来查找文件，格式为<span class="string">&quot;find [查找路径] [寻找条件] [操作]&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h4 id="常用命令简洁解释"><a href="#常用命令简洁解释" class="headerlink" title="常用命令简洁解释"></a>常用命令简洁解释</h4><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">cat --- 查看文本文件（内容少的）</span><br><span class="line">more --- 查看文本文件（内容多的）</span><br><span class="line">head --- 查看文本文档的前N行</span><br><span class="line">wc --- 统计指定文本的行数、字数、字节数</span><br><span class="line">stat --- 查看文本的存储、时间等信息</span><br><span class="line">echo --- 输出命令，它可以和map帮助命令一样使用帮助我们创建文件</span><br><span class="line">date --- 查看时间</span><br><span class="line">poweroff --- 关机</span><br><span class="line">top --- 和 Windos 任务管理器功能类似（防卡死、检测程序是否执行）</span><br><span class="line">ifconfig --- 查看网络信息</span><br><span class="line">uname --- 查看用户、系统信息</span><br><span class="line">who --- 查看终端、本地连接用户信息</span><br><span class="line">whoami --- 查看自己的用户信息</span><br><span class="line">history --- 查看用户指令历史（默认保存<span class="number">1000</span>条）可查看其他用户的操作</span><br><span class="line">lastb --- 查看目前与过去登入系统的用户相关信息</span><br><span class="line">pwd --- 查看当前目录</span><br><span class="line">cd --- 切换目录</span><br><span class="line">ls --- 查看目录下文件</span><br><span class="line">touch --- 创建空白文件或改变文件时间信息</span><br><span class="line">mkdir --- 创建空白文件目录</span><br><span class="line">cp --- 复制文件或文件目录</span><br><span class="line">mv --- 移动文件或重命名文件</span><br><span class="line">file --- 查看文件类型</span><br><span class="line">tar --- 对文件进行打包压缩或解压</span><br><span class="line">find --- 按照指定条件查找文件</span><br><span class="line">grep --- h</span><br><span class="line">chmod --- 权限管理</span><br><span class="line">wget --- 下载命令</span><br><span class="line">rm --- 删除</span><br><span class="line">rm <span class="comment">/* --- 所有东西</span></span><br></pre></td></tr></table></figure><hr><h4 id="文件管理权限命令"><a href="#文件管理权限命令" class="headerlink" title="文件管理权限命令"></a>文件管理权限命令</h4><p><code>使用 chmod 命令进行文件的权限修改</code></p><blockquote><p>chmod [选项] &lt; 模式, 模式… &gt; &lt;文件名&gt;</p></blockquote><p><strong>文件和目录的权限</strong></p><blockquote><p>Linux 中文件和目录的权限有所不同</p></blockquote><ul><li>文件权限</li></ul><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">r --- 可以读文件  数值为<span class="number">4</span></span><br><span class="line">w --- 可以写文件  数值为<span class="number">2</span></span><br><span class="line">x --- 可以执行文件 数值为<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>目录权限</li></ul><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">x r --- 可以读取（cp）和查看（ls）目录的内容（即文件和目录），同时还需要可执行权限</span><br><span class="line">x w --- 可以在目录里创建文件（touch）和目录（mkdir）和删除文件（rm）和目录（rmdir），同时还需要可执行权限</span><br><span class="line">x x --- 可以进入目录（cd）和执行文件 实践过程</span><br></pre></td></tr></table></figure><hr><h4 id="Kali-Linux-系统更新源"><a href="#Kali-Linux-系统更新源" class="headerlink" title="Kali Linux 系统更新源"></a>Kali Linux 系统更新源</h4><figure class="highlight v"><table><tr><td class="code"><pre><span class="line"># 阿里源</span><br><span class="line">deb https:<span class="comment">//mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></span><br><span class="line"> </span><br><span class="line"># 清华大学</span><br><span class="line">deb https:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span></span><br><span class="line"></span><br><span class="line"># 中科大</span><br><span class="line">deb http:<span class="comment">//mirrors.ustc.edu.cn/kali kali main non-free contrib</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.ustc.edu.cn/kali kali main non-free contrib</span></span><br><span class="line">deb http:<span class="comment">//mirrors.ustc.edu.cn/kali-security kali/updates main contrib non-free</span></span><br></pre></td></tr></table></figure><hr><h3 id="什么是Shell"><a href="#什么是Shell" class="headerlink" title="什么是Shell"></a>什么是Shell</h3><p>在计算机科学中<strong>Shell</strong> 俗称外壳（用来区别于内核），它类似于Windows的DOS系统，能够接收用户的命令并翻译给操作系统执行，<strong>是用户与操作系统（内核）之间的桥梁</strong>。</p><h4 id="查看Shell"><a href="#查看Shell" class="headerlink" title="查看Shell"></a>查看Shell</h4><p>查看系统支持哪些 <strong>Shell（命令）</strong>：<code>eat /etc/shells</code><br>查看正在使用的<strong>Shell</strong>：<code>echo $SHELL</code></p><h5 id="Shell与终端的区别"><a href="#Shell与终端的区别" class="headerlink" title="Shell与终端的区别"></a>Shell与终端的区别</h5><ul><li><strong>终端</strong>：接收用户的输入，并传递给Shell程序，接收程序输出并展示到屏幕。</li><li><strong>Shell</strong>：接收并解析用户的指令给操作系统，将结果输出到终端。建议采用Zsh终端</li></ul><hr><h3 id="VM编辑器"><a href="#VM编辑器" class="headerlink" title="VM编辑器"></a>VM编辑器</h3><p><strong>VM编辑器是所有Unix及Linux系统下标准的编辑器，就相当于Windows系统中的记事本一样</strong>，它的强大不逊色与任何最新的文本编辑器。它是我们使用Linux系统不能缺少的工具。</p><ul><li><strong>vim具有程序编辑的能力，可以以字体颜色辨别语法的正确性，方便程序设计</strong>；</li><li><strong>vim可以当作vi的升级版本，它可以用多种颜色的方式来显示一些特殊的信息</strong>；</li><li><strong>vim会依据文件扩展名或者是文件内的头部信息，判断该文件的内容而自动的执行该程序的语法判断式，再以颜色来显示程序代码与一般信息</strong>；</li><li><strong>vim里面加入了很多额外的功能，例如支持正则表达式的搜索、多文件编辑、块复制等等。这对于我们在Liunx上进行一些配置文件的修改工作是很棒的功能</strong>；</li></ul><h4 id="VM编辑器的使用（代码介绍）"><a href="#VM编辑器的使用（代码介绍）" class="headerlink" title="VM编辑器的使用（代码介绍）"></a>VM编辑器的使用（代码介绍）</h4><p><strong>Vi / Vim 编辑器模式</strong>：</p><ul><li><strong>命令模式（默认</strong>：刚进入Vim的时候，默认就是命令模式，可以复制行、删除行等。</li><li><strong>输入模式</strong>：可以输入内容。</li></ul><p>**模式转化 **:<br>使用insert键切换进入输入模式：命令模式 –&gt; 输入模式：</p><blockquote><p>i ：在当前光标所在字符的前面，转为输入模式<br>I ：在当前光标所在行的行首，转化为输入模式<br>a ：在当前光标所在字符的后面，转化为输入模式<br>A ：在当前光标所在行尾，转化为输入模式<br>o ：在当前光标所在行的下方，新建一行，并转化为输入模式<br>O ：在当前光标所在行的上方，新建一行，并转化为输入模式<br>s ：删除光标所在字符<br>r ：替换光标处字符</p></blockquote><p>输入模式 –&gt; 命令模式</p><blockquote><p><strong>ESC键</strong></p></blockquote><p>关闭、保存文件</p><blockquote><p><strong>Shift+：号</strong>命令模式下：<br>w ：保存<br>q ：退出<br>wq 和 x 都是保存退出<br>q! ：强制退出<br>w! ：强制保存，管理员才有权限</p></blockquote><p>查找</p><blockquote><p><strong>普通模式：</strong><br>/PATTERN ：从当前位置向后查找<br>?PATTERN ：从当前位置向前查找</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali-Linux 用户组</title>
      <link href="/2021/09/15/kaliLinux_UserIntroduction/"/>
      <url>/2021/09/15/kaliLinux_UserIntroduction/</url>
      
        <content type="html"><![CDATA[<h2 id="kali-Linux-用户组"><a href="#kali-Linux-用户组" class="headerlink" title="kali-Linux 用户组"></a>kali-Linux 用户组</h2><p><code>Lali Linux 系列第二篇</code></p><h3 id="用户组介绍"><a href="#用户组介绍" class="headerlink" title="用户组介绍"></a>用户组介绍</h3><blockquote><p>在 Linux 中，每个文件都是属于一个用户的，而每个用户都属于一个用户组</p><p>在 Linux 中，可以同时拥有N多个用户，和用户组</p><p>在 Linux 中，用户分为三类：系统用户（Root用户）、普通用户（指用户所创建的用户）、虚拟用户（指软件所创建的虚拟用户）</p></blockquote><p><strong>用户信息解释</strong></p><blockquote><p>bai : x :1001 : 0 :: /home/bai:/bin/sh</p><p>bai：表示用户名</p><p>“:”：表示分割线</p><p>x：表示密码，我们看到是x，其实密码已经映射到 /etc/shadow 文件中，也就是为了保密</p><p>1001：表示用户UID</p><p>0：表示用户组</p><p>/home/bai：表示用户的目录</p><hr><p>“:”：为分隔符</p><p>第一个root为用户名</p><p>第二个x为密码</p><p>第三个0为UID</p><p>第四个0为GID</p><p>第五个root为用户全名</p><p>第六个/root为用户的家目录所在位置：beinan这个用户</p><p>第七/bin/bash为用户所用SHELL的类型</p></blockquote><p><code>还是不明白可以参考</code>：<a href="https://blog.51cto.com/983836259/1634705">说明文件</a></p><p><strong>用户组解释</strong></p><blockquote><p>root : x : 0 : root,key</p><p>“:”为分隔符</p><p>第一个 root 为组名</p><p>第二个 x 为密码，保存在 shadow文件</p><p>第三个 0 为组ID</p><p>第四个root为组成员</p><p>第五个Key代表第二个组成员</p></blockquote><p><code>还是不明白可以参考</code><a href="https://blog.csdn.net/fu18838928050/article/details/82454127">说明文件</a></p><p><strong>在 Linux 中查看用户信息使用下面的指令</strong></p><blockquote><p>cat /etc/passwd</p></blockquote><p><strong>在 Linux 中查看用户组信息使用下面的指令</strong></p><blockquote><p>cat /etc/group</p></blockquote><p><strong>查看指定的用户信息</strong></p><blockquote><p>id &lt;用户名称&gt;</p></blockquote><p><strong>查看指定的用户组信息</strong></p><blockquote><p>id &lt;组名&gt;</p></blockquote><h3 id="用户组的概念"><a href="#用户组的概念" class="headerlink" title="用户组的概念"></a>用户组的概念</h3><blockquote><p>文件拥有者：就是文件的创作者，谁创建的文件，谁就是文件的所有者</p></blockquote><blockquote><p>用户所在组：当 Linux 当前用户创建了一个文件后，则这个文件所属于的组便是这个用户所在的组</p></blockquote><blockquote><p>其他组：除了文件所有者以及所在组的用户外，系统其他的用户都是文件的其他组</p></blockquote><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">useradd --help  --- 查看帮助命令</span><br><span class="line">cat /etc/passwd--- 查看用户信息</span><br><span class="line">useradd -m &lt;用户名&gt;  --- 自动在home文件夹下创建&lt;用户&gt;目录 - 添加用户</span><br><span class="line">useradd -g &lt;组名&gt; &lt;用户名&gt; --- 指定添加在某个组里</span><br><span class="line">passwod &lt;用户名&gt;  --- 修改用户的新密码</span><br><span class="line">userdel -r &lt;用户名&gt;  --- 删除目录以及用户</span><br><span class="line">groups &lt;用户名&gt;      --- 查看用户组归属</span><br><span class="line">usermod -g &lt;组名&gt; &lt;用户名&gt; --- 添加组 直接添加组用用户从原来组</span><br><span class="line">usermod -a-G &lt;组名&gt; &lt;用户名&gt; --- 追加到新的组</span><br><span class="line">groupdel &lt;组名&gt; 删除组</span><br></pre></td></tr></table></figure><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><h4 id="权限划分"><a href="#权限划分" class="headerlink" title="权限划分"></a>权限划分</h4><blockquote><p>r 表示读文件 数值为4</p><p>w 表示写文件 数值为2</p><p>x 表示执行 数值为1</p></blockquote><h4 id="查看权限"><a href="#查看权限" class="headerlink" title="查看权限"></a>查看权限</h4><blockquote><p>当前目录下 ls -l</p></blockquote><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">d rwx r-x r-x. <span class="number">2</span> root root <span class="number">36864</span> Aug <span class="number">9</span> <span class="number">19</span>:<span class="number">37</span> bin</span><br><span class="line">d rwx r-x r-x. <span class="number">2</span> root root <span class="number">4096</span>  Jun <span class="number">28</span> <span class="number">2011</span> eyc</span><br><span class="line">d rwx r-x r-x. <span class="number">2</span> root root <span class="number">4096</span>  Jun <span class="number">28</span> <span class="number">2011</span> games</span><br><span class="line">d rwx r-x r-x. <span class="number">3</span> root root <span class="number">4096</span>  Aug <span class="number">7</span> <span class="number">19</span>:<span class="number">00</span> <span class="keyword">include</span></span><br></pre></td></tr></table></figure><blockquote><p>d 表示文件类型：</p><ul><li>“-“ 普通文件</li><li>d   目录文件</li><li>p   管理文件</li><li>l    链接文件</li><li>b   块设备文件</li><li>c   字符设备文件</li><li>s   套接字文件   </li></ul></blockquote><blockquote><p>rwx r-x r-x. 表示文件权限：r 读权限 w 写权限 x 可执行权限 - 无权限</p><p>rwx 表示所有者 / 所有者权限</p><p>r-x 组用户权限（一个组中除所有者拥有的权限）</p><p>r-x. 其他用户权限（除过当前有所有者的组，其他组可以进行访问的权限）</p><p>[数值] 对于普通文件：链接数，对于目录文件：第一级子目录数</p><p>root 第一个为用户名</p><p>root 第二个为组名</p><p>[数值] 文件大小（单位：字节）</p><p>Aug 9 19:37 最后修改时间信息</p><p>bin 文件名</p></blockquote><h4 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h4><blockquote><p>chmod 命令</p><p>chmod 777 文件名    给当前文件设置为777权限（可随意操作权限）</p><p>chmod -R 777 目录名    给当前目录递归权限为777</p></blockquote><p><strong>权限演示游戏</strong>：<a href="https://linxz.github.io/tianyizone/linux-chmod-permissions.html">游戏</a></p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】致未来的你，情书</title>
      <link href="/2021/09/15/epistle.2021.9.15.01/"/>
      <url>/2021/09/15/epistle.2021.9.15.01/</url>
      
        <content type="html"><![CDATA[<p>我说，我想感觉你，我刷新这个页面，就有一条新消息。然后我刷新了，就真的有了一条新消息。</p><p>昨儿被闺蜜拉着出去逛公园，赤脚踩在草地上，感受太阳的温度，大地的温度，接一接地气，吸收下大自然的能量。感觉就好像跟你在约会。被你拉出去约会，哈哈。</p><p>我真的是那种，自己没什么想法，不太会主动去做些什么，但是无论把我扔到什么环境，什么事情里面，我都会享受其中的。我一直在想，我要如何可以让自己有能量去行动。</p><p>昨儿去我妈家里，我妈跟我爸，就是没说几句话，就会吵吵嚷嚷的，好像这是他们一种相处的模式，你说，人老了之后，就是找个伴儿吗?哪怕是相互嫌弃相互争吵，而如果真的对方不在了，是不是也会不习惯？我不知道。没有什么人让我特别依赖和依恋，我也没有那样习惯到不习惯的感觉。我前夫离开我的很大的一个原因，可能就是他感觉不到我需要他吧。虽然我明明很热烈，也很渴望炙热的甚至黏腻的感情，哈哈。。。因为不是你吧。。哈哈。。但是我想，如果再和什么人有什么亲密的关系，我一定不希望彼此是争吵的，我是个吵不起来的人，因为不喜欢争执，也不希望彼此是不了解的，没有什么比可以说话更重要。嗯，我就是这样想的。甚至，如果我可以这样和你自言自语，是不是也不需要什么人来说话了。。。毕竟，找个可以说话的人也是很麻烦的事情。哈哈。</p><p>我妈早上来我家搞卫生，我就骑车车出门了，我总觉得，她打扫的时候，我不在是更方便和合适的，他们都有家里的钥匙，进门都自己开，我也时常觉得，这只是一个住的地方。家应该是什么样子？又是什么感觉呢？儿子长大了，开始霸占我的房间，这是一个一居室的老房子，客厅还算比较大，之前特地给他做了高低铺，上面可以睡觉，下面有写字台，最近还给他装了帘子，让他可以有自己的空间，但是他还是喜欢在房间里。我就给他买了小桌子，起码不用趴在床上去写作业。可是我不喜欢，房间里充斥着他的味道（孩子长大了，就有人味了，哈哈。。。），我也不喜欢，房间里，有很多怎么都收拾不干净的东西，写完作业也不会当天晚上把书包就收了，然后地上，就是各种书，衣服。他喜欢玩游戏，玩着玩着就会不自觉得大声说话，我也不喜欢。他还不喜欢洗澡，不会每天都洗澡。</p><p>每个人都是不一样的，就算是我的儿子，我们还有那么多不同的喜好，不同的习惯。我只是不喜欢，这是我们的不同。我也不会要求他必须如何。该说的说了，他也不会改变。而我时常反思，为什么我们总是要要求孩子改变，为什么我们总是要说这是好的习惯，那是不好的习惯，而除了要求孩子，我们还有什么方式可以去让他养成我们自认为好的习惯呢？我对于教育孩子甚至没有兴趣。我觉得孩子该是什么样子就是什么，我对此没有什么焦虑。该踩的坑，该走的路，始终都是要自己去亲历的。很多人接受不了我对孩子这种姿态。我的闺蜜，我的前夫，也总是会劝说和不断的希望影响我。我们都不喜欢被指责，被教导，甚至被要求。而我也时常觉得，我还是得把自己过好了，这是唯一的中心。我把自己过好了，周围的一切自然会有该有的变化。</p><p>所以，关系是很累的。无论怎样的关系，总是伴随着控制和被控制，要求和被要求。讨好迎合。期待或失望。我们都没有长大。所以也给不了什么成熟的关系，和成熟的姿态。可是如果有人愿意，这样一起慢慢的共同的长大，是不是也挺好。你说，我是该死心呢，绝望呢，还是。。。哈哈。。。这真是一个不用动脑子的问题，该发生的自然会发生，该遇见的自然会遇见，这种事情，用力都没用。该有的业力，怎么都逃不掉。没有的缘分，怎么都争取不到。可是不管怎样，我都还是要努力去做自己的功课。我还是要去解决没有什么行动力的问题。</p><p>我早上出门，就想着吃吃吃，不吃不吃，然后我就特别难受。有时候我觉得我对身体也是很陌生的，祂不吃也不饿，吃也不饱。可以吃很少，也可以一直吃，也不会饱。可是祂还是物理存在的。我还是要调整这个物理存在。转了一圈，我什么也没吃，回家了，然后哭了一会。哈。。。我想找人说说话的，也觉得没什么人是可以麻烦的。看，我们活的多乖，多懂事，以及，多孤独。孤独是人的一种属性。那个时候，我想，也许，我们真的是可以一个人走下去的，也不需要多余的人，因为其实没有人会明白和了解另外一个人。没有什么感同身受。甚至我自己也不明白。我不知道什么时候就会有情绪，甚至被情绪控制，那些情绪或者念头好像也跟我没什么关系。有时候走在大街上，也觉得很陌生，仿佛我就不属于这里。我也不知道什么时候，身体的某个部位就开始不舒服。我也不知道什么时候就觉得特别无力，什么都不想做。我上午没有吃什么，回来吃了一个苹果。然后被闺蜜拉出去逛街。看中一个蜡烛的香薰，蜡烛是很好的仪式用品，带着连接的能量。那个味道也很好，是我喜欢的，有安息香的成分。我想这也许也是你给的一种指引。和闺蜜在一起的时候，吃了甜品，提拉米苏的千层，我喜欢提拉米苏，是因为之前有人说，提拉米苏代表带我走，在内心很深的地方，我们总是渴望依靠什么人，总是渴望被抱持。尽管我们也真的要从这样的无依无靠的绝望中，生长出自己的力量。跟闺蜜分开之后，就又一个人去吃吃吃了，我安顿不好情绪，就只能用吃吃吃来安顿。索性，吃完，情绪就安分了。然后又可以好好想想，到底要怎样。</p><p>我坐在店铺靠窗的位置，二楼。看着十字路口，人来人往，车来车往，发呆。一度，我觉得特别痛苦。这条路，走到这个时候，再走下去，还是更深的深渊和黑暗，而且没有人可以同行。你在吗？哈哈。有时候我可以感觉到你，可是我自己很糟糕的时候，我什么也感觉不到。可是除了搞清楚这一切，除了继续走下去，我更没有什么其他有兴趣的事了。走着走着，就把自己活成了一个异类。我不在意，我很享受跟别人不一样。我只是还没有足够的能量，去更快的转变。我也不知道我在等什么。可能还是要持续的去做一些事，不能由着自己，训练只要机械化的执行就可以，而积累到一定程度，自然会发生变化。而想要什么的念头，是不是也需要不断的去强化呢。</p><p>晚上看到笑笑发的广告，关于扁平水晶的，一眼就看中了，很有感觉，就入手了两个。我想这也是你给的启示吧。</p><p>这是一场没有终止的游戏，过了一关，能力提升了一些，就会解锁新的关卡。而对于不断的挑战，不断的解锁新关卡，升起这样的兴趣也需要能量。我知道，只是在这个过程中，只是现在这种不上不下的阶段，会比较痛苦。</p><p>我不想说了，你有什么想要跟我说的。</p><p>给我打气呀，我知道你会说，你看见我很努力，尽管我口口声声觉得我真的没有什么兴趣，也没有什么欲望，但是我也真的从来没有放弃过去让自己生长进化，去提升自己。少想一点，多做一点。可是我也无法掌控我的念头。好吧，无法控制的时候，我就少做一点，但是我得去做，是不是。不能不做。稳定的时候多做一些，不稳定的时候少做一些，但是我不能停下来不做，我得每天做，哪怕做一点点，每日精进，就会趋于更多的稳定，改变也会发生。好吧，我收到了。我记住了。做。稳定就多做点，不稳定也要做。不要不做。那么升级就只剩下时间的问题，迟早会发生。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cent OS 8.0服务器部署Spring Boot</title>
      <link href="/2021/09/11/Cent%20OS%208.0%20_%20Deployment%20server/"/>
      <url>/2021/09/11/Cent%20OS%208.0%20_%20Deployment%20server/</url>
      
        <content type="html"><![CDATA[<h2 id="Cent-OS-8-0服务器部署Spring-Boot"><a href="#Cent-OS-8-0服务器部署Spring-Boot" class="headerlink" title="Cent OS 8.0服务器部署Spring Boot"></a>Cent OS 8.0服务器部署Spring Boot</h2><hr><h3 id="前期准备说明："><a href="#前期准备说明：" class="headerlink" title="前期准备说明："></a>前期准备说明：</h3><ul><li>服务器镜像选择CentOs8.0系统镜像(新手建议选择轻量级应用服务器（主机），个人推荐云服务器)</li><li>需要准备好域名</li><li>需要准备好Spring Boot的项目</li><li>准备好JDK安装包(linux系统X64 Bit)</li><li>我们需要准备两个软件用于本地连接服务器<ul><li>Xshell 7 这个软件用于远程管理服务器（你需要设置好服务器密钥）</li><li>Xftp 7 这个软件用于上传下载服务器文件</li></ul></li><li>我们需要开放需要的端口<ul><li>80 服务器的默认网页端口（建议不要采用默认的）</li><li>8080 自定义TCP协议端口</li><li>22 SSH远程连接端口</li><li>3306 Mysql默认端口等</li></ul></li></ul><hr><h3 id="服务器前期配置："><a href="#服务器前期配置：" class="headerlink" title="服务器前期配置："></a>服务器前期配置：</h3><blockquote><p>我们需要在Data文件夹下新建三个文件夹</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># tmp文件夹我们用于存放临时文件，如安装包等</span><br><span class="line">mkdir -p /data/tmp</span><br><span class="line"># service文件夹我们用于存放服务器软件文件</span><br><span class="line">mkdir -p /data/service</span><br><span class="line"># file文件夹为存放项目的文件夹，根据项目名称命名</span><br><span class="line">mkdir -p /data/file</span><br></pre></td></tr></table></figure><blockquote><p>从oracle官方网站上下载1.8版本中的最新版的JDK。下载完成后，把文件通过XFTP上传到服务器上（tmp文件夹）。接着进行解压和配置环境变量。<br>然后我们需要在服务器中解压（通过Xshell 7连接服务器）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#进入安装包目录</span><br><span class="line">cd /data/tmp</span><br><span class="line">#解压</span><br><span class="line">tar -zxvf jdk-8u281-linux-x64.tar.gz</span><br><span class="line">#把解压出来的文件夹转移到service文件夹的地方</span><br><span class="line">mv /data/tmp/jdk1.8.0_281 /data/service/jdk1.8.0_28</span><br></pre></td></tr></table></figure><blockquote><p>下来我们要进行JDK环境变量的配置(etc文件夹下profile文件)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 修改环境变量/etc/profile</span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><blockquote><p>通过i键进入编写模式，完成后按ESC文件退出编写模式，输入(:wq)保存并退出（配置内容如下）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/data/service/jdk1.8.0_281</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><blockquote><p> 最后我们测试JDK</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#使环境变量生效</span><br><span class="line">source /etc/profile</span><br><span class="line">#检查是否配置成功</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><h3 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h3><blockquote><p>如果之前安装过Mysql，那么我们需要清理干净之前的MySQL文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#卸载旧版本</span><br><span class="line">sudo yum remove docker \</span><br><span class="line">                docker-client \</span><br><span class="line">                docker-client-latest \</span><br><span class="line">                docker-common \</span><br><span class="line">                docker-latest \</span><br><span class="line">                docker-latest-logrotate \</span><br><span class="line">              docker-logrotate \</span><br><span class="line">                docker-engine</span><br></pre></td></tr></table></figure><blockquote><p>我们采用docker的方式安装mysql</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#安装 Docker Engine-Community</span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"># -----分割线</span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">  --add-repo \</span><br><span class="line">  http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"># -----分割线</span><br><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br><span class="line"># ----分割线</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><blockquote><p>如果安装发生错误那么你需要执行一下命令</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">yum install https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm</span><br></pre></td></tr></table></figure><blockquote><p>下面我们进行MySQL的安装</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看可用的 MySQL 版本</span><br><span class="line">docker search mysql</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#拉取8.0.22版本，这里推荐安装和自己项目一致的版本</span><br><span class="line">docker pull mysql:8.0.22</span><br></pre></td></tr></table></figure><blockquote><p>下面我们要对MySQL进行配置</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建配置文件目录</span><br><span class="line">mkdir -p /data/docker/mysql/conf</span><br><span class="line">#进入配置文件目录，添加一个配置文件</span><br><span class="line">vim my.cnf</span><br></pre></td></tr></table></figure><blockquote><p>配置文件内容</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure><blockquote><p>完成配置后我们需要启动镜像 (注意记住自己设置的密码)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#启动镜像</span><br><span class="line">docker run -p 3306:3306 --name mysql -v /data/docker/mysql/conf:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=123456 -d mysql:8.0.22</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#进入docker容器设置env LANG=C.UTF-8</span><br><span class="line">docker exec -it mysql env LANG=C.UTF-8 bash</span><br></pre></td></tr></table></figure><hr><h3 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h3><ul><li>首先我们需要将项目打包（jar包）</li><li>然后我们要设置好MySQL数据表</li><li>然后我们进行服务器部署，首先我们需要查看需要的端口有没有被占用(建议不要使用8080端口)</li></ul><hr><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -anp | grep 8080 </span><br></pre></td></tr></table></figure><blockquote><p>如果端口被占用了，我们需要获取到它PID值</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo lsof -i:8800 </span><br></pre></td></tr></table></figure><blockquote><p>拿到PID值后，我们需要将它Kill掉，留出空位来运行我们的项目</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo kill -9 11356</span><br></pre></td></tr></table></figure><blockquote><p>最后我们执行代码启动项目（断开连接自动停止），***为你的jar包名</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -jar ***.jar</span><br></pre></td></tr></table></figure><blockquote><p>没有问题后我们执行持久运行</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup java -jar  ***.jar &amp;</span><br></pre></td></tr></table></figure><blockquote><p>在后端查看日志</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail -f nohup.out</span><br></pre></td></tr></table></figure><hr><p><strong>至此，CentOs 8.0部署SpringBoot项目已经介绍完成了，当然如果还有疑问或者需要我的素材包请联系我</strong></p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Css初始化Readme文件</title>
      <link href="/2021/09/06/WEB_Css_readme/"/>
      <url>/2021/09/06/WEB_Css_readme/</url>
      
        <content type="html"><![CDATA[<h2 id="Css初始化Readme文件"><a href="#Css初始化Readme文件" class="headerlink" title="Css初始化Readme文件"></a>Css初始化Readme文件</h2><p>以下提供两种方法，请选择合适自己的，<strong>且根据项目实际需求自行修改</strong></p><hr><h3 id="方法一：引用Github中necolas的浏览器初始化"><a href="#方法一：引用Github中necolas的浏览器初始化" class="headerlink" title="方法一：引用Github中necolas的浏览器初始化"></a>方法一：引用Github中necolas的浏览器初始化</h3><p><strong>该方法的目的为</strong>：消除不同浏览器对HTML文本呈现的差异.</p><p>代码演示</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Document</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the line height in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Prevent adjustments of font size after orientation changes in iOS.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  -webkit-text-size-adjust: <span class="number">100%</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Sections</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the margin in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Render the `main` element consistently in IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the font size and margin on `h1` elements within `section` and</span></span><br><span class="line"><span class="comment"> * `article` contexts in Chrome, Firefox, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0.67em</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Grouping content</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Add the correct box sizing in Firefox.</span></span><br><span class="line"><span class="comment"> * 2. Show the overflow in Edge and IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">hr &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: content-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: visible; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inheritance and scaling of font size in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Correct the odd `em` font sizing in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">pre &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Text-level semantics</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the gray background on active links in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Remove the bottom border in Chrome 57-</span></span><br><span class="line"><span class="comment"> * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">abbr</span><span class="selector-attr">[title]</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline; <span class="comment">/* 2 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline dotted; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct font weight in Chrome, Edge, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">b</span>,</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inheritance and scaling of font size in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Correct the odd `em` font sizing in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">kbd</span>,</span><br><span class="line"><span class="selector-tag">samp</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct font size in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">small &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80%</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Prevent `sub` and `sup` elements from affecting the line height in</span></span><br><span class="line"><span class="comment"> * all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">sub,</span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">sub &#123;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">0.25em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">0.5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Embedded content</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the border on images inside links in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">border-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Forms</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Change the font styles in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Remove the margin in Firefox and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span>,</span><br><span class="line">optgroup,</span><br><span class="line">select,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: inherit; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Show the overflow in IE.</span></span><br><span class="line"><span class="comment"> * 1. Show the overflow in Edge.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: visible;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inheritance of text transform in Edge, Firefox, and IE.</span></span><br><span class="line"><span class="comment"> * 1. Remove the inheritance of text transform in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line">select &#123; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">text-transform</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the inability to style clickable types in iOS and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;button&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;reset&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">  -webkit-appearance: button;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inner border and padding in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;button&quot;</span>]::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;reset&quot;</span>]::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;submit&quot;</span>]::-moz-focus-inner &#123;</span><br><span class="line">  border-style: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Restore the focus styles unset by the previous rule.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;button&quot;</span>]:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;reset&quot;</span>]:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;submit&quot;</span>]:-moz-focusring &#123;</span><br><span class="line">  outline: <span class="number">1px</span> dotted ButtonText;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the padding in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">fieldset</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.35em</span> <span class="number">0.75em</span> <span class="number">0.625em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the text wrapping in Edge and IE.</span></span><br><span class="line"><span class="comment"> * 2. Correct the color inheritance from `fieldset` elements in IE.</span></span><br><span class="line"><span class="comment"> * 3. Remove the padding so developers are not caught out when they zero out</span></span><br><span class="line"><span class="comment"> *    `fieldset` elements in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">legend</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">color</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">  <span class="attribute">display</span>: table; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 3 */</span></span><br><span class="line">  <span class="attribute">white-space</span>: normal; <span class="comment">/* 1 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct vertical alignment in Chrome, Firefox, and Opera.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">progress &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the default vertical scrollbar in IE 10+.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Add the correct box sizing in IE 10.</span></span><br><span class="line"><span class="comment"> * 2. Remove the padding in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;checkbox&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;radio&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the cursor style of increment and decrement buttons in Chrome.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;number&quot;</span>]</span>::-webkit-inner-spin-button,</span><br><span class="line">[type=<span class="string">&quot;number&quot;</span>]::-webkit-outer-spin-button &#123;</span><br><span class="line">  height: auto;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the odd appearance in Chrome and Safari.</span></span><br><span class="line"><span class="comment"> * 2. Correct the outline style in Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span> &#123;</span><br><span class="line">  -webkit-appearance: textfield; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">outline-offset</span>: -<span class="number">2px</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inner padding in Chrome and Safari on macOS.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span>::-webkit-search-decoration &#123;</span><br><span class="line">  -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inability to style clickable types in iOS and Safari.</span></span><br><span class="line"><span class="comment"> * 2. Change font properties to `inherit` in Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">::-webkit-file-upload-button &#123;</span><br><span class="line">  -webkit-appearance: button; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Interactive</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Add the correct display in Edge, IE 10+, and Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">details</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Add the correct display in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">summary</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: list-item;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Misc</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct display in IE 10+.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">template &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct display in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[hidden]</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="方式二：常用标签的初始化"><a href="#方式二：常用标签的初始化" class="headerlink" title="方式二：常用标签的初始化"></a>方式二：常用标签的初始化</h3><p><strong>该方法的目的为</strong>：一般标签在浏览器中都有默认样式，例如body标签有默认的外边距，ul有默认的小黑点和内边距，前端程序员在写页面的时候会把这些默认的样式都清除掉，让所有标签的外观效果在所有浏览器表现一致，这个步骤就是css的初始化。</p><p>代码演示</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">HTML</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">dl</span>, <span class="selector-tag">li</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>,</span><br><span class="line">pre, <span class="selector-tag">form</span>, <span class="selector-tag">fieldset</span>, <span class="selector-tag">table</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>:none;</span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">&quot;微软雅黑&quot;</span>,<span class="string">&quot;黑体&quot;</span>,<span class="string">&quot;宋体&quot;</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">address</span>, <span class="selector-tag">caption</span>, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="selector-tag">strong</span>, <span class="selector-tag">th</span>, <span class="selector-tag">var</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>::-ms-clear&#123;</span><br><span class="line">    display:none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">input</span>::-ms-reveal&#123;</span><br><span class="line">    display:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>&#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>::-webkit-input-placeholder&#123;</span><br><span class="line">    color: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>::-ms-input-placeholder&#123;</span><br><span class="line">    color: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>::-moz-placeholder&#123;</span><br><span class="line">    color: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span>,<span class="selector-tag">input</span><span class="selector-attr">[type=button]</span>&#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">button</span><span class="selector-attr">[disabled]</span>, <span class="selector-tag">input</span><span class="selector-attr">[disabled]</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style-type</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*公共方法*/</span></span><br><span class="line"><span class="selector-class">.clear</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearleft</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearright</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.floatleft</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.floatright</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cursor</span>&#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*背景及色值表*/</span></span><br><span class="line"><span class="selector-class">.bg000</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.color000</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用实现"><a href="#调用实现" class="headerlink" title="调用实现"></a>调用实现</h3><p>在项目HTML头文件中声明该文件的地址，<strong>注意路径是否正确</strong></p><p>调用代码演示</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;EN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 进行各个浏览器样式的统一 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./readne.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】醒来，然后去活成你真正想要的样子</title>
      <link href="/2021/09/01/epistle.2021.9.1.01/"/>
      <url>/2021/09/01/epistle.2021.9.1.01/</url>
      
        <content type="html"><![CDATA[<p>我今天被一波能量推动，写下这些文字，尽管我并不确定最终的成文会是什么样子，但是我愿意顺应这样的能量流动，愿意如此真实的面对自己，面对你，面对存在。</p><p>醒来，如同艾米丽唱的醒来。</p><p>你也许听过这样的说词，</p><p>有些人活者，却从未活过。</p><p>有些人活着，却已经死去。</p><p>一个人怎样才算醒来？真的有人是沉睡的吗？</p><p>如果你从未思考过人生，你不会醒来。</p><p>当你开始思考人生，你就一定会醒来。</p><p>总会有某个时刻，</p><p>总会在某个时刻，</p><p>你开始认真的思考：</p><p>你是谁，你活着为了什么，生命对于你而言有什么意义，你要如何活着，你要如何存在。。。</p><p>当你开始思考，当你开始这样问自己，或者问苍天，你就会醒来。</p><p>人生对于你，生活对于你，生命对于你，就已经开始不同。</p><p>无论最终，这一生，你是不是可以找到属于自己的答案，都已经开始不同。</p><p>活着，你想要活成什么样子，</p><p>什么是你真正想要的样子？</p><p>就这个问题，从我真的开始问出这个问题，到今年，我探索了七年。</p><p>我不能说，我已经可以有一个非常明确的答案，但是我有了很多越来越清晰的方向、线索，</p><p>也在这个过程中，一点一点在积累内在的力量，</p><p>这些如同种子，被播撒，在合适的时间，它们会发芽生长。</p><p>如果你还不知道，我真心的想要告诉你，我这样天天在捣鼓这个问题的人，都走了那么多年，</p><p>如果你花了更少的时间或者更多的时间，都没关系，都别着急。</p><p>走吧，继续走吧，会知道方向的，也别错失一路的风景。</p><p>且行且珍惜，且行且欣赏。</p><p>我没有办法告诉你，你想要活成的样子是什么样子，</p><p>因为每个人的这条路，是独一无二的，是私人定制。</p><p>但是我可以跟你分享一些我走过的风景，</p><p>以及一些也许可以称之为经验的东西，</p><p>为了我们各自继续的路，与你共勉。</p><p>你要去的地方，没人会真正知道，除了你。</p><p>如果你也不知道，不要急，只要你想，你一定会知道的。</p><p>要始终相信这一点。</p><p>这趟旅程，没有“别人”的标准，没有“别人”的评价，</p><p>如果你还因为别人的标准或者评价，各种动荡，</p><p>那么，你还没有上路，</p><p>你还没有走在通往自己的神圣之地的路上。</p><p>如果任何人的评价和标准，都不在成为影响你，动摇你的因素，</p><p>如果任何人的评价和标准，你都会心一笑，接受生命各种形式的善意，</p><p>然后依然看起来固执己见，</p><p>我想要非常肯定的告诉你，很好，继续。</p><p>当然，更重要的是，你内在，有这样的笃定，：</p><p>你知道，你在哪里了，你知道你要去哪里了，</p><p>此时，你上路了。</p><p>如果你活成了一个另类，</p><p>你发现你越来越孤独，没有什么人可以理解你，</p><p>你发现你的社交圈越来越窄，几乎没有社交，</p><p>你发现你太格格不入了，</p><p>你怀疑自己可能有各种问题，因为太不合群了。</p><p>我想要非常肯定的告诉你，很好，继续。</p><p>优秀和卓越的都不是寻常人，即便你不优秀也不卓越，你还是独特的你。</p><p>成为独特的你，把你的独特性活出来，你怎么会和“大多数”合群。</p><p>而当你开始接受你的独特性，勇敢的展现出来，</p><p>你一定又会遇见更多“独特“的小众。</p><p>在这条路上，你一定会不断的更新你周围的社交关系，</p><p>甚至不断更新各种被教导的”常识“。</p><p>如果你是一个独特的存在，怎么会有任何模板？</p><p>你喜欢的东西，你适合的东西，你的存在，</p><p>都需要你自己不断的了解和确认。</p><p>如果大众的适合你，你就成了大众。</p><p>所以不要害怕自己活成了一个异类。</p><p>我会跟我很多的个案重复这句话：</p><p>你很好，你很独特，所以你一定会遇见不合群的尴尬。</p><p>你很独特，所以你真的可能会成为大众的异类。</p><p>放心，大胆的走下去吧。</p><p>有一天，你会为自己的独特骄傲。</p><p>有一天，你会为自己活出了一个异类而自豪。</p><p>有一天，你会心甘情愿且无比安心的成为一个低调的异类。</p><p>哈哈。。这是真的，你要相信。</p><p>不要在任何关系中慌乱、责备自己不够好。</p><p>回来，回来，回来。</p><p>回到自己和自己的关系。</p><p>这是我们唯一的、全部的功课。</p><p>多花一些时间在自己的身上。</p><p>享受独处的时光。</p><p>如果没有人了解你，就了解自己。</p><p>如果没有人爱你，就爱自己。</p><p>如果没有人照顾你，就照顾自己。</p><p>然后，某天你会发现，</p><p>当你足够了解自己，你就了解了其他人和世界。</p><p>当你真的开始爱自己，你就可以真心的爱周围的人和世界。</p><p>也许你会说，我不知道，要怎么爱自己。</p><p>把你的双手，放在胸口，时不时的问自己：想要什么，想要怎样，什么感觉。</p><p>就这么简单。</p><p>开始对自己诚实，</p><p>开始从可以为自己做的一件很小很小的事情，</p><p>开始触摸自己的身体，</p><p>开始和自己对话，</p><p>开始，开始，开始。</p><p>用你的双手，堵上耳朵，关掉所有周围对你的评价的声音。</p><p>慢慢了解自己，慢慢自己评价自己，慢慢问自己对一切的认知。</p><p>你在你的世界，你就是王，你就是你自己的标准，唯一的标准。</p><p>用你的双手，蒙上眼睛，闭上眼睛，用心里的眼睛去看，去感觉。</p><p>信任心里的这双眼睛，信任内心的感觉。</p><p>开心的时候，允许自己开心。</p><p>伤心的时候，允许自己哭泣。</p><p>不安的时候，允许自己恐惧。</p><p>感觉，感觉，再感觉。</p><p>如同闻到鲜花的芬芳，如同看见日出日落，如同听见鸟儿欢唱，</p><p>如同尝到香甜的美味，如同触摸自己的肌肤，如同环抱自己的膝盖。</p><p>你所能感觉到的一切，都值得信任。</p><p>用你的双手，触摸自己的胸口、小腹身体的任何部位，</p><p>你能感受到的掌心的温度，</p><p>就是身体给你的爱，就是你给自己的爱。</p><p>爱自己，就那么简单。</p><p>在你感觉冷的时候，感觉孤单无助的时候，感觉紧张兴奋的时候，</p><p>任何时候，通过双手，碰触身体任何部位，</p><p>这便是身体与心的连接。</p><p>这便是宇宙与你的连接。</p><p>掌心的温度，便是你的爱，宇宙的支持。</p><p>如果手很冷，就搓搓，摩擦生热：）</p><p>最后，还有一点，无论你现在在哪里，要去哪里，</p><p>走下去，走下去，走下去。</p><p>无论停下来多久，记得，继续走下去。</p><p>无论是黑暗或者阴暗，记得，起来，继续走下去。</p><p>你要的一切，</p><p>你困惑的一切，</p><p>你未知的一切，</p><p>要走下去，要动起来，要行动，</p><p>才会真正发生。</p><p>不要害怕，不要怀疑，不要放弃。</p><p>因为在这不同的路，相同的道，</p><p>你，并不独孤。</p><p>我在，</p><p>我们，在一起。</p><p>还有，从未离开和消失的，源头。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】陪伴</title>
      <link href="/2021/08/31/epistle.2021.8.31.03/"/>
      <url>/2021/08/31/epistle.2021.8.31.03/</url>
      
        <content type="html"><![CDATA[<p>亲爱的，今天你过的好吗？</p><p>大部分时候，给你写信，还是自言自语的更多，不像是在跟你说话，尽管我总是让信件看起来仿佛在与你对话。</p><p>然后我觉得，与你对话，仿佛自言自语，是一种敞开与坦诚。而，这的确不是一场对话。从你收到我的第一封信开始，你就知道这一点了吧。不过我的头脑，也始终会有一个问题，在关系中，我们是否需要对话？虽然所有的对话也只是不同形式的自言自语，因为我们只会看见投射，不会看见真实的彼此。放开头脑的问题，心是自由的，心是没有问题的，心只会做祂想要做的，心更注重内心的感觉。</p><p>我最近有打坐，今天开始还起早打坐了，因为白天太忙了，没有足够的时间。我的头脑也会犹豫和纠结，我究竟是要按照师傅的功法继续练，还是要放弃。因为我能感觉到身体不喜欢那个刻意的意守丹田，身体更喜欢自然的，体内气血自然的流动。我也不知道，我是该给气血一些规矩，道路，去刻意的引导气的流动，还是应该让他们顺其自然。我知道这只是方式的不同，其实无论哪个方式，心无挂碍的去做就行，我这不就是心有挂碍，不知道该如何，我要再想想，再感觉感觉。</p><p>今天还和孩子发脾气了，我很少发脾气，也很少大声吼他，也很少说教他。不过今天早上吼了他一次，晚上又巴拉巴拉说了一些。我看见我自己的担心，担心他不学无术，每天玩游戏刷抖音以后越来越差，不仅仅是成绩差，学习态度也随便，还懒…总之也没什么好习惯，我自己是很不讲究这些规矩的，但是起码我勤奋，态度端正，该做的事情一定是靠谱的做。我也会纠结和顾虑关于孩子的教育，究竟什么要管，什么可以不管，这个尺度何止智慧两个字。但是我看到更深的担心是，我害怕和担心被别人说，被别人评价我这样为人妈是不行的，是不可以的，是不好的。如果没有人会评价我，父母，前夫，闺蜜，甚至不相关的人，如果没有评价的标准，可能我真的什么都不会做。而未来孩子也会长大，社会系统还是有评价，顺带评价孩子他妈。嗯，我就是很不愿意被人说当妈的不行，哈~这个部分还很值得深入的挖挖。我一直觉得，教育不过是先把自己过好了。一个生命影响另一个生命，那是极其自然的事情。还是能感觉到这个部分，我还是有很多很深的情绪的呀</p><p>今天看到国外的一个疫情的新闻报道，说的是陪伴犬的故事。人这种动物是需要被触摸，被拥抱，需要肌肤接触，需要无条件的爱与接纳，需要被抱持。有时候觉得宠物陪伴的很大能量是，它们不会说话，没有言语的消耗。语言就是一种能量武器呢，哈哈。而且人的场比动物的场更复杂。你一定遇到过一些人，你待在他身边，不说话，都觉得很舒服。反之，也有一些人，靠近就不舒服。</p><p>谢谢你这段日子的陪伴。</p><p>无论你是不是给我写过信，这份陪伴的场和能量也是在的。好吧，你也要谢谢我吗？我收到你的谢谢了。</p><p>深入自己是很难的。经过这段时间，我想我已经准备好，自己一个人去走更深的路了。我打算花更多的时间，深入自己，解剖自己。而这个过程可能真的更自我，更自言自语。谢谢你陪我走到了这里。下面的路，只能我自己去走。</p><p>我的豆瓣会不定期更新，如果你对我的自言自语依然有兴趣。</p><p>我也会继续给你写信，跟你道晚安，像熟悉的老朋友那样问候你，告诉你我的近况，我眼里的世界，以及新奇的故事。只不过，会从每天，调整为不定期。</p><p>相信你会更多的祝福我，因为这表示，我终于准备好，自己一个人，去走更深的路，也表示我成长了，而且还会不断的持续的成长。</p><p>晚安，亲爱的，这是我第45天跟你道晚安。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】幸福的感觉</title>
      <link href="/2021/08/31/epistle.2021.8.31.02/"/>
      <url>/2021/08/31/epistle.2021.8.31.02/</url>
      
        <content type="html"><![CDATA[<p>嗨，你今天过的好吗？</p><p>你在什么时候，会有幸福的感觉？</p><p>晒太阳，好幸福。哈哈。</p><p>忍不住想要跟你分享这样的幸福。</p><p>躺在瑜伽垫上，趴着，露着脚丫子，一定要光脚呢，太阳可以晒到整个身体。一会儿还可以翻身，仰面朝天，用衣服盖住眼睛。</p><p>太阳晒在身上，热热的感觉，就像水波一样，一阵一阵的，难怪会有一个词叫做热浪。</p><p>感受太阳的能量，感受太阳的温热进入身体，是一阵一阵的能量，特别舒服 。</p><p>这真是一种特别简单的幸福，好像一瞬间就变成了一棵树，或者一朵花，也没有任何的思考，只是存在。</p><p>最近这一周的学习，信息量很大，还需要花很多时间消化和练习。</p><p>忙碌的时候，感觉时间过得更快。</p><p>希望你一切都好。</p><p>晚安，亲爱的，这是我第26天跟你道晚安</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】晚安</title>
      <link href="/2021/08/31/epistle.2021.8.31.01/"/>
      <url>/2021/08/31/epistle.2021.8.31.01/</url>
      
        <content type="html"><![CDATA[<p>听课有点累了。</p><p>我准备睡觉了。</p><p>希望你今天过得好。</p><p>还是要跟你说晚安。祝你今夜无梦。</p><p>这是我第27天跟你道晚安。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Spring-Boot的博客开发系统</title>
      <link href="/2021/08/29/Spring_Blog/"/>
      <url>/2021/08/29/Spring_Blog/</url>
      
        <content type="html"><![CDATA[<h1 id="基于Spring-Boot网站架构参考"><a href="#基于Spring-Boot网站架构参考" class="headerlink" title="基于Spring Boot网站架构参考"></a>基于Spring Boot网站架构参考</h1><p>文件说明：</p><table><thead><tr><th>文件名称</th><th>文件说明</th></tr></thead><tbody><tr><td>pom.xml</td><td>项目配置文件</td></tr><tr><td>in.md</td><td>开发参考说明文档</td></tr><tr><td>application.yml</td><td>SpringBoot开发环境配置文件(公共环境下配置)</td></tr><tr><td>application-pro.yml</td><td>SpringBoot开发环境配置文件(生产环境下配置)</td></tr><tr><td>application-dev.yml</td><td>SpringBoot开发环境配置文件(开发环境下配置)</td></tr><tr><td>logback-spring.xml</td><td>日志模块配置文件</td></tr><tr><td>404.html</td><td>404错误页面</td></tr><tr><td>505.html</td><td>505错误页面</td></tr><tr><td>error.html</td><td>BeBug页面</td></tr><tr><td>blogs.html</td><td>后台管理页面</td></tr><tr><td>blogs-input.html</td><td>博客后台发布页面</td></tr><tr><td>type.html</td><td>后台分类管理页面</td></tr><tr><td>type-input.html</td><td>后台分类新增页面</td></tr><tr><td>about.html</td><td>关于我页面</td></tr><tr><td>archives.html</td><td>归档页面</td></tr><tr><td>blog.html</td><td>博客详情页面</td></tr><tr><td>index.html</td><td>博客首页</td></tr><tr><td>tags.html</td><td>标签页面</td></tr><tr><td>type.html</td><td>分类页面</td></tr><tr><td>login.html</td><td>登录页面</td></tr><tr><td>search.html</td><td>搜索页面</td></tr><tr><td>_fragments.html</td><td>动态页面 定义Thymeleaf片段</td></tr><tr><td>IndexController.java</td><td>Web控制器</td></tr><tr><td>LoginController.java</td><td>WEB登录模块控制器</td></tr><tr><td>BlogController.java</td><td>Blog后台页面权限过滤管理类</td></tr><tr><td>TypeController.java</td><td>Web层分类模块操作</td></tr><tr><td>TagController.java</td><td>Web层标签模块操作</td></tr><tr><td>CommentController.java</td><td>评论模块处理</td></tr><tr><td>TypeShowController.java</td><td>分类模块处理</td></tr><tr><td>TagShowController.java</td><td>标签模块处理</td></tr><tr><td>ArchiveShowController.java</td><td>归档模块处理</td></tr><tr><td>AboutShowController.java</td><td>个人模块处理</td></tr><tr><td>LongInterceptor.java</td><td>Blog后台页面权限(登录过滤)类</td></tr><tr><td>WebConfig.html</td><td>Blog后台页面权限(拦截配置) 类</td></tr><tr><td>ControllerExceptionHandler.java</td><td>BeBug拦截器</td></tr><tr><td>NotFoundException.java</td><td>异常类，业务相关（如果没有页面报错404）</td></tr><tr><td>Blog.java</td><td>Blog实体类</td></tr><tr><td>Type.java</td><td>分类实体类</td></tr><tr><td>Tag.java</td><td>标签实体类</td></tr><tr><td>Comment.java</td><td>评论实体类</td></tr><tr><td>User.java</td><td>用户实体类</td></tr><tr><td>UserService.java</td><td>User登录业务逻辑处理接口类</td></tr><tr><td>UserServiceImpl.java</td><td>User登录业务逻辑处理实现类</td></tr><tr><td>TypeService.java</td><td>分类业务逻辑处理接口</td></tr><tr><td>TypeServiceImpl.java</td><td>分类业务逻辑处理实现类</td></tr><tr><td>TagService.java</td><td>标签业务逻辑处理接口</td></tr><tr><td>BlogService.java</td><td>博客业务逻辑处理接口</td></tr><tr><td>BlogServiceImpl.java</td><td>博客业务逻辑处理实现类</td></tr><tr><td>TagServiceImpl.java</td><td>标签业务逻辑处理实现类</td></tr><tr><td>CommentService.java</td><td>评论业务逻辑处理接口</td></tr><tr><td>CommentServiceImpl.java</td><td>评论业务逻辑处理实现类</td></tr><tr><td>UserRepository.java</td><td>引用SpringJPA SQL操作接口</td></tr><tr><td>TypeRepository.java</td><td>分类业务处理 SQL操作接口</td></tr><tr><td>TagRepository.java</td><td>标签业务处理 SQL操作接口</td></tr><tr><td>BlogRepository.java</td><td>博客业务处理 SQL操作接口</td></tr><tr><td>CommentRepository.java</td><td>评论业务处理 SQL操作接口</td></tr><tr><td>BlogQuery.java</td><td>博客搜索查询类</td></tr><tr><td>MD5Utils.java</td><td>MD5加密类</td></tr><tr><td>MyBeanUtils.java</td><td>修复SQL数据修改后为null工具类(过滤掉数据值为null)</td></tr><tr><td>MarkdownUtils.java</td><td>Markdown转换HTML工具类</td></tr><tr><td>messages.properties</td><td>数据配置文件</td></tr></tbody></table><p>项目配置(Jar包)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cxkj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>blog<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>blog<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tymeleaf.version</span>&gt;</span>3.0.2.RELEASE<span class="tag">&lt;/<span class="name">tymeleaf.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tymeleaf-layout-dialect.version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">tymeleaf-layout-dialect.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>后面导入的Jar包(新版本原因曾经的Jar不包含了)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.13.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Markdown转换HTML第三方Jar包配置</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atlassian.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atlassian.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark-ext-heading-anchor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atlassian.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark-ext-gfm-tables<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Application-yml配置文件"><a href="#Application-yml配置文件" class="headerlink" title="Application.yml配置文件"></a>Application.yml配置文件</h3><p>thymeleaf模板配置</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span> </span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML</span></span><br></pre></td></tr></table></figure><p>数据库相关连接配置</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">datasource:</span></span><br><span class="line">  <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/blog?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456789</span></span><br></pre></td></tr></table></figure><p>JPA的连接配置</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">jpa:</span></span><br><span class="line"><span class="attr">hibernate:</span></span><br><span class="line">  <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line"><span class="attr">show-sql:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>日志配置</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">root:</span> <span class="string">info</span></span><br><span class="line">    <span class="attr">com.cxkj:</span> <span class="string">debug</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">log/blog.log</span></span><br></pre></td></tr></table></figure><p>日志的细节操作(logback-spring.xml)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--包含Spring boot对logback日志的默认配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">resource</span>=<span class="string">&quot;org/springframework/boot/logging/logback/defaults.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_FILE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;LOG_FILE:-$&#123;LOG_PATH:-$&#123;LOG_TEMP:-$&#123;java.io.tmpdir:-/tmp&#125;&#125;&#125;/spring.log&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">resource</span>=<span class="string">&quot;org/springframework/boot/logging/logback/console-appender.xml&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--重写了Spring Boot框架 org/springframework/boot/logging/logback/file-appender.xml 配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;TIME_FILE&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;FILE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;LOG_FILE&#125;<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;LOG_FILE&#125;.%d&#123;yyyy-MM-dd&#125;.%i<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--保留历史日志一个月的时间--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            Spring Boot默认情况下，日志文件10M时，会切分日志文件,这样设置日志文件会在100M时切分日志</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>10MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;TIME_FILE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            1、继承Spring boot logback设置（可以在appliaction.yml或者application.properties设置logging.*属性）</span></span><br><span class="line"><span class="comment">            2、重写了默认配置，设置日志文件大小在100MB时，按日期切分日志，切分后目录：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                blog.2017-08-01.0   80MB</span></span><br><span class="line"><span class="comment">                blog.2017-08-01.1   10MB</span></span><br><span class="line"><span class="comment">                blog.2017-08-02.0   56MB</span></span><br><span class="line"><span class="comment">                blog.2017-08-03.0   53MB</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br></pre></td></tr></table></figure><p>公共环境(开发环境指定为dev)</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><p>开发环境</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/blog?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456789</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">root:</span> <span class="string">info</span></span><br><span class="line">    <span class="attr">com.cxkj:</span> <span class="string">debug</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">log/blog-dev.log</span></span><br></pre></td></tr></table></figure><p>生产环境</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/blog?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456789</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">none</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">root:</span> <span class="string">warn</span></span><br><span class="line">    <span class="attr">com.cxkj:</span> <span class="string">info</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">log/blog-pro.log</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">808</span></span><br></pre></td></tr></table></figure><h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><p>IndexController.java Web控制器</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String blog = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (blog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span>  <span class="keyword">new</span> NotFoundException(<span class="string">&quot;博客不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ControllerExceptionHandler.java BeBug拦截器</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.AnnotationUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ControllerExceptionHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">exceptionHandler</span><span class="params">(HttpServletRequest request,Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        logger.error(<span class="string">&quot;Requst URL : &#123;&#125;,Exception : &#123;&#125;&quot;</span>, request.getRequestURI(),e);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (AnnotationUtils.findAnnotation(e.getClass(), ResponseStatus.class) != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">&quot;url&quot;</span>,request.getRequestURI());</span><br><span class="line">        mv.addObject(<span class="string">&quot;exception&quot;</span>,e);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;error/error&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>error.html BeBug页面</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>BeBug<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>BeBug<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;<span class="symbol">&amp;lt;</span>!--&#x27;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;Failed Request URL : &#x27; + $&#123;url&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;Exception message : &#x27; + $&#123;exception.message&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;st : $&#123;exception.stackTrace&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:utext</span>=<span class="string">&quot;$&#123;st&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;--<span class="symbol">&amp;gt;</span>&#x27;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>NotFoundException.java 异常类，业务相关（如果没有页面报错404）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseStatus;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseStatus(HttpStatus.NOT_FOUND)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NotFoundException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotFoundException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotFoundException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotFoundException</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="日志处理"><a href="#日志处理" class="headerlink" title="日志处理"></a>日志处理</h3><p>LogAspect.java 接口记录日志AOP类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.aspect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.cxkj.blog.web.*.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before(&quot;log()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doBefore</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        String url = request.getRequestURL().toString();</span><br><span class="line">        String ip = request.getRemoteAddr();</span><br><span class="line">        String classMethod = joinPoint.getSignature().getDeclaringTypeName() + <span class="string">&quot;.&quot;</span> + joinPoint.getSignature().getName();</span><br><span class="line">        Object[] args = joinPoint.getArgs();</span><br><span class="line">        RequestLog requestLog = <span class="keyword">new</span> RequestLog(url, ip, classMethod, args);</span><br><span class="line">        logger.info(<span class="string">&quot;Request : &#123;&#125;&quot;</span>, requestLog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After(&quot;log()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//logger.info(&quot;------ doAfter ------&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(returning = &quot;result&quot;, pointcut = &quot;log()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfterReturning</span><span class="params">(Object result)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;Result : &#123;&#125;&quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestLog</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String url;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String ip;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String classMethod;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Object[] args;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">RequestLog</span><span class="params">(String url, String ip, String classMethod, Object[] args)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.url = url;</span><br><span class="line">            <span class="keyword">this</span>.ip = ip;</span><br><span class="line">            <span class="keyword">this</span>.classMethod = classMethod;</span><br><span class="line">            <span class="keyword">this</span>.args = args;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&#123;&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;url=&#x27;&quot;</span> + url + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                    <span class="string">&quot;, ip=&#x27;&quot;</span> + ip + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                    <span class="string">&quot;, classMethod=&#x27;&quot;</span> + classMethod + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                    <span class="string">&quot;, args=&quot;</span> + Arrays.toString(args) +</span><br><span class="line">                    <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IndexController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;/&#123;name&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(<span class="meta">@PathVariable</span> Integer id,<span class="meta">@PathVariable</span> String name)</span></span>&#123;</span><br><span class="line">            <span class="comment">/*String blog = null;</span></span><br><span class="line"><span class="comment">            if (blog == null)&#123;</span></span><br><span class="line"><span class="comment">                throw  new NotFoundException(&quot;博客不存在&quot;);</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;------ Index ------&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="页面处理"><a href="#页面处理" class="headerlink" title="页面处理"></a>页面处理</h3><p>IndexController.java Web控制器</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">/*String blog = null;</span></span><br><span class="line"><span class="comment">            if (blog == null)&#123;</span></span><br><span class="line"><span class="comment">                throw  new NotFoundException(&quot;博客不存在&quot;);</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>动态页面 定义Thymeleaf片段</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span> <span class="attr">th:fragment</span>=<span class="string">&quot;head(title)&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span> <span class="attr">th:replace</span>=<span class="string">&quot;$&#123;title&#125;&quot;</span>&gt;</span>详情<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/typo.css&quot;</span> <span class="attr">th:href</span> = <span class="string">&quot;@&#123;/css/typo.css&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/animate.css&quot;</span> <span class="attr">th:href</span> = <span class="string">&quot;@&#123;/css/animate.css&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/lib/prism/prism.css&quot;</span> <span class="attr">th:href</span> = <span class="string">&quot;@&#123;/lib/prism/prism.css&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/lib/tocbot/tocbot.css&quot;</span> <span class="attr">th:href</span> = <span class="string">&quot;@&#123;/lib/tocbot/tocbot.css&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/meCs.css&quot;</span> <span class="attr">th:href</span> = <span class="string">&quot;@&#123;/css/meCs.css&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--导航--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span> <span class="attr">th:fragment</span>=<span class="string">&quot;menu(n)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted attached segment m-padded-tb-mini m-shadow-small&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted secondary stackable menu&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;ui teal header item&quot;</span>&gt;</span>Guest Island<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-item item m-mobile-hide&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;n==1&#125; ? &#x27;active&#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;home icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-item item m-mobile-hide&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;n==2&#125; ? &#x27;active&#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;idea icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>分类<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-item item m-mobile-hide&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;n==3&#125; ? &#x27;active&#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;tags icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>标签<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-item item m-mobile-hide&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;n==4&#125; ? &#x27;active&#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;clone icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>归档<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-item item m-mobile-hide&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;n==5&#125; ? &#x27;active&#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;info icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>关于我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--搜索栏--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right m-item item m-mobile-hide&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui icon inverted transparent input&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search......&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;search link icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui menu toggle black icon button m-right-top m-mobile-show&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;sidebar icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--底部--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">footer</span> <span class="attr">th:fragment</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted vertical segment m-padded-tb-massivs&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui center aligned container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted divided stackable grid&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three wide column&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted link list&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../static/images/WX_Arvin.jpg&quot;</span> <span class="attr">th:src</span> = <span class="string">&quot;@&#123;/images/WX_Arvin.jpg&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui rounded image&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Guest Island&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three wide column&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted header m-text-thin m-text-spaced&quot;</span>&gt;</span>最新博客<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted link list&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>用户故事 (User Story) <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>关于脑机的那些事<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>2021年计划<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three wide column&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted header m-text-thin m-text-spaced&quot;</span>&gt;</span>关于我<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted link list&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>Email: 2644266656@qq.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>QQ: 2644266656<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;seven wide column&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted header m-text-thin m-text-spaced&quot;</span>&gt;</span>Guest Island<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;m-text-thin m-text-spaced m-opacity-mini&quot;</span>&gt;</span>南有孤岛北有亡梦，南柯一梦终是虚无。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted section divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;m-text-thin m-text-spaced m-opacity-tiny&quot;</span>&gt;</span>Copyright <span class="symbol">&amp;copy;</span> 2020-2021 Guest Island Personal blog<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--script--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:fragment</span>=<span class="string">&quot;script&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.2/dist/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/jquery.scrollto@2.1.2/jquery.scrollTo.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/lib/prism/prism.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/lib/prism/prism.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/lib/tocbot/tocbot.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/lib/tocbot/tocbot.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/lib/qrcode/qrcode.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/lib/qrcode/qrcode.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/lib/waypoints/jquery.waypoints.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/lib/waypoints/jquery.waypoints.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实体设计"><a href="#实体设计" class="headerlink" title="实体设计"></a>实体设计</h3><p>blog.java 博客实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_blog&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Blog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String firstPicture;</span><br><span class="line">    <span class="keyword">private</span> String flag;</span><br><span class="line">    <span class="keyword">private</span> Integer views;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> appreciation;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> shareStatement;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> commentabled;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> published;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> recommend;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Type type;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany(cascade = &#123;CascadeType.PERSIST&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Tag&gt; tags = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;blog&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; comments = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Blog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstPicture</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> firstPicture;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstPicture</span><span class="params">(String firstPicture)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstPicture = firstPicture;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFlag</span><span class="params">(String flag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getViews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> views;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setViews</span><span class="params">(Integer views)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.views = views;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAppreciation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> appreciation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAppreciation</span><span class="params">(<span class="keyword">boolean</span> appreciation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.appreciation = appreciation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isShareStatement</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shareStatement;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShareStatement</span><span class="params">(<span class="keyword">boolean</span> shareStatement)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.shareStatement = shareStatement;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCommentabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commentabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCommentabled</span><span class="params">(<span class="keyword">boolean</span> commentabled)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.commentabled = commentabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPublished</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> published;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPublished</span><span class="params">(<span class="keyword">boolean</span> published)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.published = published;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRecommend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> recommend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRecommend</span><span class="params">(<span class="keyword">boolean</span> recommend)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.recommend = recommend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(Date createTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getUpdateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpdateTime</span><span class="params">(Date updateTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.updateTime = updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setType</span><span class="params">(Type type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">getTags</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tags;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTags</span><span class="params">(List&lt;Tag&gt; tags)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tags = tags;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">getComments</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setComments</span><span class="params">(List&lt;Comment&gt; comments)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.comments = comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Blog&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, title=&#x27;&quot;</span> + title + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, content=&#x27;&quot;</span> + content + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, firstPicture=&#x27;&quot;</span> + firstPicture + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, flag=&#x27;&quot;</span> + flag + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, views=&quot;</span> + views +</span><br><span class="line">                <span class="string">&quot;, appreciation=&quot;</span> + appreciation +</span><br><span class="line">                <span class="string">&quot;, shareStatement=&quot;</span> + shareStatement +</span><br><span class="line">                <span class="string">&quot;, commentabled=&quot;</span> + commentabled +</span><br><span class="line">                <span class="string">&quot;, published=&quot;</span> + published +</span><br><span class="line">                <span class="string">&quot;, recommend=&quot;</span> + recommend +</span><br><span class="line">                <span class="string">&quot;, createTime=&quot;</span> + createTime +</span><br><span class="line">                <span class="string">&quot;, updateTime=&quot;</span> + updateTime +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Type.java 分类实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotBlank;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_type&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Type</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;分类名称不能为空哦&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;type&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Blog&gt; blogs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Type</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">getBlogs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlogs</span><span class="params">(List&lt;Blog&gt; blogs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blogs = blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Type&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tag.java 标签实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_tag&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tag</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany(mappedBy = &quot;tags&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Blog&gt; blogs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Tag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">getBlogs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlogs</span><span class="params">(List&lt;Blog&gt; blogs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blogs = blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Tag&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Comment.java 评论实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_comment&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Comment</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Blog blog;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;parentComment&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; replyComments = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Comment parentComment;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Comment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickname</span><span class="params">(String nickname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nickname = nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAvatar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAvatar</span><span class="params">(String avatar)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.avatar = avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(Date createTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blog = blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">getReplyComments</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> replyComments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setReplyComments</span><span class="params">(List&lt;Comment&gt; replyComments)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.replyComments = replyComments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">getParentComment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> parentComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParentComment</span><span class="params">(Comment parentComment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.parentComment = parentComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Comment&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, nickname=&#x27;&quot;</span> + nickname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, content=&#x27;&quot;</span> + content + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, avatar=&#x27;&quot;</span> + avatar + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, createTime=&quot;</span> + createTime +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java 用户实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">    <span class="keyword">private</span> Integer type;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date CreateTime;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;user&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Blog&gt; blogs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickname</span><span class="params">(String nickname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nickname = nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAvatar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAvatar</span><span class="params">(String avatar)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.avatar = avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setType</span><span class="params">(Integer type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> CreateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(Date createTime)</span> </span>&#123;</span><br><span class="line">        CreateTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getUpdateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpdateTime</span><span class="params">(Date updateTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.updateTime = updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">getBlogs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlogs</span><span class="params">(List&lt;Blog&gt; blogs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blogs = blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, nickname=&#x27;&quot;</span> + nickname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, avatar=&#x27;&quot;</span> + avatar + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, type=&quot;</span> + type +</span><br><span class="line">                <span class="string">&quot;, CreateTime=&quot;</span> + CreateTime +</span><br><span class="line">                <span class="string">&quot;, updateTime=&quot;</span> + updateTime +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后台登录业务"><a href="#后台登录业务" class="headerlink" title="后台登录业务"></a>后台登录业务</h3><p>UserService.java User登录业务逻辑处理接口类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function">User <span class="title">checkUser</span><span class="params">(String username,String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java User登录业务逻辑处理实现类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.UserRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">checkUser</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        User user = userRepository.findByUsernameAndPassword(username,password);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserRepository.java 引用SpringJPA SQL操作接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">User</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function">User <span class="title">findByUsernameAndPassword</span><span class="params">(String username,String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LoginController.java WEB登录模块控制器</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.support.RedirectAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">loginPage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;admin/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(<span class="meta">@RequestParam</span> String username, <span class="meta">@RequestParam</span> String password, HttpSession session, RedirectAttributes attributes)</span></span>&#123;</span><br><span class="line">        User user = userService.checkUser(username,password);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>)&#123;</span><br><span class="line">            user.setPassword(<span class="keyword">null</span>);</span><br><span class="line">            session.setAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;admin/index&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;用户名和密码存在异常错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:/admin&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/logout&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">logout</span><span class="params">(HttpSession session)</span></span>&#123;</span><br><span class="line">        session.removeAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/admin&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MD5加密"><a href="#MD5加密" class="headerlink" title="MD5加密"></a>MD5加密</h3><p>MD5Utils.java MD5加密工具类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  MD5加密类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@parm</span> str 要加密的字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 加密后的字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MD5Utils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">code</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MessageDigest md = MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">            md.update(str.getBytes());</span><br><span class="line">            <span class="keyword">byte</span>[] bytesDigest = md.digest();</span><br><span class="line">            <span class="keyword">int</span> i;</span><br><span class="line">            StringBuffer buffer = <span class="keyword">new</span> StringBuffer(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> offset = <span class="number">0</span>;offset&lt;bytesDigest.length;offset++)&#123;</span><br><span class="line">                i = bytesDigest[offset];</span><br><span class="line">                <span class="keyword">if</span> (i&lt;<span class="number">0</span>)</span><br><span class="line">                    i+= <span class="number">256</span>;</span><br><span class="line">                <span class="keyword">if</span> (i&lt;<span class="number">16</span>)</span><br><span class="line">                    buffer.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">                buffer.append(Integer.toHexString(i));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//32位加密</span></span><br><span class="line">            <span class="keyword">return</span> buffer.toString();</span><br><span class="line">            <span class="comment">//16位加密</span></span><br><span class="line">            <span class="comment">//return buffer.toString().substring(8,20);</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//加密测试Main方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(code(<span class="string">&quot;123456789&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.UserRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MD5Utils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">checkUser</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        User user = userRepository.findByUsernameAndPassword(username, MD5Utils.code(password));</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogController.java 博客后台页面权限过滤管理类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blogs&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">blogs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blogs&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LongInterceptor.java Blog后台页面权限(登录过滤)类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.HandlerInterceptorAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongInterceptor</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//WebMvcConfigurerAdapter这个也过时了</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (request.getSession().getAttribute(<span class="string">&quot;user&quot;</span>) == <span class="keyword">null</span>)&#123;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;/admin&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WebConfig.java Blog后台页面权限(拦截配置)类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.interceptor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//WebMvcConfigurerAdapter这个过时了</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LongInterceptor()).addPathPatterns(<span class="string">&quot;/admin/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关于弃用类整改"><a href="#关于弃用类整改" class="headerlink" title="关于弃用类整改"></a>关于弃用类整改</h3><p>LongInterceptor.java Blog后台页面权限(登录过滤)类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.HandlerInterceptorAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (request.getSession().getAttribute(<span class="string">&quot;user&quot;</span>) == <span class="keyword">null</span>)&#123;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;/admin&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WebConfig.java Blog后台页面权限(拦截配置)类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.interceptor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LongInterceptor()).addPathPatterns(<span class="string">&quot;/admin/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分类业务处理"><a href="#分类业务处理" class="headerlink" title="分类业务处理"></a>分类业务处理</h3><p>TypeService.java 分类业务逻辑处理接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TypeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">saveType</span><span class="params">(Type type)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">getType</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">getTypeByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Type&gt; <span class="title">listType</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Type&gt; <span class="title">listType</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">updateType</span><span class="params">(Long id,Type type)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteType</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeServiceImpl.java 分类业务逻辑处理实现类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.TypeRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TypeServiceImpl</span> <span class="keyword">implements</span> <span class="title">TypeService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeRepository typeRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">saveType</span><span class="params">(Type type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.save(type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getType</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getTypeByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Type&gt; <span class="title">listType</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Type&gt; <span class="title">listType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">updateType</span><span class="params">(Long id, Type type)</span> </span>&#123;</span><br><span class="line">        Type t = typeRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;您查找的信息不存在(︶︹︺)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(type,t);</span><br><span class="line">        <span class="keyword">return</span> typeRepository.save(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteType</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        typeRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeRepository.java 分类业务 SQL操作接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TypeRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Type</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeController.java Web层操作</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.support.RedirectAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TypeController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/types&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">types</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;id&quot;&#125;,direction = Sort.Direction.DESC)</span></span></span></span><br><span class="line"><span class="params"><span class="function">                                Pageable pageable, Model model)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,typeService.listType(pageable));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/admin/types&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/types/input&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">input</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;type&quot;</span>,<span class="keyword">new</span> Type());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/admin/types-input&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;types/&#123;id&#125;/input&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">editInput</span><span class="params">(<span class="meta">@PathVariable</span> Long id, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;type&quot;</span>,typeService.getType(id));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/admin/types-input&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/types&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(<span class="meta">@Valid</span> Type type, BindingResult result, RedirectAttributes attributes)</span></span>&#123;</span><br><span class="line">        Type typename = typeService.getTypeByName(type.getName());</span><br><span class="line">        <span class="keyword">if</span> (typename != <span class="keyword">null</span>)&#123;</span><br><span class="line">            result.rejectValue(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;nameError&quot;</span>,<span class="string">&quot;管理员大大，这个分类已经有了。((٩(//̀Д/́/)۶))做人要专一哦！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;/admin/types-input&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Type t =  typeService.saveType(type);</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;新增失败 ﾍ(;´Д｀ﾍ),管理员大大重新试下吧&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;新增成功 ≖‿≖✧ 快去发布新内容吧&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:../admin/types&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/types/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">editPost</span><span class="params">(<span class="meta">@Valid</span> Type type, BindingResult result,<span class="meta">@PathVariable</span> Long id, RedirectAttributes attributes)</span></span>&#123;</span><br><span class="line">        Type typename = typeService.getTypeByName(type.getName());</span><br><span class="line">        <span class="keyword">if</span> (typename != <span class="keyword">null</span>)&#123;</span><br><span class="line">            result.rejectValue(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;nameError&quot;</span>,<span class="string">&quot;管理员大大，这个分类已经有了。((٩(//̀Д/́/)۶))做人要专一哦！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;/admin/types-input&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Type t =  typeService.updateType(id,type);</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;更新失败（⊙o⊙）,管理员大大重新试下吧&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;更新成功 (≥◇≤) 快去发布新内容吧&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:../types&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/types/&#123;id&#125;/delete&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable</span> Long id,RedirectAttributes attributes)</span></span>&#123;</span><br><span class="line">        typeService.deleteType(id);</span><br><span class="line">        attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;删除成功,可能是管理员大大不喜欢它了吧(.◕ฺˇд ˇ◕ฺ)&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:../&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="标签业务处理"><a href="#标签业务处理" class="headerlink" title="标签业务处理"></a>标签业务处理</h3><p>TagService.java 标签业务逻辑处理接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TagService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">saveTag</span><span class="params">(Tag tag)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">getTag</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">getTagByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Tag&gt; <span class="title">listTag</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">listTag</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">listTag</span><span class="params">(String ids)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">updateTag</span><span class="params">(Long id,Tag tag)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteTag</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TagServiceImpl.java 标签业务逻辑处理实现类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.TagRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TagServiceImpl</span> <span class="keyword">implements</span> <span class="title">TagService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagRepository tagRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">saveTag</span><span class="params">(Tag tag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(tag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTagByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Tag&gt; <span class="title">listTag</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">listTag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">listTag</span><span class="params">(String ids)</span> </span>&#123;  <span class="comment">//1,2,3</span></span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAllById(convertToList(ids));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Long&gt; <span class="title">convertToList</span><span class="params">(String ids)</span></span>&#123;</span><br><span class="line">        List&lt;Long&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;&quot;</span>.equals(ids) &amp;&amp; ids != <span class="keyword">null</span>)&#123;</span><br><span class="line">            String[] idarray = ids.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;idarray.length; i++)&#123;</span><br><span class="line">                list.add(<span class="keyword">new</span> Long(idarray[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">updateTag</span><span class="params">(Long id, Tag tag)</span> </span>&#123;</span><br><span class="line">        Tag t = tagRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;您查找的信息不存在(︶︹︺)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(tag,t);</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        tagRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>TagRepository.java 标签业务 SQL操作接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TagRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Tag</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function">Tag <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TagController.java WEB操作</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.TagRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TagServiceImpl</span> <span class="keyword">implements</span> <span class="title">TagService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TagRepository tagRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">saveTag</span><span class="params">(Tag tag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(tag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTagByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Tag&gt; <span class="title">listTag</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">updateTag</span><span class="params">(Long id, Tag tag)</span> </span>&#123;</span><br><span class="line">        Tag t = tagRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;您查找的信息不存在(︶︹︺)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(tag,t);</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        tagRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="博客业务处理"><a href="#博客业务处理" class="headerlink" title="博客业务处理"></a>博客业务处理</h3><p>BlogService.java 博客业务处理逻辑接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java 博客业务处理逻辑实现类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>BlogRepository.java 博客业务 SQL操作接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Blog</span>,<span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Blog</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogController.java WEB操作</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TagService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.support.RedirectAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span>  String INPUT = <span class="string">&quot;/admin/blogs-input&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span>  String LIST = <span class="string">&quot;/admin/blogs&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span>  String REDIRECT_LIST = <span class="string">&quot;redirect:/admin/blogs&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagService tagService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blogs&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">blogs</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span> Pageable pageable, BlogQuery blogQuery, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,typeService.listType());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable,blogQuery));</span><br><span class="line">        <span class="keyword">return</span> LIST;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/blogs/search&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">search</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span> Pageable pageable,BlogQuery blogQuery,Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable,blogQuery));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/admin/blogs :: blogList&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blogs/input&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">input</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        setTypeAndTag(model);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;blog&quot;</span>,<span class="keyword">new</span> Blog());</span><br><span class="line">        <span class="keyword">return</span> INPUT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setTypeAndTag</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,typeService.listType());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;tags&quot;</span>,tagService.listTag());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blogs/&#123;id&#125;/input&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">editInput</span> <span class="params">(<span class="meta">@PathVariable</span> Long id, Model model)</span></span>&#123;</span><br><span class="line">        setTypeAndTag(model);</span><br><span class="line">        Blog blog = blogService.getBlog(id);</span><br><span class="line">        blog.init();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;blog&quot;</span>,blog);</span><br><span class="line">        <span class="keyword">return</span> INPUT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/blogs&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(Blog blog, RedirectAttributes attributes, HttpSession session)</span></span>&#123;</span><br><span class="line">        blog.setUser((User) session.getAttribute(<span class="string">&quot;user&quot;</span>));</span><br><span class="line">        blog.setType(typeService.getType(blog.getType().getId()));</span><br><span class="line">        blog.setTags(tagService.listTag(blog.getTagIds()));</span><br><span class="line">        Blog b;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            b = blogService.saveBlog(blog);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            b = blogService.updateBlog(blog.getId(),blog);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;操作失败 ﾍ(;´Д｀ﾍ),管理员大大重新试下吧&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;操作成功 ≖‿≖✧ 快去发布新内容吧&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> REDIRECT_LIST;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blogs/&#123;id&#125;/delete&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable</span> Long id,RedirectAttributes attributes)</span></span>&#123;</span><br><span class="line">        blogService.deleteBlog(id);</span><br><span class="line">        attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;删除成功,期待您发布更加美好的内容︿(￣︶￣)︿&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> REDIRECT_LIST;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogQuery.java 博客搜索查询类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.vo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogQuery</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> Long typeID;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> recommend;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BlogQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getTypeID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTypeID</span><span class="params">(Long typeID)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.typeID = typeID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRecommend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> recommend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRecommend</span><span class="params">(<span class="keyword">boolean</span> recommend)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.recommend = recommend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Blog.java 博客实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_blog&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Blog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Basic(fetch = FetchType.LAZY)</span></span><br><span class="line">    <span class="meta">@Lob</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String firstPicture;</span><br><span class="line">    <span class="keyword">private</span> String flag;</span><br><span class="line">    <span class="keyword">private</span> Integer views;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> appreciation;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> shareStatement;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> commentabled;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> published;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> recommend;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Type type;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany(cascade = &#123;CascadeType.PERSIST&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Tag&gt; tags = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;blog&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; comments = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transient</span></span><br><span class="line">    <span class="keyword">private</span> String tagIds;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Blog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstPicture</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> firstPicture;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstPicture</span><span class="params">(String firstPicture)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstPicture = firstPicture;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFlag</span><span class="params">(String flag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getViews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> views;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setViews</span><span class="params">(Integer views)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.views = views;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAppreciation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> appreciation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAppreciation</span><span class="params">(<span class="keyword">boolean</span> appreciation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.appreciation = appreciation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isShareStatement</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shareStatement;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShareStatement</span><span class="params">(<span class="keyword">boolean</span> shareStatement)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.shareStatement = shareStatement;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCommentabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commentabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCommentabled</span><span class="params">(<span class="keyword">boolean</span> commentabled)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.commentabled = commentabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPublished</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> published;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPublished</span><span class="params">(<span class="keyword">boolean</span> published)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.published = published;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRecommend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> recommend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRecommend</span><span class="params">(<span class="keyword">boolean</span> recommend)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.recommend = recommend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(Date createTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getUpdateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpdateTime</span><span class="params">(Date updateTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.updateTime = updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setType</span><span class="params">(Type type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">getTags</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tags;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTags</span><span class="params">(List&lt;Tag&gt; tags)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tags = tags;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">getComments</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setComments</span><span class="params">(List&lt;Comment&gt; comments)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.comments = comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTagIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagIds;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTagIds</span><span class="params">(String tagIds)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tagIds = tagIds;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDescription</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDescription</span><span class="params">(String description)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化tagIds方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tagIds = tagsToIds(<span class="keyword">this</span>.getTags());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">tagsToIds</span><span class="params">(List&lt;Tag&gt; tags)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!tags.isEmpty())&#123;</span><br><span class="line">            StringBuffer ids = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (Tag tag : tags)&#123;</span><br><span class="line">                <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">                    ids.append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                ids.append(tag.getId());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ids.toString();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> tagIds;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Blog&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, title=&#x27;&quot;</span> + title + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, content=&#x27;&quot;</span> + content + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, firstPicture=&#x27;&quot;</span> + firstPicture + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, flag=&#x27;&quot;</span> + flag + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, views=&quot;</span> + views +</span><br><span class="line">                <span class="string">&quot;, appreciation=&quot;</span> + appreciation +</span><br><span class="line">                <span class="string">&quot;, shareStatement=&quot;</span> + shareStatement +</span><br><span class="line">                <span class="string">&quot;, commentabled=&quot;</span> + commentabled +</span><br><span class="line">                <span class="string">&quot;, published=&quot;</span> + published +</span><br><span class="line">                <span class="string">&quot;, recommend=&quot;</span> + recommend +</span><br><span class="line">                <span class="string">&quot;, createTime=&quot;</span> + createTime +</span><br><span class="line">                <span class="string">&quot;, updateTime=&quot;</span> + updateTime +</span><br><span class="line">                <span class="string">&quot;, type=&quot;</span> + type +</span><br><span class="line">                <span class="string">&quot;, tags=&quot;</span> + tags +</span><br><span class="line">                <span class="string">&quot;, user=&quot;</span> + user +</span><br><span class="line">                <span class="string">&quot;, comments=&quot;</span> + comments +</span><br><span class="line">                <span class="string">&quot;, tagIds=&#x27;&quot;</span> + tagIds + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, description=&#x27;&quot;</span> + description + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后端细节优化"><a href="#后端细节优化" class="headerlink" title="后端细节优化"></a>后端细节优化</h3><p>MyBeanUtils.java 修复SQL数据修改后为null工具类(过滤掉数据值为null)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanWrapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanWrapperImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyDescriptor;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Arvin on 2021/2/10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBeanUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有的属性值为空属性名数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] getNullPropertyNames(Object source) &#123;</span><br><span class="line">        BeanWrapper beanWrapper = <span class="keyword">new</span> BeanWrapperImpl(source);</span><br><span class="line">        PropertyDescriptor[] pds =  beanWrapper.getPropertyDescriptors();</span><br><span class="line">        List&lt;String&gt; nullPropertyNames = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (PropertyDescriptor pd : pds) &#123;</span><br><span class="line">            String propertyName = pd.getName();</span><br><span class="line">            <span class="keyword">if</span> (beanWrapper.getPropertyValue(propertyName) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                nullPropertyNames.add(propertyName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nullPropertyNames.toArray(<span class="keyword">new</span> String[nullPropertyNames.size()]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端index优化<br>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IndexController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TagService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagService tagService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,typeService.listTypeTop(<span class="number">6</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;tags&quot;</span>,tagService.listTagTop(<span class="number">10</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;recommendBlogs&quot;</span>,blogService.listRecommendBlogTop(<span class="number">8</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blog&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">blog</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">/*String blog = null;</span></span><br><span class="line"><span class="comment">            if (blog == null)&#123;</span></span><br><span class="line"><span class="comment">                throw  new NotFoundException(&quot;博客不存在&quot;);</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blog&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TypeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">saveType</span><span class="params">(Type type)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">getType</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">getTypeByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Type&gt; <span class="title">listType</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Type&gt; <span class="title">listType</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Type&gt; <span class="title">listTypeTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">updateType</span><span class="params">(Long id,Type type)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteType</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.TypeRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TypeServiceImpl</span> <span class="keyword">implements</span> <span class="title">TypeService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeRepository typeRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">saveType</span><span class="params">(Type type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.save(type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getType</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getTypeByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Type&gt; <span class="title">listType</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Type&gt; <span class="title">listType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Type&gt; <span class="title">listTypeTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;blogs.size&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">updateType</span><span class="params">(Long id, Type type)</span> </span>&#123;</span><br><span class="line">        Type t = typeRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;您查找的信息不存在(︶︹︺)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(type,t);</span><br><span class="line">        <span class="keyword">return</span> typeRepository.save(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteType</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        typeRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TypeRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Type</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Query(&quot;select t from Type t&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Type&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TagService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TagService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">saveTag</span><span class="params">(Tag tag)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">getTag</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">getTagByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Tag&gt; <span class="title">listTag</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">listTag</span><span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">listTagTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">listTag</span><span class="params">(String ids)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">updateTag</span><span class="params">(Long id,Tag tag)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteTag</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TagServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.TagRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TagServiceImpl</span> <span class="keyword">implements</span> <span class="title">TagService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagRepository tagRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">saveTag</span><span class="params">(Tag tag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(tag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTagByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Tag&gt; <span class="title">listTag</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">listTag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">listTagTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort =  Sort.by(Sort.Direction.DESC,<span class="string">&quot;blogs.size&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of (<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">listTag</span><span class="params">(String ids)</span> </span>&#123;  <span class="comment">//1,2,3</span></span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAllById(convertToList(ids));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Long&gt; <span class="title">convertToList</span><span class="params">(String ids)</span></span>&#123;</span><br><span class="line">        List&lt;Long&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(ids) &amp;&amp; ids != <span class="keyword">null</span>)&#123;</span><br><span class="line">            String[] idarray = ids.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;idarray.length; i++)&#123;</span><br><span class="line">                list.add(<span class="keyword">new</span> Long(idarray[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">updateTag</span><span class="params">(Long id, Tag tag)</span> </span>&#123;</span><br><span class="line">        Tag t = tagRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;您查找的信息不存在(︶︹︺)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(tag,t);</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        tagRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TagRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TagRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Tag</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(&quot;select t from Tag t&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Blog</span>,<span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Blog</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.recommend = true&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局搜索"><a href="#全局搜索" class="headerlink" title="全局搜索"></a>全局搜索</h3><p>IndexController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TagService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagService tagService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,typeService.listTypeTop(<span class="number">6</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;tags&quot;</span>,tagService.listTagTop(<span class="number">10</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;recommendBlogs&quot;</span>,blogService.listRecommendBlogTop(<span class="number">8</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/search&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">search</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable, <span class="meta">@RequestParam</span> String query, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(<span class="string">&quot;%&quot;</span>+query+<span class="string">&quot;%&quot;</span>,pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;query&quot;</span>,query);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;search&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blog/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">blog</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">/*String blog = null;</span></span><br><span class="line"><span class="comment">            if (blog == null)&#123;</span></span><br><span class="line"><span class="comment">                throw  new NotFoundException(&quot;博客不存在&quot;);</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blog&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findByQuery(query,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Blog</span>,<span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Blog</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.recommend = true&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//select * from t_blog where title like &#x27;%内容%&#x27;</span></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.title like ?1 or b.content like ?1&quot;)</span></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">findByQuery</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="博客详情业务处理"><a href="#博客详情业务处理" class="headerlink" title="博客详情业务处理"></a>博客详情业务处理</h3><p>IndexController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TagService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagService tagService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,typeService.listTypeTop(<span class="number">6</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;tags&quot;</span>,tagService.listTagTop(<span class="number">10</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;recommendBlogs&quot;</span>,blogService.listRecommendBlogTop(<span class="number">8</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/search&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">search</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable, <span class="meta">@RequestParam</span> String query, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(<span class="string">&quot;%&quot;</span>+query+<span class="string">&quot;%&quot;</span>,pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;query&quot;</span>,query);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;search&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blog/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">blog</span><span class="params">(<span class="meta">@PathVariable</span> Long id, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;blog&quot;</span>,blogService.getAndConvert(id));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blog&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MarkdownUtils.java Markdown转换HTML工具类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.commonmark.Extension;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.ext.gfm.tables.TableBlock;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.ext.gfm.tables.TablesExtension;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.ext.heading.anchor.HeadingAnchorExtension;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.node.Link;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.node.Node;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.parser.Parser;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.AttributeProvider;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.AttributeProviderContext;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.AttributeProviderFactory;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.HtmlRenderer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/12.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MarkdownUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * markdown格式转换成HTML格式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> markdown</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">markdownToHtml</span><span class="params">(String markdown)</span> </span>&#123;</span><br><span class="line">        Parser parser = Parser.builder().build();</span><br><span class="line">        Node document = parser.parse(markdown);</span><br><span class="line">        HtmlRenderer renderer = HtmlRenderer.builder().build();</span><br><span class="line">        <span class="keyword">return</span> renderer.render(document);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 增加扩展[标题锚点，表格生成]</span></span><br><span class="line"><span class="comment">     * Markdown转换成HTML</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> markdown</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">markdownToHtmlExtensions</span><span class="params">(String markdown)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//h标题生成id</span></span><br><span class="line">        Set&lt;Extension&gt; headingAnchorExtensions = Collections.singleton(HeadingAnchorExtension.create());</span><br><span class="line">        <span class="comment">//转换table的HTML</span></span><br><span class="line">        List&lt;Extension&gt; tableExtension = Arrays.asList(TablesExtension.create());</span><br><span class="line">        Parser parser = Parser.builder()</span><br><span class="line">                .extensions(tableExtension)</span><br><span class="line">                .build();</span><br><span class="line">        Node document = parser.parse(markdown);</span><br><span class="line">        HtmlRenderer renderer = HtmlRenderer.builder()</span><br><span class="line">                .extensions(headingAnchorExtensions)</span><br><span class="line">                .extensions(tableExtension)</span><br><span class="line">                .attributeProviderFactory(<span class="keyword">new</span> AttributeProviderFactory() &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> AttributeProvider <span class="title">create</span><span class="params">(AttributeProviderContext context)</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">new</span> CustomAttributeProvider();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> renderer.render(document);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理标签的属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomAttributeProvider</span> <span class="keyword">implements</span> <span class="title">AttributeProvider</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAttributes</span><span class="params">(Node node, String tagName, Map&lt;String, String&gt; attributes)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//改变a标签的target属性为_blank</span></span><br><span class="line">            <span class="keyword">if</span> (node <span class="keyword">instanceof</span> Link) &#123;</span><br><span class="line">                attributes.put(<span class="string">&quot;target&quot;</span>, <span class="string">&quot;_blank&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (node <span class="keyword">instanceof</span> TableBlock) &#123;</span><br><span class="line">                attributes.put(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;ui celled table&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String table = <span class="string">&quot;| hello | hi   | 哈哈哈   |\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;| ----- | ---- | ----- |\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;| 斯维尔多  | 士大夫  | f啊    |\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;| 阿什顿发  | 非固定杆 | 撒阿什顿发 |\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        String a = <span class="string">&quot;[imCoding 爱编程](http://www.lirenmi.cn)&quot;</span>;</span><br><span class="line">        System.out.println(markdownToHtmlExtensions(a));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function">Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MarkdownUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findByQuery(query,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        Blog blog = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (blog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;博客不存在哦&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Blog b = <span class="keyword">new</span> Blog();</span><br><span class="line">        BeanUtils.copyProperties(blog,b);</span><br><span class="line">        String content = b.getContent();</span><br><span class="line">        b.setContent(MarkdownUtils.markdownToHtmlExtensions(content));</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="评论模块实现"><a href="#评论模块实现" class="headerlink" title="评论模块实现"></a>评论模块实现</h3><p>CommentController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.CommentService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentService commentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;comment.avatar&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/comments/&#123;blogId&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">comments</span><span class="params">(<span class="meta">@PathVariable</span> Long blogId, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;comments&quot;</span>,commentService.listCommentByBlogId(blogId));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blog :: commentList&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/comments&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        Long blogId = comment.getBlog().getId();</span><br><span class="line">        comment.setBlog(blogService.getBlog(blogId));</span><br><span class="line">        comment.setAvatar(avatar);</span><br><span class="line">        commentService.saveComment(comment);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/comments/&quot;</span> + blogId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommentService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CommentService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Comment&gt; <span class="title">listCommentByBlogId</span><span class="params">(Long blogId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Comment <span class="title">saveComment</span><span class="params">(Comment comment)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommentServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.CommentRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentServiceImpl</span> <span class="keyword">implements</span> <span class="title">CommentService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentRepository commentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">listCommentByBlogId</span><span class="params">(Long blogId)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;createTime&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> commentRepository.findByBlogId(blogId,sort);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">saveComment</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        Long parentCommentId = comment.getParentComment().getId();</span><br><span class="line">        <span class="keyword">if</span> (parentCommentId != -<span class="number">1</span>)&#123;</span><br><span class="line">            comment.setParentComment(commentRepository.findById(parentCommentId).get());</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            comment.setParentComment(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        comment.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> commentRepository.save(comment);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommentRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CommentRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Comment</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Comment&gt; <span class="title">findByBlogId</span><span class="params">(Long blogId, Sort sort)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="评论模块细节优化"><a href="#评论模块细节优化" class="headerlink" title="评论模块细节优化"></a>评论模块细节优化</h3><p>CommentRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CommentRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Comment</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Comment&gt; <span class="title">findByBlogIdAndParentCommentNull</span><span class="params">(Long blogId, Sort sort)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommentServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.CommentRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentServiceImpl</span> <span class="keyword">implements</span> <span class="title">CommentService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentRepository commentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">listCommentByBlogId</span><span class="params">(Long blogId)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;createTime&quot;</span>);</span><br><span class="line">        List&lt;Comment&gt; comments = commentRepository.findByBlogIdAndParentCommentNull(blogId,sort);</span><br><span class="line">        <span class="keyword">return</span> eachComment(comments);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">saveComment</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        Long parentCommentId = comment.getParentComment().getId();</span><br><span class="line">        <span class="keyword">if</span> (parentCommentId != -<span class="number">1</span>)&#123;</span><br><span class="line">            comment.setParentComment(commentRepository.findById(parentCommentId).get());</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            comment.setParentComment(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        comment.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> commentRepository.save(comment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 循环每个顶级的评论节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comments</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Comment&gt; <span class="title">eachComment</span><span class="params">(List&lt;Comment&gt; comments)</span></span>&#123;</span><br><span class="line">        List&lt;Comment&gt; commentsView = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Comment comment : comments)&#123;</span><br><span class="line">            Comment c = <span class="keyword">new</span> Comment();</span><br><span class="line">            BeanUtils.copyProperties(comment,c);</span><br><span class="line">            commentsView.add(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//合并评论的各层子代到第一级子代集合中</span></span><br><span class="line">        combineChildren(commentsView);</span><br><span class="line">        <span class="keyword">return</span> commentsView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comments root根节点，blog不为null的对象集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">combineChildren</span><span class="params">(List&lt;Comment&gt; comments)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Comment comment : comments)&#123;</span><br><span class="line">            List&lt;Comment&gt; replys = comment.getReplyComments();</span><br><span class="line">            <span class="keyword">for</span> (Comment reply : replys)&#123;</span><br><span class="line">                <span class="comment">//循环迭代,找出子代,存放在tempReplys中</span></span><br><span class="line">                recursively(reply);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//修改顶级节点的reply集合为迭代处理后的集合</span></span><br><span class="line">            comment.setReplyComments(tempReplys);</span><br><span class="line">            <span class="comment">//清除临时存放区</span></span><br><span class="line">            tempReplys = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存放迭代找出的所有子代的集合</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; tempReplys = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归迭代，剥洋葱</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comment 被迭代的对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">recursively</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        tempReplys.add(comment);<span class="comment">//顶节点添加到临时存放集合</span></span><br><span class="line">        <span class="keyword">if</span> (comment.getReplyComments().size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            List&lt;Comment&gt; replays = comment.getReplyComments();</span><br><span class="line">            <span class="keyword">for</span> (Comment reply : replays) &#123;</span><br><span class="line">                tempReplys.add(reply);</span><br><span class="line">                <span class="keyword">if</span> (reply.getReplyComments().size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                    recursively(reply);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommentController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.CommentService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentService commentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;comment.avatar&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/comments/&#123;blogId&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">comments</span><span class="params">(<span class="meta">@PathVariable</span> Long blogId, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;comments&quot;</span>,commentService.listCommentByBlogId(blogId));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blog :: commentList&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/comments&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        Long blogId = comment.getBlog().getId();</span><br><span class="line">        comment.setBlog(blogService.getBlog(blogId));</span><br><span class="line">        comment.setAvatar(avatar);</span><br><span class="line">        commentService.saveComment(comment);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/comments/&quot;</span> + blogId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="特殊用户评论模块"><a href="#特殊用户评论模块" class="headerlink" title="特殊用户评论模块"></a>特殊用户评论模块</h3><p>CommentServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.CommentRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentServiceImpl</span> <span class="keyword">implements</span> <span class="title">CommentService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentRepository commentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">listCommentByBlogId</span><span class="params">(Long blogId)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.ASC,<span class="string">&quot;createTime&quot;</span>);</span><br><span class="line">        List&lt;Comment&gt; comments = commentRepository.findByBlogIdAndParentCommentNull(blogId,sort);</span><br><span class="line">        <span class="keyword">return</span> eachComment(comments);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">saveComment</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        Long parentCommentId = comment.getParentComment().getId();</span><br><span class="line">        <span class="keyword">if</span> (parentCommentId != -<span class="number">1</span>)&#123;</span><br><span class="line">            comment.setParentComment(commentRepository.findById(parentCommentId).get());</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            comment.setParentComment(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        comment.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> commentRepository.save(comment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 循环每个顶级的评论节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comments</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Comment&gt; <span class="title">eachComment</span><span class="params">(List&lt;Comment&gt; comments)</span></span>&#123;</span><br><span class="line">        List&lt;Comment&gt; commentsView = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Comment comment : comments)&#123;</span><br><span class="line">            Comment c = <span class="keyword">new</span> Comment();</span><br><span class="line">            BeanUtils.copyProperties(comment,c);</span><br><span class="line">            commentsView.add(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//合并评论的各层子代到第一级子代集合中</span></span><br><span class="line">        combineChildren(commentsView);</span><br><span class="line">        <span class="keyword">return</span> commentsView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comments root根节点，blog不为null的对象集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">combineChildren</span><span class="params">(List&lt;Comment&gt; comments)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Comment comment : comments)&#123;</span><br><span class="line">            List&lt;Comment&gt; replys = comment.getReplyComments();</span><br><span class="line">            <span class="keyword">for</span> (Comment reply : replys)&#123;</span><br><span class="line">                <span class="comment">//循环迭代,找出子代,存放在tempReplys中</span></span><br><span class="line">                recursively(reply);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//修改顶级节点的reply集合为迭代处理后的集合</span></span><br><span class="line">            comment.setReplyComments(tempReplys);</span><br><span class="line">            <span class="comment">//清除临时存放区</span></span><br><span class="line">            tempReplys = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存放迭代找出的所有子代的集合</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; tempReplys = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归迭代，剥洋葱</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comment 被迭代的对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">recursively</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        tempReplys.add(comment);<span class="comment">//顶节点添加到临时存放集合</span></span><br><span class="line">        <span class="keyword">if</span> (comment.getReplyComments().size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            List&lt;Comment&gt; replays = comment.getReplyComments();</span><br><span class="line">            <span class="keyword">for</span> (Comment reply : replays) &#123;</span><br><span class="line">                tempReplys.add(reply);</span><br><span class="line">                <span class="keyword">if</span> (reply.getReplyComments().size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                    recursively(reply);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Comment.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_comment&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Comment</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Blog blog;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;parentComment&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; replyComments = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Comment parentComment;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> adminComment;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Comment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickname</span><span class="params">(String nickname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nickname = nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAvatar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAvatar</span><span class="params">(String avatar)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.avatar = avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(Date createTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blog = blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">getReplyComments</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> replyComments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setReplyComments</span><span class="params">(List&lt;Comment&gt; replyComments)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.replyComments = replyComments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">getParentComment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> parentComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParentComment</span><span class="params">(Comment parentComment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.parentComment = parentComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAdminComment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> adminComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAdminComment</span><span class="params">(<span class="keyword">boolean</span> adminComment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.adminComment = adminComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Comment&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, nickname=&#x27;&quot;</span> + nickname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, content=&#x27;&quot;</span> + content + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, avatar=&#x27;&quot;</span> + avatar + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, createTime=&quot;</span> + createTime +</span><br><span class="line">                <span class="string">&quot;, blog=&quot;</span> + blog +</span><br><span class="line">                <span class="string">&quot;, replyComments=&quot;</span> + replyComments +</span><br><span class="line">                <span class="string">&quot;, parentComment=&quot;</span> + parentComment +</span><br><span class="line">                <span class="string">&quot;, adminComment=&quot;</span> + adminComment +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="浏览次数模块"><a href="#浏览次数模块" class="headerlink" title="浏览次数模块"></a>浏览次数模块</h3><p>BlogRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Modifying;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Blog</span>,<span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Blog</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.recommend = true&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//select * from t_blog where title like &#x27;%内容%&#x27;</span></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.title like ?1 or b.content like ?1&quot;)</span></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">findByQuery</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Modifying</span></span><br><span class="line">    <span class="meta">@Query(&quot;update Blog b set b.views = b.views+1 where b.id = ?1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateViews</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MarkdownUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findByQuery(query,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        Blog blog = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (blog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;博客不存在哦&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Blog b = <span class="keyword">new</span> Blog();</span><br><span class="line">        BeanUtils.copyProperties(blog,b);</span><br><span class="line">        String content = b.getContent();</span><br><span class="line">        b.setContent(MarkdownUtils.markdownToHtmlExtensions(content));</span><br><span class="line">        blogRepository.updateViews(id);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分类Web模块"><a href="#分类Web模块" class="headerlink" title="分类Web模块"></a>分类Web模块</h3><p>TypeShowController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/12/16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TypeShowController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/types/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">types</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable,<span class="meta">@PathVariable</span> Long id, Model model)</span></span>&#123;</span><br><span class="line">        List&lt;Type&gt; types = typeService.listTypeTop(<span class="number">10000</span>);</span><br><span class="line">        <span class="keyword">if</span> (id == -<span class="number">1</span>)&#123;</span><br><span class="line">            id = types.get(<span class="number">0</span>).getId();</span><br><span class="line">        &#125;</span><br><span class="line">        BlogQuery blogQuery = <span class="keyword">new</span> BlogQuery();</span><br><span class="line">        blogQuery.setTypeID(id);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,types);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable,blogQuery));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;activeTypeId&quot;</span>,id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;types&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="标签Web模块"><a href="#标签Web模块" class="headerlink" title="标签Web模块"></a>标签Web模块</h3><p>TagShowController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TagService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/12/16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TagShowController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagService tagService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/tags/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">tags</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable,<span class="meta">@PathVariable</span> Long id, Model model)</span></span>&#123;</span><br><span class="line">        List&lt;Tag&gt; tags = tagService.listTagTop(<span class="number">10000</span>);</span><br><span class="line">        <span class="keyword">if</span> (id == -<span class="number">1</span>)&#123;</span><br><span class="line">            id = tags.get(<span class="number">0</span>).getId();</span><br><span class="line">        &#125;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;tags&quot;</span>,tags);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(id,pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;activeTagId&quot;</span>,id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;tags&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Long tagId,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MarkdownUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Long tagId, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                Join join = root.join(<span class="string">&quot;tags&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> criteriaBuilder.equal(join.get(<span class="string">&quot;id&quot;</span>),tagId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findByQuery(query,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        Blog blog = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (blog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;博客不存在哦&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Blog b = <span class="keyword">new</span> Blog();</span><br><span class="line">        BeanUtils.copyProperties(blog,b);</span><br><span class="line">        String content = b.getContent();</span><br><span class="line">        b.setContent(MarkdownUtils.markdownToHtmlExtensions(content));</span><br><span class="line">        blogRepository.updateViews(id);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="归档模块处理"><a href="#归档模块处理" class="headerlink" title="归档模块处理"></a>归档模块处理</h3><p>ArchiveShowController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/16.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArchiveShowController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/archives&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">archives</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;archiveMap&quot;</span>,blogService.archiveBlog());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;blogCouot&quot;</span>,blogService.countBlog());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;archives&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Long tagId,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line">    </span><br><span class="line">    Map&lt;String,List&lt;Blog&gt;&gt; archiveBlog();</span><br><span class="line">    </span><br><span class="line">    <span class="function">Long <span class="title">countBlog</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MarkdownUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Long tagId, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                Join join = root.join(<span class="string">&quot;tags&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> criteriaBuilder.equal(join.get(<span class="string">&quot;id&quot;</span>),tagId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findByQuery(query,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        Blog blog = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (blog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;博客不存在哦&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Blog b = <span class="keyword">new</span> Blog();</span><br><span class="line">        BeanUtils.copyProperties(blog,b);</span><br><span class="line">        String content = b.getContent();</span><br><span class="line">        b.setContent(MarkdownUtils.markdownToHtmlExtensions(content));</span><br><span class="line">        blogRepository.updateViews(id);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;Blog&gt;&gt; archiveBlog() &#123;</span><br><span class="line">        </span><br><span class="line">        List&lt;String&gt; years = blogRepository.findGroupYear();</span><br><span class="line">        Map&lt;String,List&lt;Blog&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String year : years)&#123;</span><br><span class="line">            map.put(year,blogRepository.findByYear(year));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">countBlog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.count();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Modifying;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Blog</span>,<span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Blog</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.recommend = true&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//select * from t_blog where title like &#x27;%内容%&#x27;</span></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.title like ?1 or b.content like ?1&quot;)</span></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">findByQuery</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Modifying</span></span><br><span class="line">    <span class="meta">@Query(&quot;update Blog b set b.views = b.views+1 where b.id = ?1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateViews</span><span class="params">(Long id)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Query(&quot;select function(&#x27;date_format&#x27;,b.updateTime,&#x27;%Y&#x27;) as year from Blog b group by function(&#x27;date_format&#x27;,b.updateTime,&#x27;%Y&#x27;) order by function(&#x27;date_format&#x27;,b.updateTime,&#x27;%Y&#x27;) desc &quot;)</span></span><br><span class="line">    <span class="function">List&lt;String&gt; <span class="title">findGroupYear</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where function(&#x27;date_format&#x27;,b.updateTime,&#x27;%Y&#x27;) = ?1&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findByYear</span><span class="params">(String year)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="个人模块处理"><a href="#个人模块处理" class="headerlink" title="个人模块处理"></a>个人模块处理</h3><p>AboutShowController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/12/16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AboutShowController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/about&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">about</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;about&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>messages.properties</p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">index.email</span>=<span class="string">Email: 2644266656@qq.com</span></span><br><span class="line"><span class="meta">index.qq</span>=<span class="string">QQ: 2644266656</span></span><br><span class="line"><span class="meta">index.tagcontext</span>=<span class="string">南有孤岛北有亡梦，南柯一梦终是虚无。</span></span><br><span class="line"><span class="meta">index.titlename</span>=<span class="string">Guest Island</span></span><br><span class="line"><span class="meta">index.kor</span>=<span class="string">Copyright &amp;copy; 2020-2021 Guest Island Personal blog</span></span><br><span class="line"><span class="meta">blog.serurl</span>=<span class="string">127.0.0.1:8080</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Java </tag>
            
            <tag> 程序开发 </tag>
            
            <tag> 博客网站 </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git指令讲解</title>
      <link href="/2021/08/29/Git/"/>
      <url>/2021/08/29/Git/</url>
      
        <content type="html"><![CDATA[<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">查看、添加、提交、删除、找回，重置修改文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">help</span> <span class="string">&lt;command&gt;</span> <span class="comment"># 显示command的help</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">show</span> <span class="comment"># 显示某次提交的内容 git show $id</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">--</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">.</span> <span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">add</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 将工作文件修改提交到本地暂存区</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">add</span> <span class="string">.</span> <span class="comment"># 将所有修改过的工作文件提交暂存区</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rm</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 从版本库中删除文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rm</span> <span class="string">&lt;file&gt;</span> <span class="string">--cached</span> <span class="comment"># 从版本库中删除文件，但不删除文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">--</span> <span class="string">.</span> <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">--hard</span> <span class="comment"># 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">ci</span> <span class="string">&lt;file&gt;</span> <span class="string">git</span> <span class="string">ci</span> <span class="string">.</span> <span class="string">git</span> <span class="string">ci</span> <span class="string">-a</span> <span class="comment"># 将git add, git rm和git ci等操作都合并在一起做　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　git ci -am &quot;some comments&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">ci</span> <span class="string">--amend</span> <span class="comment"># 修改最后一次提交记录</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">revert</span> <span class="string">&lt;$id&gt;</span> <span class="comment"># 恢复某次提交的状态，恢复动作本身也创建次提交对象</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">revert</span> <span class="string">HEAD</span> <span class="comment"># 恢复最后一次提交的状态</span></span><br><span class="line"></span><br><span class="line"> <span class="string">查看文件diff</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">help</span> <span class="string">&lt;command&gt;</span> <span class="comment"># 显示command的help</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">show</span> <span class="comment"># 显示某次提交的内容 git show $id</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">--</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">.</span> <span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">add</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 将工作文件修改提交到本地暂存区</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">add</span> <span class="string">.</span> <span class="comment"># 将所有修改过的工作文件提交暂存区</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rm</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 从版本库中删除文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rm</span> <span class="string">&lt;file&gt;</span> <span class="string">--cached</span> <span class="comment"># 从版本库中删除文件，但不删除文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">--</span> <span class="string">.</span> <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">--hard</span> <span class="comment"># 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">ci</span> <span class="string">&lt;file&gt;</span> <span class="string">git</span> <span class="string">ci</span> <span class="string">.</span> <span class="string">git</span> <span class="string">ci</span> <span class="string">-a</span> <span class="comment"># 将git add, git rm和git ci等操作都合并在一起做　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　git ci -am &quot;some comments&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">ci</span> <span class="string">--amend</span> <span class="comment"># 修改最后一次提交记录</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">revert</span> <span class="string">&lt;$id&gt;</span> <span class="comment"># 恢复某次提交的状态，恢复动作本身也创建次提交对象</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">revert</span> <span class="string">HEAD</span> <span class="comment"># 恢复最后一次提交的状态</span></span><br><span class="line"></span><br><span class="line"> <span class="string">查看提交记录</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">log</span> <span class="string">git</span> <span class="string">log</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 查看该文件每次提交记录</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">log</span> <span class="string">-p</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 查看每次详细修改内容的diff</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">log</span> <span class="string">-p</span> <span class="number">-2</span> <span class="comment"># 查看最近两次详细修改内容的diff</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">log</span> <span class="string">--stat</span> <span class="comment">#查看提交统计信息</span></span><br><span class="line"> <span class="string">tig</span></span><br><span class="line"></span><br><span class="line"> <span class="string">Mac上可以使用tig代替diff和log，brew</span> <span class="string">install</span> <span class="string">tig</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="string">Git</span> <span class="string">本地分支管理</span></span><br><span class="line"> <span class="string">查看、切换、创建和删除分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">-r</span> <span class="comment"># 查看远程分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">&lt;new_branch&gt;</span> <span class="comment"># 创建新的分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">-v</span> <span class="comment"># 查看各个分支最后提交信息</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">--merged</span> <span class="comment"># 查看已经被合并到当前分支的分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">--no-merged</span> <span class="comment"># 查看尚未被合并到当前分支的分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 切换到某个分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">-b</span> <span class="string">&lt;new_branch&gt;</span> <span class="comment"># 创建新的分支，并且切换过去</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">-b</span> <span class="string">&lt;new_branch&gt;</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 基于branch创建新的new_branch</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">$id</span> <span class="comment"># 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">$id</span> <span class="string">-b</span> <span class="string">&lt;new_branch&gt;</span> <span class="comment"># 把某次历史提交记录checkout出来，创建成一个分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">-d</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 删除某个分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">-D</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</span></span><br><span class="line"> <span class="string">分支合并和reba</span></span><br><span class="line"> <span class="string">git</span> <span class="string">merge</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 将branch分支合并到当前分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">merge</span> <span class="string">origin/master</span> <span class="string">--no-ff</span> <span class="comment"># 不要Fast-Foward合并，这样可以生成merge提交</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rebase</span> <span class="string">master</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 将master rebase到branch，相当于： git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span></span><br><span class="line"> <span class="string">Git补丁管理(方便在多台机器上开发同步时用)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">merge</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 将branch分支合并到当前分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">merge</span> <span class="string">origin/master</span> <span class="string">--no-ff</span> <span class="comment"># 不要Fast-Foward合并，这样可以生成merge提交</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rebase</span> <span class="string">master</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 将master rebase到branch，相当于： git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="string">Git暂存管</span></span><br><span class="line"> <span class="string">git</span> <span class="string">stash</span> <span class="comment"># 暂存</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">stash</span> <span class="string">list</span> <span class="comment"># 列所有stash</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">stash</span> <span class="string">apply</span> <span class="comment"># 恢复暂存的内容</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">stash</span> <span class="string">drop</span> <span class="comment"># 删除暂存区</span></span><br><span class="line"></span><br><span class="line"> <span class="string">Git远程分支管理</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">pull</span> <span class="comment"># 抓取远程仓库所有分支更新并合并到本地</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">pull</span> <span class="string">--no-ff</span> <span class="comment"># 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">fetch</span> <span class="string">origin</span> <span class="comment"># 抓取远程仓库更新</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">merge</span> <span class="string">origin/master</span> <span class="comment"># 将远程主分支合并到本地当前分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">--track</span> <span class="string">origin/branch</span> <span class="comment"># 跟踪某个远程分支创建相应的本地分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">-b</span> <span class="string">&lt;local_branch&gt;</span> <span class="string">origin/&lt;remote_branch&gt;</span> <span class="comment"># 基于远程分支创建本地分支，功能同上</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="comment"># push所有分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">master</span> <span class="comment"># 将本地主分支推到远程主分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">-u</span> <span class="string">origin</span> <span class="string">master</span> <span class="comment"># 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">&lt;local_branch&gt;</span> <span class="comment"># 创建远程分支， origin是远程仓库名</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">&lt;local_branch&gt;:&lt;remote_branch&gt;</span> <span class="comment"># 创建远程分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">:&lt;remote_branch&gt;</span> <span class="comment">#先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">Git远程仓库管</span></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">-v</span> <span class="comment"># 查看远程服务器地址和仓库名称</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">show</span> <span class="string">origin</span> <span class="comment"># 查看远程服务器仓库状态</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">add</span> <span class="string">origin</span> <span class="string">git@</span> <span class="string">github:robbin/robbin_site.git</span> <span class="comment"># 添加远程仓库地址</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">set-url</span> <span class="string">origin</span> <span class="string">git@</span> <span class="string">github.com:robbin/robbin_site.git</span> <span class="comment"># 设置远程仓库地址(用于修改远程仓库地址) git remote rm &lt;repository&gt; # 删除远程仓库</span></span><br><span class="line"></span><br><span class="line"> <span class="string">创建远程仓库</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">clone</span> <span class="string">--bare</span> <span class="string">robbin_site</span> <span class="string">robbin_site.git</span> <span class="comment"># 用带版本的项目创建纯版本仓库</span></span><br><span class="line"></span><br><span class="line"> <span class="string">scp</span> <span class="string">-r</span> <span class="string">my_project.git</span> <span class="string">git@</span> <span class="string">git.csdn.net:~</span> <span class="comment"># 将纯仓库上传到服务器上</span></span><br><span class="line"></span><br><span class="line"> <span class="string">mkdir</span> <span class="string">robbin_site.git</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">robbin_site.git</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">--bare</span> <span class="string">init</span> <span class="comment"># 在服务器创建纯仓库</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">add</span> <span class="string">origin</span> <span class="string">git@</span> <span class="string">github.com:robbin/robbin_site.git</span> <span class="comment"># 设置远程仓库地址</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">-u</span> <span class="string">origin</span> <span class="string">master</span> <span class="comment"># 客户端首次提交</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">-u</span> <span class="string">origin</span> <span class="string">develop</span> <span class="comment"># 首次将本地develop分支提交到远程develop分支，并且track</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">set-head</span> <span class="string">origin</span> <span class="string">master</span> <span class="comment"># 设置远程仓库的HEAD指向master分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">也可以命令设置跟踪远程库和本地库</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">branch</span> <span class="string">--set-upstream</span> <span class="string">master</span> <span class="string">origin/master</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">branch</span> <span class="string">--set-upstream</span> <span class="string">develop</span> <span class="string">origin/develop</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> git </tag>
            
            <tag> 程序开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>散章（UE4）</title>
      <link href="/2021/08/29/San_Passage/"/>
      <url>/2021/08/29/San_Passage/</url>
      
        <content type="html"><![CDATA[<h3 id="其他教程集合："><a href="#其他教程集合：" class="headerlink" title="其他教程集合："></a>其他教程集合：</h3><ul><li><a href="https://blog.csdn.net/u012999985/article/details/107096741?spm=1001.2014.3001.5501">https://blog.csdn.net/u012999985/article/details/107096741?spm=1001.2014.3001.5501</a></li></ul><h3 id="蓝图入门："><a href="#蓝图入门：" class="headerlink" title="蓝图入门："></a>蓝图入门：</h3><ul><li><p>1.UE4序章：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100671944">https://blog.csdn.net/qq_42145322/article/details/100671944</a></p></li><li><p>2.UE4世界设置、输入控制、Tick事件、碰撞事件响应：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100671988">https://blog.csdn.net/qq_42145322/article/details/100671988</a></p></li><li><p>3.UE4材质：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100672016">https://blog.csdn.net/qq_42145322/article/details/100672016</a></p></li><li><p>4.UE4蓝图变量及其类型：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100611688">https://blog.csdn.net/qq_42145322/article/details/100611688</a></p></li><li><p>5.UE4蓝图枚举和结构体：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620667">https://blog.csdn.net/qq_42145322/article/details/100620667</a></p></li><li><p>6.UE4蓝图流程控制：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620744">https://blog.csdn.net/qq_42145322/article/details/100620744</a></p></li><li><p>7.UE4蓝图容器：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620784">https://blog.csdn.net/qq_42145322/article/details/100620784</a></p></li><li><p>8.UE4函数：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620837">https://blog.csdn.net/qq_42145322/article/details/100620837</a></p></li><li><p>9.UE4关卡蓝图：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620874">https://blog.csdn.net/qq_42145322/article/details/100620874</a></p></li><li><p>10.UE4蓝图编辑界面介绍：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620913">https://blog.csdn.net/qq_42145322/article/details/100620913</a></p></li><li><p>11.UE4蓝图宏：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620929">https://blog.csdn.net/qq_42145322/article/details/100620929</a></p></li><li><p>12.UE4蓝图接口：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620976">https://blog.csdn.net/qq_42145322/article/details/100620976</a></p></li><li><p>13.UE4蓝图事件调度器：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100621053">https://blog.csdn.net/qq_42145322/article/details/100621053</a></p></li></ul><h3 id="组件："><a href="#组件：" class="headerlink" title="组件："></a>组件：</h3><ul><li><p>缆绳组件：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/Basics/Components/Rendering/CableComponent/">https://docs.unrealengine.com/4.26/zh-CN/Basics/Components/Rendering/CableComponent/</a></p></li><li><p>Scene Capture 2D Component的使用：<br><a href="https://www.cnblogs.com/timy/p/10018848.html">https://www.cnblogs.com/timy/p/10018848.html</a></p></li><li><p>移动组件详解（一）——移动框架与实现原理：<br><a href="https://blog.csdn.net/u012999985/article/details/78669508">https://blog.csdn.net/u012999985/article/details/78669508</a></p></li><li><p>移动组件详解（二）——移动同步机制：<br><a href="https://blog.csdn.net/u012999985/article/details/78669947">https://blog.csdn.net/u012999985/article/details/78669947</a></p></li></ul><h3 id="物理："><a href="#物理：" class="headerlink" title="物理："></a>物理：</h3><ul><li><p>物理系统浅析：<br><a href="https://blog.csdn.net/zzx023/article/details/82871707">https://blog.csdn.net/zzx023/article/details/82871707</a></p></li><li><p>碰撞概述：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/Physics/Collision/Overview/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/Physics/Collision/Overview/</a></p></li><li><p>碰撞响应参考：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/Physics/Collision/Reference/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/Physics/Collision/Reference/</a></p></li><li><p>在建模软件里自定义碰撞体积：<br><a href="https://blog.csdn.net/a359877454/article/details/53410749">https://blog.csdn.net/a359877454/article/details/53410749</a></p></li></ul><h3 id="AI："><a href="#AI：" class="headerlink" title="AI："></a>AI：</h3><ul><li><p>AI最简使用案例：<br><a href="https://gameinstitute.qq.com/community/detail/121929">https://gameinstitute.qq.com/community/detail/121929</a></p></li><li><p>1.行为树快速入门指南：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeQuickStart/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeQuickStart/</a></p></li><li><p>2.行为树概述：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreesOverview/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreesOverview/</a></p></li><li><p>3.行为树用户指南：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeUserGuide/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeUserGuide/</a></p></li><li><p>4.行为树节点参考：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/</a></p></li><li><p>5.复合节点：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceComposites/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceComposites/</a></p></li><li><p>6.装饰器节点：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceDecorators/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceDecorators/</a></p></li><li><p>7.服务节点：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceServices/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceServices/</a></p></li><li><p>8.任务节点：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceTasks/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceTasks/</a></p></li><li><p>9.场景查询系统快速入门：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSQuickStart/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSQuickStart/</a></p></li><li><p>10.场景查询系统概述：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSOverview/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSOverview/</a></p></li><li><p>11.场景查询系统用户指南：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSUserGuide/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSUserGuide/</a></p></li><li><p>12.场景查询系统节点参考：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/</a></p></li><li><p>13.EQS节点参考：生成器：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/EQSNodeReferenceGenerators/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/EQSNodeReferenceGenerators/</a></p></li><li><p>14.EQS节点参考：测试：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/EQSNodeReferenceTests/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/EQSNodeReferenceTests/</a></p></li><li><p>Service、Task、Decorator节点重载函数介绍：<br><a href="https://blog.csdn.net/u010385624/article/details/89339958">https://blog.csdn.net/u010385624/article/details/89339958</a></p></li></ul><h3 id="Gameplay框架详细讲解："><a href="#Gameplay框架详细讲解：" class="headerlink" title="Gameplay框架详细讲解："></a>Gameplay框架详细讲解：</h3><ul><li><p>1.Actor和Component：<br><a href="https://zhuanlan.zhihu.com/p/22833151">https://zhuanlan.zhihu.com/p/22833151</a></p></li><li><p>2.Level和World：<br><a href="https://zhuanlan.zhihu.com/p/22924838">https://zhuanlan.zhihu.com/p/22924838</a></p></li><li><p>3.WorldContext，GameInstance，Engine：<br><a href="https://zhuanlan.zhihu.com/p/23167068">https://zhuanlan.zhihu.com/p/23167068</a></p></li><li><p>4.Pawn：<br><a href="https://zhuanlan.zhihu.com/p/23321666">https://zhuanlan.zhihu.com/p/23321666</a></p></li><li><p>5.Controller：<br><a href="https://zhuanlan.zhihu.com/p/23480071">https://zhuanlan.zhihu.com/p/23480071</a></p></li><li><p>6.PlayerController和AIController：<br><a href="https://zhuanlan.zhihu.com/p/23649987">https://zhuanlan.zhihu.com/p/23649987</a></p></li><li><p>7.GameMode和GameState：<br><a href="https://zhuanlan.zhihu.com/p/23707588">https://zhuanlan.zhihu.com/p/23707588</a></p></li><li><p>8.Player：<br><a href="https://zhuanlan.zhihu.com/p/23826859">https://zhuanlan.zhihu.com/p/23826859</a></p></li><li><p>9.GameInstance：<br><a href="https://zhuanlan.zhihu.com/p/24005952">https://zhuanlan.zhihu.com/p/24005952</a></p></li><li><p>10.总结：<br><a href="https://zhuanlan.zhihu.com/p/24170697">https://zhuanlan.zhihu.com/p/24170697</a></p></li></ul><h3 id="UObject详解："><a href="#UObject详解：" class="headerlink" title="UObject详解："></a>UObject详解：</h3><ul><li><p>1.开篇<br><a href="https://zhuanlan.zhihu.com/p/24319968">https://zhuanlan.zhihu.com/p/24319968</a></p></li><li><p>2.</p></li></ul><h3 id="容器："><a href="#容器：" class="headerlink" title="容器："></a>容器：</h3><ul><li><p>数组TArray：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TArrays/">https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TArrays/</a></p></li><li><p>映射TMap：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TMap/">https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TMap/</a></p></li><li><p>集合TSet：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TSet/">https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TSet/</a></p></li></ul><h3 id="杂项："><a href="#杂项：" class="headerlink" title="杂项："></a>杂项：</h3><ul><li><p>TSubClassOf：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TSubclassOf/">https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TSubclassOf/</a></p></li><li><p>Cast原理：<br><a href="https://blog.csdn.net/zzk1995/article/details/49877469/">https://blog.csdn.net/zzk1995/article/details/49877469/</a></p></li><li><p>UE4性能优化：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100924919">https://blog.csdn.net/qq_42145322/article/details/100924919</a></p></li><li><p>智能指针：<br><a href="https://blog.csdn.net/qq_39481248/article/details/118966678">https://blog.csdn.net/qq_39481248/article/details/118966678</a></p></li><li><p>智能指针使用技巧：<br><a href="https://blog.csdn.net/qq_29667889/article/details/109308111">https://blog.csdn.net/qq_29667889/article/details/109308111</a></p></li><li><p>关闭创建类时编译：<br><a href="https://zhuanlan.zhihu.com/p/370211758">https://zhuanlan.zhihu.com/p/370211758</a></p></li><li><p>TWeakObjectPtr的使用：<br><a href="https://zhuanlan.zhihu.com/p/139473097">https://zhuanlan.zhihu.com/p/139473097</a></p></li><li><p>TWeakObjectPtr相关分析杂谈：<br><a href="https://zhuanlan.zhihu.com/p/68376750">https://zhuanlan.zhihu.com/p/68376750</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> UE4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lua讲解</title>
      <link href="/2021/08/29/UnLua_Programming_Guide_CN/"/>
      <url>/2021/08/29/UnLua_Programming_Guide_CN/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>UnLua是一个功能丰富并且高效的UE4脚本编程解决方案。开发者可以使用Lua来开发游戏逻辑，并且它允许我们利用Lua的热加载功能来更快地更新游戏逻辑。这份文档将会介绍UnLua的主要功能以及最基础的编程模式。</p><hr><h1 id="Lua和引擎的绑定"><a href="#Lua和引擎的绑定" class="headerlink" title="Lua和引擎的绑定"></a>Lua和引擎的绑定</h1><p>UnLua提供了一种简单的方法将Lua和游戏引擎相互绑定，包括静态绑定和动态绑定：</p><h2 id="静态绑定"><a href="#静态绑定" class="headerlink" title="静态绑定"></a>静态绑定</h2><h4 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h4><p>你的UCLASS只需要实现接口<strong>IUnLuaInterface</strong>，并在函数**GetModuleName_Implementation()**中返回一个Lua文件路径。</p><h4 id="蓝图"><a href="#蓝图" class="headerlink" title="蓝图"></a>蓝图</h4><p>你的蓝图只需要实现接口<strong>UnLuaInterface</strong>，并在函数**GetModuleName()**中返回一个Lua文件路径。</p><h2 id="动态绑定"><a href="#动态绑定" class="headerlink" title="动态绑定"></a>动态绑定</h2><p>动态绑定适用于运行时创建AActor和UObject</p><h4 id="Actor"><a href="#Actor" class="headerlink" title="Actor"></a>Actor</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Proj = World:SpawnActor(ProjClass, Transform, ESpawnActorCollisionHandlingMethod.AlwaysSpawn, <span class="built_in">self</span>, <span class="built_in">self</span>.Instigator, <span class="string">&quot;Weapon.BP_DefaultProjectile_C&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong>“Weapon.BP_DefaultProjectile_C”</strong>是一个Lua文件路径.</p><h4 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> ProxyObj = NewObject(ObjClass, <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="string">&quot;Objects.ProxyObject&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong>“Objects.ProxyObject”</strong>是一个Lua文件路径.</p><h2 id="Lua文件路径"><a href="#Lua文件路径" class="headerlink" title="Lua文件路径"></a>Lua文件路径</h2><p>不论是静态绑定还是动态绑定都需要一个Lua文件路径。它是项目目录**’Content/Script’<strong>的</strong>相对**路径。</p><hr><h1 id="Lua调用引擎"><a href="#Lua调用引擎" class="headerlink" title="Lua调用引擎"></a>Lua调用引擎</h1><p>UnLua提供了两种从Lua端访问引擎的方法：</p><ul><li>使用反射系统动态导出；</li><li>在反射系统外部静态导出类、成员变量、成员函数、全局函数和枚举。</li></ul><h2 id="使用反射系统动态导出"><a href="#使用反射系统动态导出" class="headerlink" title="使用反射系统动态导出"></a>使用反射系统动态导出</h2><p>利用反射系统进行动态导出，使代码简洁、直观，消除了大量的胶水代码。</p><h3 id="访问UCLASS"><a href="#访问UCLASS" class="headerlink" title="访问UCLASS"></a>访问UCLASS</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Widget = UWidgetBlueprintLibrary.Create(<span class="built_in">self</span>, UClass.Load(<span class="string">&quot;/Game/Core/UI/UMG_Main&quot;</span>))</span><br></pre></td></tr></table></figure><p><strong>UWidgetBlueprintLibrary</strong> 是一个UCLASS。类在Lua里的名称必须是 <strong>PrefixCPP</strong> + <strong>ClassName</strong> + **[<code>_C</code>]**，例如： <strong>AActor</strong> (原生类)， <strong>ABP_PlayerCharacter_C</strong>（蓝图类）</p><h3 id="访问UFUNCTION"><a href="#访问UFUNCTION" class="headerlink" title="访问UFUNCTION"></a>访问UFUNCTION</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">Widget:AddToViewport(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><strong>AddToViewport</strong> 是 <strong>UUserWidget</strong> 的一个UFUNCTION。 <strong>0</strong> 是函数的参数。如果（被标记为 <strong>‘BlueprintCallable’</strong> 或 **’Exec’**的）UFUNCTION的参数拥有默认值，那在Lua代码中可以忽略参数0：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">Widget:AddToViewport()</span><br></pre></td></tr></table></figure><h4 id="输出值处理"><a href="#输出值处理" class="headerlink" title="输出值处理"></a>输出值处理</h4><p>输出值包括 <strong>非常量引用参数</strong> and <strong>返回值参数</strong>。这些输出值分为 <strong>原生类型（bool, integer, number, string）</strong> 和 <strong>非原生类型 （用户自定义数据）</strong>。</p><h5 id="非常量引用参数"><a href="#非常量引用参数" class="headerlink" title="非常量引用参数"></a>非常量引用参数</h5><h6 id="原生类型"><a href="#原生类型" class="headerlink" title="原生类型"></a>原生类型</h6><p>Lua代码：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Level, Health, Name = <span class="built_in">self</span>:GetPlayerBaseInfo()</span><br></pre></td></tr></table></figure><h6 id="非原生类型"><a href="#非原生类型" class="headerlink" title="非原生类型"></a>非原生类型</h6><p>他们在Lua中有两种调用的方法：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> HitResult = FHitResult()</span><br><span class="line"><span class="built_in">self</span>:GetHitResult(HitResult)</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> HitResult = <span class="built_in">self</span>:GetHitResult()</span><br></pre></td></tr></table></figure><p>第一种方法和C++极为相似，当调用多次（比如在循环中）时，它比第二种方法效率高得多。</p><h5 id="返回值参数"><a href="#返回值参数" class="headerlink" title="返回值参数"></a>返回值参数</h5><h6 id="原生类型-1"><a href="#原生类型-1" class="headerlink" title="原生类型"></a>原生类型</h6><p>Lua代码：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> MeleeDamage = <span class="built_in">self</span>:GetMeleeDamage()</span><br></pre></td></tr></table></figure><h6 id="非原生类型-1"><a href="#非原生类型-1" class="headerlink" title="非原生类型"></a>非原生类型</h6><p>他在Lua中有三种调用方式：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Location = <span class="built_in">self</span>:GetCurrentLocation()</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Location = FVector()</span><br><span class="line"><span class="built_in">self</span>:GetCurrentLocation(Location)</span><br></pre></td></tr></table></figure><p>以及</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Location = FVector()</span><br><span class="line"><span class="keyword">local</span> LocationCopy = <span class="built_in">self</span>:GetCurrentLocation(Location)</span><br></pre></td></tr></table></figure><p>第一种方法最为直观，事实上，当调用多次（比如在循环中）时，后两种方法要比第一种方法效率高得多。最后一种方法等价于：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Location = FVector()</span><br><span class="line"><span class="built_in">self</span>:GetCurrentLocation(Location)</span><br><span class="line"><span class="keyword">local</span> LocationCopy = Location</span><br></pre></td></tr></table></figure><h4 id="潜在功能"><a href="#潜在功能" class="headerlink" title="潜在功能"></a>潜在功能</h4><p>潜在功能允许开发人员使用同步调用风格开发异步逻辑。一个典型的潜在功能例子是<strong>Delay</strong>：</p><p>你可以在Lua协程中调用潜在功能：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">resume</span>(</span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">create</span>(</span><br><span class="line">    <span class="function"><span class="keyword">function</span><span class="params">(GameMode, Duration)</span></span></span><br><span class="line">        UKismetSystemLibrary.Delay(GameMode, Duration)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    ), <span class="built_in">self</span>, <span class="number">5.0</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>UnLua对UFUNCTION的调用进行了以下几点优化：</p><ul><li>持久的缓冲参数</li><li>优化局部函数调用</li><li>优化参数传递</li><li>优化输出值处理</li></ul><h3 id="访问USTRUCT"><a href="#访问USTRUCT" class="headerlink" title="访问USTRUCT"></a>访问USTRUCT</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Position = FVector()</span><br></pre></td></tr></table></figure><p><strong>FVector</strong> 是一个USTRUCT。</p><h3 id="访问UPROPERTY"><a href="#访问UPROPERTY" class="headerlink" title="访问UPROPERTY"></a>访问UPROPERTY</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Position = FVector()</span><br><span class="line">Position.X = <span class="number">256.0</span></span><br></pre></td></tr></table></figure><p><strong>X</strong> 是 <strong>FVector</strong> 的一个UPROPERTY。</p><h4 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h4><ul><li><p>绑定</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">FloatTrack.InterpFunc:Bind(<span class="built_in">self</span>, BP_PlayerCharacter_C.OnZoomInOutUpdate)</span><br></pre></td></tr></table></figure></li><li><p><em>InterpFunc</em>* 是 FTimelineFloatTrack 的代理， <strong>‘Bind’</strong> 为 <strong>InterpFunc</strong> 绑定了一个回调函数 （<strong>BP_PlayerCharacter_C.OnZoomInOutUpdate</strong>）。</p></li><li><p>解除绑定</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">FloatTrack.InterpFunc:Unbind()</span><br></pre></td></tr></table></figure></li><li><p><em>InterpFunc</em>* 是 FTimelineFloatTrack 的代理， <strong>‘Unbind’</strong> 解除了 <strong>InterpFunc</strong> 所绑定的回调函数。</p></li><li><p>执行</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">FloatTrack.InterpFunc:Execute(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure></li><li><p><em>InterpFunc</em>* 是 FTimelineFloatTrack 的代理， <strong>‘Execute’</strong> 调用了绑定到<strong>InterpFunc</strong>对象上的函数。</p></li></ul><h4 id="多播代理"><a href="#多播代理" class="headerlink" title="多播代理"></a>多播代理</h4><ul><li><p>添加</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">self.ExitButton.OnClicked:Add(self, UMG_Main_C.OnClicked_ExitButton)</span><br></pre></td></tr></table></figure></li><li><p><em>OnClicked</em>* 是 UButton 的一个多播代理，**’Add’** 为 <strong>OnClicked</strong> 添加了一个回调（<strong>UMG_Main_C.OnClicked_ExitButton</strong>）。</p></li><li><p>移除</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">self.ExitButton.OnClicked:Remove(self, UMG_Main_C.OnClicked_ExitButton)</span><br></pre></td></tr></table></figure></li><li><p><em>OnClicked</em>* 是 UButton 的一个多播代理，**’Remove’** 在 <strong>OnClicked</strong> 上移除了一个回调（<strong>UMG_Main_C.OnClicked_ExitButton</strong>）。</p></li><li><p>清除</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">self.ExitButton.OnClicked:Clear()</span><br></pre></td></tr></table></figure></li><li><p><em>OnClicked</em>* 是 UButton 的一个多播代理，**’Clear’** 清除了在 <strong>OnClicked</strong> 上的所有回调。</p></li><li><p>广播</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">self.ExitButton.OnClicked:Broadcast()</span><br></pre></td></tr></table></figure></li><li><p><em>OnClicked</em>* 是 UButton 的一个多播代理，**’Broadcast’** 调用了所有绑定在 <strong>OnClicked</strong> 对象上的函数。</p></li></ul><h3 id="访问UENUM"><a href="#访问UENUM" class="headerlink" title="访问UENUM"></a>访问UENUM</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">Weapon:K2_AttachToComponent(Point, <span class="literal">nil</span>, EAttachmentRule.SnapToTarget, EAttachmentRule.SnapToTarget, EAttachmentRule.SnapToTarget)</span><br></pre></td></tr></table></figure><p><strong>EAttachmentRule</strong> 是一个枚举，<strong>SnapToTarget</strong> 是一个 <strong>EAttachmentRule</strong> 类型的枚举值。</p><h4 id="自定义碰撞枚举"><a href="#自定义碰撞枚举" class="headerlink" title="自定义碰撞枚举"></a>自定义碰撞枚举</h4><ul><li><p>EObjectTypeQuery</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> ObjectTypes = TArray(EObjectTypeQuery)</span><br><span class="line">ObjectTypes:Add(EObjectTypeQuery.Player)</span><br><span class="line">ObjectTypes:Add(EObjectTypeQuery.Enemy)</span><br><span class="line">ObjectTypes:Add(EObjectTypeQuery.Projectile)</span><br><span class="line"><span class="keyword">local</span> bHit = UKismetSystemLibrary.LineTraceSingleForObjects(<span class="built_in">self</span>, Start, End, ObjectTypes, <span class="literal">false</span>, <span class="literal">nil</span>, EDrawDebugTrace.None, HitResult, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></li><li><p><em>EObjectTypeQuery.Player<strong>，</strong>EObjectTypeQuery.Enemy*</em> 以及 <strong>EObjectTypeQuery.Projectile</strong> 都是自定义对象通道。</p></li><li><p>ETraceTypeQuery</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> bHit = UKismetSystemLibrary.LineTraceSingle(<span class="built_in">self</span>, Start, End, ETraceTypeQuery.Weapon, <span class="literal">false</span>, <span class="literal">nil</span>, EDrawDebugTrace.None, HitResult, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></li><li><p><em>ETraceTypeQuery.Weapon</em>* 是一个自定义跟踪通道。</p></li></ul><h3 id="手动导出库"><a href="#手动导出库" class="headerlink" title="手动导出库"></a>手动导出库</h3><p>出于灵活性与性能考虑，UnLua在引擎中手动导出了几个重要的类，包括以下（详见代码）：</p><h4 id="基础类"><a href="#基础类" class="headerlink" title="基础类"></a>基础类</h4><ul><li>UObject</li><li>UClass</li><li>UWorld</li></ul><h4 id="常见容器"><a href="#常见容器" class="headerlink" title="常见容器"></a>常见容器</h4><ul><li>TArray</li><li>TSet</li><li>TMap</li></ul><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Indices = TArray(<span class="number">0</span>)</span><br><span class="line">Indices:Add(<span class="number">1</span>)</span><br><span class="line">Indices:Add(<span class="number">3</span>)</span><br><span class="line">Indices:Remove(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">local</span> NbIndices = Indices:Length()</span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Vertices = TArray(FVector)</span><br><span class="line"><span class="keyword">local</span> Actors = TArray(AActor)</span><br></pre></td></tr></table></figure><h4 id="数学库"><a href="#数学库" class="headerlink" title="数学库"></a>数学库</h4><ul><li>FVector</li><li>FVector2D</li><li>FVector4</li><li>FQuat</li><li>FRotator</li><li>FTransform</li><li>FColor</li><li>FLinearColor</li><li>FIntPoint</li><li>FIntVector</li></ul><h2 id="静态导出"><a href="#静态导出" class="headerlink" title="静态导出"></a>静态导出</h2><p>UnLua提供了一个简单的解决方案，可以在反射系统外部静态地导出类、成员变量、成员函数、全局函数和枚举。</p><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><ul><li><p>没有反射的类</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">BEGIN_EXPORT_CLASS</span>(ClassType, ...)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">BEGIN_EXPORT_NAMED_CLASS</span>(ClassName, ClassType, ...)</span><br></pre></td></tr></table></figure></li><li><p><em>‘…’</em>* 表示构造函数中参数的类型列表。</p></li><li><p>有反射的类</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">BEGIN_EXPORT_REFLECTED_CLASS</span>(UObjectType)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">BEGIN_EXPORT_REFLECTED_CLASS</span>(NonUObjectType, ...)</span><br></pre></td></tr></table></figure></li><li><p><em>‘…’</em>* 表示构造函数中参数的类型列表。</p></li></ul><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_PROPERTY</span>(Property)</span><br></pre></td></tr></table></figure><p>或者（用于bitfield的bool属性）</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_BITFIELD_BOOL_PROPERTY</span>(Property)</span><br></pre></td></tr></table></figure><h4 id="成员函数"><a href="#成员函数" class="headerlink" title="成员函数"></a>成员函数</h4><h5 id="非静态成员函数"><a href="#非静态成员函数" class="headerlink" title="非静态成员函数"></a>非静态成员函数</h5><ul><li><p>紧凑型风格</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_FUNCTION</span>(Function)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_NAMED_FUNCTION</span>(Name, Function)</span><br></pre></td></tr></table></figure></li><li><p>完全型风格</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_FUNCTION_EX</span>(Name, RetType, Function, ...)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_CONST_FUNCTION_EX</span>(Name, RetType, Function, ...)</span><br></pre></td></tr></table></figure></li><li><p><em>‘…’</em>* 为参数类型列表。</p></li></ul><h5 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_STATIC_FUNCTION</span>(Function)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_STATIC_FUNCTION_EX</span>(Name, RetType, Function, ...)</span><br></pre></td></tr></table></figure><p><strong>‘…’</strong> 为参数类型列表。</p><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vec3</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="built_in">Vec3</span>() : <span class="built_in">x</span>(<span class="number">0</span>), <span class="built_in">y</span>(<span class="number">0</span>), <span class="built_in">z</span>(<span class="number">0</span>) &#123;&#125;</span><br><span class="line"><span class="built_in">Vec3</span>(<span class="keyword">float</span> _x, <span class="keyword">float</span> _y, <span class="keyword">float</span> _z) : <span class="built_in">x</span>(_x), <span class="built_in">y</span>(_y), <span class="built_in">z</span>(_z) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Set</span><span class="params">(<span class="keyword">const</span> Vec3 &amp;V)</span> </span>&#123; *<span class="keyword">this</span> = V; &#125;</span><br><span class="line"><span class="function">Vec3&amp; <span class="title">Get</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> *<span class="keyword">this</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get</span><span class="params">(Vec3 &amp;V)</span> <span class="keyword">const</span> </span>&#123; V = *<span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Vec3 &amp;V) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x == V.x &amp;&amp; y == V.y &amp;&amp; z == V.z; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> Vec3 <span class="title">Cross</span><span class="params">(<span class="keyword">const</span> Vec3 &amp;A, <span class="keyword">const</span> Vec3 &amp;B)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">Vec3</span>(A.y * B.z - A.z * B.y, A.z * B.x - A.x * B.z, A.x * B.y - A.y * B.x); &#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> Vec3 <span class="title">Multiply</span><span class="params">(<span class="keyword">const</span> Vec3 &amp;A, <span class="keyword">float</span> B)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">Vec3</span>(A.x * B, A.y * B, A.z * B); &#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> Vec3 <span class="title">Multiply</span><span class="params">(<span class="keyword">const</span> Vec3 &amp;A, <span class="keyword">const</span> Vec3 &amp;B)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">Vec3</span>(A.x * B.x, A.y * B.y, A.z * B.z); &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> x, y, z;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_EXPORT_CLASS</span>(Vec3, <span class="keyword">float</span>, <span class="keyword">float</span>, <span class="keyword">float</span>)</span><br><span class="line"><span class="built_in">ADD_PROPERTY</span>(x)</span><br><span class="line"><span class="built_in">ADD_PROPERTY</span>(y)</span><br><span class="line"><span class="built_in">ADD_PROPERTY</span>(z)</span><br><span class="line"><span class="built_in">ADD_FUNCTION</span>(Set)</span><br><span class="line"><span class="built_in">ADD_NAMED_FUNCTION</span>(<span class="string">&quot;Equals&quot;</span>, <span class="keyword">operator</span>==)</span><br><span class="line"><span class="built_in">ADD_FUNCTION_EX</span>(<span class="string">&quot;Get&quot;</span>, Vec3&amp;, Get)</span><br><span class="line"><span class="built_in">ADD_CONST_FUNCTION_EX</span>(<span class="string">&quot;GetCopy&quot;</span>, <span class="keyword">void</span>, Get, Vec3&amp;)</span><br><span class="line"><span class="built_in">ADD_STATIC_FUNCTION</span>(Cross)</span><br><span class="line"><span class="built_in">ADD_STATIC_FUNCTION_EX</span>(<span class="string">&quot;MulScalar&quot;</span>, Vec3, Multiply, <span class="keyword">const</span> Vec3&amp;, <span class="keyword">float</span>)</span><br><span class="line"><span class="built_in">ADD_STATIC_FUNCTION_EX</span>(<span class="string">&quot;MulVec&quot;</span>, Vec3, Multiply, <span class="keyword">const</span> Vec3&amp;, <span class="keyword">const</span> Vec3&amp;)</span><br><span class="line"><span class="built_in">END_EXPORT_CLASS</span>()</span><br><span class="line"><span class="built_in">IMPLEMENT_EXPORTED_CLASS</span>(Vec3)</span><br></pre></td></tr></table></figure><h3 id="全局函数"><a href="#全局函数" class="headerlink" title="全局函数"></a>全局函数</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">EXPORT_FUNCTION</span>(RetType, Function, ...)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EXPORT_FUNCTION_EX(Name, RetType, Function, ...)</span><br></pre></td></tr></table></figure><p><strong>‘…’</strong> 为参数类型列表。</p><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetEngineVersion</span><span class="params">(int32 &amp;MajorVer, int32 &amp;MinorVer, int32 &amp;PatchVer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MajorVer = ENGINE_MAJOR_VERSION;</span><br><span class="line">MinorVer = ENGINE_MINOR_VERSION;</span><br><span class="line">PatchVer = ENGINE_PATCH_VERSION;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">EXPORT_FUNCTION</span>(<span class="keyword">void</span>, GetEngineVersion, int32&amp;, int32&amp;, int32&amp;)</span><br></pre></td></tr></table></figure><h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h3><ul><li>普通枚举</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">EHand</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">LeftHand,</span><br><span class="line">RightHand</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_EXPORT_ENUM</span>(EHand)</span><br><span class="line"><span class="built_in">ADD_ENUM_VALUE</span>(LeftHand)</span><br><span class="line"><span class="built_in">ADD_ENUM_VALUE</span>(RightHand)</span><br><span class="line"><span class="built_in">END_EXPORT_ENUM</span>(EHand)</span><br></pre></td></tr></table></figure><ul><li>作用域为类的枚举</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="keyword">class</span> <span class="title">EEye</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">LeftEye,</span><br><span class="line">RightEye</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_EXPORT_ENUM</span>(EEye)</span><br><span class="line"><span class="built_in">ADD_SCOPED_ENUM_VALUE</span>(LeftEye)</span><br><span class="line"><span class="built_in">ADD_SCOPED_ENUM_VALUE</span>(RightEye)</span><br><span class="line"><span class="built_in">END_EXPORT_ENUM</span>(EEye)</span><br></pre></td></tr></table></figure><h2 id="可选“UE4”名称空间"><a href="#可选“UE4”名称空间" class="headerlink" title="可选“UE4”名称空间"></a>可选“UE4”名称空间</h2><p>UnLua提供了一个选项来添加一个命名空间**’UE4’<strong>到引擎中的所有类和枚举。你可以在</strong>UnLua.Build.cs**中找到这个选项。</p><p>如果这个选项被开启，你的Lua代码应该是这样子：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Position = UE4.FVector()</span><br></pre></td></tr></table></figure><hr><h1 id="引擎调用Lua"><a href="#引擎调用Lua" class="headerlink" title="引擎调用Lua"></a>引擎调用Lua</h1><p>UnLua提供了一个类似蓝图的解决方案来跨越C++/Script的边界。它允许C++/Blueprint代码调用在Lua代码中定义的函数。</p><h2 id="覆写蓝图事件"><a href="#覆写蓝图事件" class="headerlink" title="覆写蓝图事件"></a>覆写蓝图事件</h2><p>你可以在Lua代码里覆写所有的<strong>蓝图事件</strong>。<strong>蓝图事件</strong>包括：</p><ul><li>被标记为 <strong>‘BlueprintImplementableEvent’</strong> 的UFUNCTION</li><li>被标记为 <strong>‘BlueprintNativeEvent’</strong> 的UFUNCTION</li><li><strong>所有</strong>定义在蓝图里的事件或函数</li></ul><h3 id="示例（没有返回值的蓝图事件）"><a href="#示例（没有返回值的蓝图事件）" class="headerlink" title="示例（没有返回值的蓝图事件）"></a>示例（没有返回值的蓝图事件）</h3><p>你可以在Lua中这样覆写它：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:ReceiveBeginPlay</span><span class="params">()</span></span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;ReceiveBeginPlay in Lua!&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="示例（有返回值的蓝图事件）"><a href="#示例（有返回值的蓝图事件）" class="headerlink" title="示例（有返回值的蓝图事件）"></a>示例（有返回值的蓝图事件）</h3><p>在Lua中有两种覆写它的方式：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerCharacter_C:GetCharacterInfo</span><span class="params">(HP, Position, Name)</span></span></span><br><span class="line">Position.X = <span class="number">128.0</span></span><br><span class="line">Position.Y = <span class="number">128.0</span></span><br><span class="line">Position.Z = <span class="number">0.0</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">99</span>, <span class="literal">nil</span>, <span class="string">&quot;Marcus&quot;</span>, <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerCharacter_C:GetCharacterInfo</span><span class="params">(HP, Position, Name)</span></span></span><br><span class="line"><span class="keyword">return</span> <span class="number">99</span>, FVector(<span class="number">128.0</span>, <span class="number">128.0</span>, <span class="number">0.0</span>), <span class="string">&quot;Marcus&quot;</span>, <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>推荐第一种方式。</p><h2 id="覆写动画通知"><a href="#覆写动画通知" class="headerlink" title="覆写动画通知"></a>覆写动画通知</h2><p>动画通知：</p><p>Lua代码：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ABP_PlayerCharacter_C:AnimNotify_NotifyPhysics</span><span class="params">()</span></span></span><br><span class="line">UBPI_Interfaces_C.ChangeToRagdoll(<span class="built_in">self</span>.Pawn)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Lua的函数名称必须是 <strong>‘AnimNotify_’</strong> + <strong>通知名称</strong>。</p><h2 id="覆写输入事件"><a href="#覆写输入事件" class="headerlink" title="覆写输入事件"></a>覆写输入事件</h2><h4 id="操作输入"><a href="#操作输入" class="headerlink" title="操作输入"></a>操作输入</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:Aim_Pressed</span><span class="params">()</span></span></span><br><span class="line">UBPI_Interfaces_C.UpdateAiming(<span class="built_in">self</span>.Pawn, <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:Aim_Released</span><span class="params">()</span></span></span><br><span class="line">UBPI_Interfaces_C.UpdateAiming(<span class="built_in">self</span>.Pawn, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Lua的函数名称必须是 <strong>操作输入名称</strong> + **’_Pressed’ 或者 ‘_Released’**。</p><h4 id="轴输入"><a href="#轴输入" class="headerlink" title="轴输入"></a>轴输入</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:Turn</span><span class="params">(AxisValue)</span></span></span><br><span class="line"><span class="built_in">self</span>:AddYawInput(AxisValue)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:LookUp</span><span class="params">(AxisValue)</span></span></span><br><span class="line"><span class="built_in">self</span>:AddPitchInput(AxisValue)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Lua的函数名称必须是与 <strong>轴输入名称</strong> 一模一样。</p><h4 id="键盘输入"><a href="#键盘输入" class="headerlink" title="键盘输入"></a>键盘输入</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:P_Pressed</span><span class="params">()</span></span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;P_Pressed&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:P_Released</span><span class="params">()</span></span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;P_Released&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Lua的函数名称必须是 <strong>按键名称</strong> + **’_Pressed’ 或者 ‘_Released’**。</p><h4 id="其他输入"><a href="#其他输入" class="headerlink" title="其他输入"></a>其他输入</h4><p>你也可以在Lua中覆写 <strong>Touch/AxisKey/VectorAxis/Gesture Inputs</strong>。</p><h2 id="覆写复制通知"><a href="#覆写复制通知" class="headerlink" title="覆写复制通知"></a>覆写复制通知</h2><p>如果你正在开发专用/侦听服务器&amp;客户端游戏，你可以在Lua代码中覆写复制通知：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerCharacter_C:OnRep_Health</span><span class="params">(...)</span></span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;call OnRep_Health in Lua&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="调用被覆写的函数"><a href="#调用被覆写的函数" class="headerlink" title="调用被覆写的函数"></a>调用被覆写的函数</h2><p>如果你在Lua中覆写了一个蓝图事件、动画通知或者复制通知，你仍然可以访问原始函数实现。</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:ReceiveBeginPlay</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">local</span> Widget = UWidgetBlueprintLibrary.Create(<span class="built_in">self</span>, UClass.Load(<span class="string">&quot;/Game/Core/UI/UMG_Main&quot;</span>))</span><br><span class="line">Widget:AddToViewport()</span><br><span class="line"><span class="built_in">self</span>.Overridden.ReceiveBeginPlay(<span class="built_in">self</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>self.<em>Overridden</em>.ReceiveBeginPlay(self)</strong> 将会调用蓝图实现的 ‘ReceiveBeginPlay’。</p><h2 id="在C-中调用Lua函数"><a href="#在C-中调用Lua函数" class="headerlink" title="在C++中调用Lua函数"></a>在C++中调用Lua函数</h2><p>UnLua还提供了两种通用方法来调用全局Lua函数和C++代码中全局Lua表中的函数。</p><ul><li><p>全局函数</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... T&gt;</span><br><span class="line"><span class="function">FLuaRetValues <span class="title">Call</span><span class="params">(lua_State *L, <span class="keyword">const</span> <span class="keyword">char</span> *FuncName, T&amp;&amp;... Args)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>全局表中的函数</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... T&gt;</span><br><span class="line"><span class="function">FLuaRetValues <span class="title">CallTableFunc</span><span class="params">(lua_State *L, <span class="keyword">const</span> <span class="keyword">char</span> *TableName, <span class="keyword">const</span> <span class="keyword">char</span> *FuncName, T&amp;&amp;... Args)</span></span>;</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li>Lua模板文件导出</li></ul><p>你可以在蓝图中生成Lua的模板文件</p><p>模板文件：</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> 程序开发 </tag>
            
            <tag> Lua </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
